[
  {
    "file_name": "core/src/char/mod.rs",
    "item": {
      "type": "Module",
      "name": "char",
      "body": [
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_TAG_CONT",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U8",
                        "negative_sign": false,
                        "value": 128
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_TAG_TWO_B",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U8",
                        "negative_sign": false,
                        "value": 192
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_TAG_THREE_B",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U8",
                        "negative_sign": false,
                        "value": 224
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_TAG_FOUR_B",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U8",
                        "negative_sign": false,
                        "value": 240
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_MAX_ONE_B",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U32",
                        "negative_sign": false,
                        "value": 128
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_MAX_TWO_B",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U32",
                        "negative_sign": false,
                        "value": 2048
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_MAX_THREE_B",
            "value": {
              "Call": {
                "func": {
                  "LocalVar": "M.alloc"
                },
                "args": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "U32",
                        "negative_sign": false,
                        "value": 65536
                      }
                    }
                  }
                ],
                "kind": "Effectful"
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_MAX",
            "value": {
              "GetConst": [
                "core",
                "char",
                "methods",
                "MAX"
              ]
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_REPLACEMENT_CHARACTER",
            "value": {
              "GetConst": [
                "core",
                "char",
                "methods",
                "REPLACEMENT_CHARACTER"
              ]
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Const",
            "name": "value_UNICODE_VERSION",
            "value": {
              "GetConst": [
                "core",
                "char",
                "methods",
                "UNICODE_VERSION"
              ]
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Definition",
            "name": "decode_utf16",
            "path": [
              "core",
              "char",
              "decode_utf16"
            ],
            "snippet": [
              "pub fn decode_utf16<I: IntoIterator<Item = u16>>(iter: I) -> DecodeUtf16<I::IntoIter> {",
              "    self::decode::decode_utf16(iter)",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "I"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "iter",
                    {
                      "type": "Var",
                      "name": "I"
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "char",
                      "decode",
                      "DecodeUtf16"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Associated"
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "iter",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "iter"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "char",
                              "decode",
                              "decode_utf16"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "I"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "iter"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Definition",
            "name": "from_u32",
            "path": [
              "core",
              "char",
              "from_u32"
            ],
            "snippet": [
              "pub const fn from_u32(i: u32) -> Option<char> {",
              "    self::convert::from_u32(i)",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [],
              "signature_and_body": {
                "args": [
                  [
                    "i",
                    {
                      "type": "Path",
                      "path": [
                        "u32"
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "option",
                      "Option"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Path",
                      "path": [
                        "char"
                      ]
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "i",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "i"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "char",
                              "convert",
                              "from_u32"
                            ],
                            "generic_tys": []
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "i"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Definition",
            "name": "from_u32_unchecked",
            "path": [
              "core",
              "char",
              "from_u32_unchecked"
            ],
            "snippet": [
              "pub const unsafe fn from_u32_unchecked(i: u32) -> char {",
              "    // SAFETY: the safety contract must be upheld by the caller.",
              "    unsafe { self::convert::from_u32_unchecked(i) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [],
              "signature_and_body": {
                "args": [
                  [
                    "i",
                    {
                      "type": "Path",
                      "path": [
                        "u32"
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "char"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "i",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "i"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "char",
                              "convert",
                              "from_u32_unchecked"
                            ],
                            "generic_tys": []
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "i"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Definition",
            "name": "from_digit",
            "path": [
              "core",
              "char",
              "from_digit"
            ],
            "snippet": [
              "pub const fn from_digit(num: u32, radix: u32) -> Option<char> {",
              "    self::convert::from_digit(num, radix)",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [],
              "signature_and_body": {
                "args": [
                  [
                    "num",
                    {
                      "type": "Path",
                      "path": [
                        "u32"
                      ]
                    },
                    null
                  ],
                  [
                    "radix",
                    {
                      "type": "Path",
                      "path": [
                        "u32"
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "option",
                      "Option"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Path",
                      "path": [
                        "char"
                      ]
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "num",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "num"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Let": {
                        "name": "radix",
                        "is_user": false,
                        "init": {
                          "Call": {
                            "func": {
                              "LocalVar": "M.alloc"
                            },
                            "args": [
                              {
                                "LocalVar": "radix"
                              }
                            ],
                            "kind": "Effectful"
                          }
                        },
                        "body": {
                          "Call": {
                            "func": {
                              "GetFunction": {
                                "func": [
                                  "core",
                                  "char",
                                  "convert",
                                  "from_digit"
                                ],
                                "generic_tys": []
                              }
                            },
                            "args": [
                              {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "num"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "radix"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            ],
                            "kind": "Closure"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "EscapeUnicode",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "escape",
                    "EscapeIterInner"
                  ]
                },
                "consts": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "Usize",
                        "negative_sign": false,
                        "value": 10
                      }
                    }
                  }
                ],
                "tys": []
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "EscapeUnicode"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructTuple": {
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeUnicode"
                                  ],
                                  "fields": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetTraitMethod": {
                                            "trait_name": [
                                              "core",
                                              "clone",
                                              "Clone"
                                            ],
                                            "self_ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "escape",
                                                  "EscapeIterInner"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 10
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": []
                                            },
                                            "trait_tys": [],
                                            "method_name": "clone",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeUnicode"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "EscapeUnicode"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::EscapeUnicode"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "items": [
              {
                "name": "new",
                "snippet": [
                  "    const fn new(c: char) -> Self {",
                  "        Self(escape::EscapeIterInner::unicode(c))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "c",
                            {
                              "type": "Path",
                              "path": [
                                "char"
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeUnicode"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "c",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "c"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeUnicode"
                                ],
                                "fields": [
                                  {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "escape",
                                                "EscapeIterInner"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 10
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": []
                                          },
                                          "func": "unicode",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "c"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "    type Item = char;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "    fn next(&mut self) -> Option<char> {",
                  "        self.0.next().map(char::from)",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "option",
                                            "Option"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ]
                                      },
                                      "func": "map",
                                      "generic_tys": [
                                        {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        {
                                          "type": "Function",
                                          "args": [
                                            {
                                              "type": "Path",
                                              "path": [
                                                "u8"
                                              ]
                                            }
                                          ],
                                          "ret": {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetAssociatedFunction": {
                                            "ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "escape",
                                                  "EscapeIterInner"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 10
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": []
                                            },
                                            "func": "next",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeUnicode"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    },
                                    {
                                      "GetTraitMethod": {
                                        "trait_name": [
                                          "core",
                                          "convert",
                                          "From"
                                        ],
                                        "self_ty": {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        "trait_tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ],
                                        "method_name": "from",
                                        "generic_tys": []
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "    fn size_hint(&self) -> (usize, Option<usize>) {",
                  "        let n = self.0.len();",
                  "        (n, Some(n))",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Let": {
                                        "name": "n",
                                        "is_user": true,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "GetAssociatedFunction": {
                                                      "ty": {
                                                        "type": "Application",
                                                        "func": {
                                                          "type": "Path",
                                                          "path": [
                                                            "core",
                                                            "escape",
                                                            "EscapeIterInner"
                                                          ]
                                                        },
                                                        "consts": [
                                                          {
                                                            "Literal": {
                                                              "Integer": {
                                                                "kind": "Usize",
                                                                "negative_sign": false,
                                                                "value": 10
                                                              }
                                                            }
                                                          }
                                                        ],
                                                        "tys": []
                                                      },
                                                      "func": "len",
                                                      "generic_tys": []
                                                    }
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "self"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "InternalString": "core::char::EscapeUnicode"
                                                          },
                                                          {
                                                            "LocalVar": "0"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Closure"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Tuple": {
                                                  "elements": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "n"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "StructTuple": {
                                                        "path": [
                                                          "core",
                                                          "option",
                                                          "Option",
                                                          "Some"
                                                        ],
                                                        "fields": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "n"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "count",
                "snippet": [
                  "    fn count(self) -> usize {",
                  "        self.0.len()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeUnicode"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "escape",
                                            "EscapeIterInner"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 10
                                              }
                                            }
                                          }
                                        ],
                                        "tys": []
                                      },
                                      "func": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          },
                                          {
                                            "InternalString": "core::char::EscapeUnicode"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "last",
                "snippet": [
                  "    fn last(mut self) -> Option<char> {",
                  "        self.0.next_back().map(char::from)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeUnicode"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "option",
                                            "Option"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ]
                                      },
                                      "func": "map",
                                      "generic_tys": [
                                        {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        {
                                          "type": "Function",
                                          "args": [
                                            {
                                              "type": "Path",
                                              "path": [
                                                "u8"
                                              ]
                                            }
                                          ],
                                          "ret": {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetAssociatedFunction": {
                                            "ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "escape",
                                                  "EscapeIterInner"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 10
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": []
                                            },
                                            "func": "next_back",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeUnicode"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    },
                                    {
                                      "GetTraitMethod": {
                                        "trait_name": [
                                          "core",
                                          "convert",
                                          "From"
                                        ],
                                        "self_ty": {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        "trait_tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ],
                                        "method_name": "from",
                                        "generic_tys": []
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_by",
                "snippet": [
                  "    fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "        self.0.advance_by(n)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "escape",
                                                "EscapeIterInner"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 10
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": []
                                          },
                                          "func": "advance_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::EscapeUnicode"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "exact_size",
              "ExactSizeIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "len",
                "snippet": [
                  "    fn len(&self) -> usize {",
                  "        self.0.len()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "escape",
                                            "EscapeIterInner"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 10
                                              }
                                            }
                                          }
                                        ],
                                        "tys": []
                                      },
                                      "func": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::EscapeUnicode"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "is_empty",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeUnicode"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "        f.write_str(self.0.as_str())",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeUnicode"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "write_str",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "escape",
                                                      "EscapeIterInner"
                                                    ]
                                                  },
                                                  "consts": [
                                                    {
                                                      "Literal": {
                                                        "Integer": {
                                                          "kind": "Usize",
                                                          "negative_sign": false,
                                                          "value": 10
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "tys": []
                                                },
                                                "func": "as_str",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::EscapeUnicode"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "EscapeDefault",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "escape",
                    "EscapeIterInner"
                  ]
                },
                "consts": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "Usize",
                        "negative_sign": false,
                        "value": 10
                      }
                    }
                  }
                ],
                "tys": []
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "EscapeDefault"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructTuple": {
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeDefault"
                                  ],
                                  "fields": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetTraitMethod": {
                                            "trait_name": [
                                              "core",
                                              "clone",
                                              "Clone"
                                            ],
                                            "self_ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "escape",
                                                  "EscapeIterInner"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 10
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": []
                                            },
                                            "trait_tys": [],
                                            "method_name": "clone",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeDefault"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "EscapeDefault"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::EscapeDefault"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "items": [
              {
                "name": "printable",
                "snippet": [
                  "    const fn printable(c: ascii::Char) -> Self {",
                  "        Self(escape::EscapeIterInner::ascii(c.to_u8()))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "c",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "ascii",
                                  "ascii_char",
                                  "AsciiChar"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeDefault"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "c",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "c"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeDefault"
                                ],
                                "fields": [
                                  {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "escape",
                                                "EscapeIterInner"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 10
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": []
                                          },
                                          "func": "ascii",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "ascii",
                                                      "ascii_char",
                                                      "AsciiChar"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "to_u8",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "c"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "backslash",
                "snippet": [
                  "    const fn backslash(c: ascii::Char) -> Self {",
                  "        Self(escape::EscapeIterInner::backslash(c))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "c",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "ascii",
                                  "ascii_char",
                                  "AsciiChar"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeDefault"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "c",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "c"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeDefault"
                                ],
                                "fields": [
                                  {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "escape",
                                                "EscapeIterInner"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 10
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": []
                                          },
                                          "func": "backslash",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "c"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "unicode",
                "snippet": [
                  "    const fn unicode(c: char) -> Self {",
                  "        Self(escape::EscapeIterInner::unicode(c))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "c",
                            {
                              "type": "Path",
                              "path": [
                                "char"
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeDefault"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "c",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "c"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeDefault"
                                ],
                                "fields": [
                                  {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "escape",
                                                "EscapeIterInner"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 10
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": []
                                          },
                                          "func": "unicode",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "c"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "    type Item = char;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "    fn next(&mut self) -> Option<char> {",
                  "        self.0.next().map(char::from)",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "option",
                                            "Option"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ]
                                      },
                                      "func": "map",
                                      "generic_tys": [
                                        {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        {
                                          "type": "Function",
                                          "args": [
                                            {
                                              "type": "Path",
                                              "path": [
                                                "u8"
                                              ]
                                            }
                                          ],
                                          "ret": {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetAssociatedFunction": {
                                            "ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "escape",
                                                  "EscapeIterInner"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 10
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": []
                                            },
                                            "func": "next",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeDefault"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    },
                                    {
                                      "GetTraitMethod": {
                                        "trait_name": [
                                          "core",
                                          "convert",
                                          "From"
                                        ],
                                        "self_ty": {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        "trait_tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ],
                                        "method_name": "from",
                                        "generic_tys": []
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "    fn size_hint(&self) -> (usize, Option<usize>) {",
                  "        let n = self.0.len();",
                  "        (n, Some(n))",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Let": {
                                        "name": "n",
                                        "is_user": true,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "GetAssociatedFunction": {
                                                      "ty": {
                                                        "type": "Application",
                                                        "func": {
                                                          "type": "Path",
                                                          "path": [
                                                            "core",
                                                            "escape",
                                                            "EscapeIterInner"
                                                          ]
                                                        },
                                                        "consts": [
                                                          {
                                                            "Literal": {
                                                              "Integer": {
                                                                "kind": "Usize",
                                                                "negative_sign": false,
                                                                "value": 10
                                                              }
                                                            }
                                                          }
                                                        ],
                                                        "tys": []
                                                      },
                                                      "func": "len",
                                                      "generic_tys": []
                                                    }
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "self"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "InternalString": "core::char::EscapeDefault"
                                                          },
                                                          {
                                                            "LocalVar": "0"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Closure"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Tuple": {
                                                  "elements": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "n"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "StructTuple": {
                                                        "path": [
                                                          "core",
                                                          "option",
                                                          "Option",
                                                          "Some"
                                                        ],
                                                        "fields": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "n"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "count",
                "snippet": [
                  "    fn count(self) -> usize {",
                  "        self.0.len()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeDefault"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "escape",
                                            "EscapeIterInner"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 10
                                              }
                                            }
                                          }
                                        ],
                                        "tys": []
                                      },
                                      "func": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          },
                                          {
                                            "InternalString": "core::char::EscapeDefault"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "last",
                "snippet": [
                  "    fn last(mut self) -> Option<char> {",
                  "        self.0.next_back().map(char::from)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeDefault"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "option",
                                            "Option"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ]
                                      },
                                      "func": "map",
                                      "generic_tys": [
                                        {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        {
                                          "type": "Function",
                                          "args": [
                                            {
                                              "type": "Path",
                                              "path": [
                                                "u8"
                                              ]
                                            }
                                          ],
                                          "ret": {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetAssociatedFunction": {
                                            "ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "escape",
                                                  "EscapeIterInner"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 10
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": []
                                            },
                                            "func": "next_back",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeDefault"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    },
                                    {
                                      "GetTraitMethod": {
                                        "trait_name": [
                                          "core",
                                          "convert",
                                          "From"
                                        ],
                                        "self_ty": {
                                          "type": "Path",
                                          "path": [
                                            "char"
                                          ]
                                        },
                                        "trait_tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "u8"
                                            ]
                                          }
                                        ],
                                        "method_name": "from",
                                        "generic_tys": []
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_by",
                "snippet": [
                  "    fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "        self.0.advance_by(n)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "escape",
                                                "EscapeIterInner"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 10
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": []
                                          },
                                          "func": "advance_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::EscapeDefault"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "exact_size",
              "ExactSizeIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "len",
                "snippet": [
                  "    fn len(&self) -> usize {",
                  "        self.0.len()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetAssociatedFunction": {
                                      "ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "escape",
                                            "EscapeIterInner"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 10
                                              }
                                            }
                                          }
                                        ],
                                        "tys": []
                                      },
                                      "func": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::EscapeDefault"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "is_empty",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDefault"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "        f.write_str(self.0.as_str())",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDefault"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "write_str",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "escape",
                                                      "EscapeIterInner"
                                                    ]
                                                  },
                                                  "consts": [
                                                    {
                                                      "Literal": {
                                                        "Integer": {
                                                          "kind": "Usize",
                                                          "negative_sign": false,
                                                          "value": 10
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "tys": []
                                                },
                                                "func": "as_str",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::EscapeDefault"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "EscapeDebug",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "char",
                    "EscapeDebugInner"
                  ]
                },
                "consts": [],
                "tys": []
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebug"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "EscapeDebug"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructTuple": {
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeDebug"
                                  ],
                                  "fields": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetTraitMethod": {
                                            "trait_name": [
                                              "core",
                                              "clone",
                                              "Clone"
                                            ],
                                            "self_ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "char",
                                                  "EscapeDebugInner"
                                                ]
                                              },
                                              "consts": [],
                                              "tys": []
                                            },
                                            "trait_tys": [],
                                            "method_name": "clone",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::EscapeDebug"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebug"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "EscapeDebug"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::EscapeDebug"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeEnum",
            "name": "EscapeDebugInner",
            "const_params": [],
            "ty_params": [],
            "variants": [
              {
                "name": "Bytes",
                "item": {
                  "Tuple": {
                    "tys": [
                      {
                        "type": "Application",
                        "func": {
                          "type": "Path",
                          "path": [
                            "core",
                            "escape",
                            "EscapeIterInner"
                          ]
                        },
                        "consts": [
                          {
                            "Literal": {
                              "Integer": {
                                "kind": "Usize",
                                "negative_sign": false,
                                "value": 10
                              }
                            }
                          }
                        ],
                        "tys": []
                      }
                    ]
                  }
                },
                "discriminant": null
              },
              {
                "name": "Char",
                "item": {
                  "Tuple": {
                    "tys": [
                      {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    ]
                  }
                },
                "discriminant": null
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebugInner"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebugInner"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "EscapeDebugInner"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Match": {
                                        "scrutinee": {
                                          "LocalVar": "self"
                                        },
                                        "arms": [
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ",
                                                  "is_user": false,
                                                  "init": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "γ"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ1_0",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            },
                                                            {
                                                              "InternalString": "core::char::EscapeDebugInner::Bytes"
                                                            },
                                                            {
                                                              "InternalInteger": 0
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "__self_0",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ1_0"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "StructTuple": {
                                                                    "path": [
                                                                      "core",
                                                                      "char",
                                                                      "EscapeDebugInner",
                                                                      "Bytes"
                                                                    ],
                                                                    "fields": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "GetTraitMethod": {
                                                                              "trait_name": [
                                                                                "core",
                                                                                "clone",
                                                                                "Clone"
                                                                              ],
                                                                              "self_ty": {
                                                                                "type": "Application",
                                                                                "func": {
                                                                                  "type": "Path",
                                                                                  "path": [
                                                                                    "core",
                                                                                    "escape",
                                                                                    "EscapeIterInner"
                                                                                  ]
                                                                                },
                                                                                "consts": [
                                                                                  {
                                                                                    "Literal": {
                                                                                      "Integer": {
                                                                                        "kind": "Usize",
                                                                                        "negative_sign": false,
                                                                                        "value": 10
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "tys": []
                                                                              },
                                                                              "trait_tys": [],
                                                                              "method_name": "clone",
                                                                              "generic_tys": []
                                                                            }
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Call": {
                                                                                "func": {
                                                                                  "LocalVar": "M.read"
                                                                                },
                                                                                "args": [
                                                                                  {
                                                                                    "LocalVar": "__self_0"
                                                                                  }
                                                                                ],
                                                                                "kind": "Effectful"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Closure"
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          },
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ",
                                                  "is_user": false,
                                                  "init": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "γ"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ1_0",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            },
                                                            {
                                                              "InternalString": "core::char::EscapeDebugInner::Char"
                                                            },
                                                            {
                                                              "InternalInteger": 0
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "__self_0",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ1_0"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "StructTuple": {
                                                                    "path": [
                                                                      "core",
                                                                      "char",
                                                                      "EscapeDebugInner",
                                                                      "Char"
                                                                    ],
                                                                    "fields": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "GetTraitMethod": {
                                                                              "trait_name": [
                                                                                "core",
                                                                                "clone",
                                                                                "Clone"
                                                                              ],
                                                                              "self_ty": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "char"
                                                                                ]
                                                                              },
                                                                              "trait_tys": [],
                                                                              "method_name": "clone",
                                                                              "generic_tys": []
                                                                            }
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Call": {
                                                                                "func": {
                                                                                  "LocalVar": "M.read"
                                                                                },
                                                                                "args": [
                                                                                  {
                                                                                    "LocalVar": "__self_0"
                                                                                  }
                                                                                ],
                                                                                "kind": "Effectful"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Closure"
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebugInner"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebugInner"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "Match": {
                                            "scrutinee": {
                                              "LocalVar": "self"
                                            },
                                            "arms": [
                                              {
                                                "Lambda": {
                                                  "args": [
                                                    [
                                                      "γ",
                                                      null
                                                    ]
                                                  ],
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "γ1_0",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                },
                                                                {
                                                                  "InternalString": "core::char::EscapeDebugInner::Bytes"
                                                                },
                                                                {
                                                                  "InternalInteger": 0
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Let": {
                                                              "name": "__self_0",
                                                              "is_user": false,
                                                              "init": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "γ1_0"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              "body": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetAssociatedFunction": {
                                                                            "ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "fmt",
                                                                                  "Formatter"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": []
                                                                            },
                                                                            "func": "debug_tuple_field1_finish",
                                                                            "generic_tys": []
                                                                          }
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "LocalVar": "f"
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "Literal": {
                                                                                    "String": "Bytes"
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "LocalVar": "__self_0"
                                                                          }
                                                                        ],
                                                                        "kind": "Closure"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "is_for_match": true,
                                                  "is_internal": true
                                                }
                                              },
                                              {
                                                "Lambda": {
                                                  "args": [
                                                    [
                                                      "γ",
                                                      null
                                                    ]
                                                  ],
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "γ1_0",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                },
                                                                {
                                                                  "InternalString": "core::char::EscapeDebugInner::Char"
                                                                },
                                                                {
                                                                  "InternalInteger": 0
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Let": {
                                                              "name": "__self_0",
                                                              "is_user": false,
                                                              "init": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "γ1_0"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              "body": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetAssociatedFunction": {
                                                                            "ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "fmt",
                                                                                  "Formatter"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": []
                                                                            },
                                                                            "func": "debug_tuple_field1_finish",
                                                                            "generic_tys": []
                                                                          }
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "LocalVar": "f"
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "Literal": {
                                                                                    "String": "Char"
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "LocalVar": "__self_0"
                                                                          }
                                                                        ],
                                                                        "kind": "Closure"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "is_for_match": true,
                                                  "is_internal": true
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "items": [
              {
                "name": "printable",
                "snippet": [
                  "    const fn printable(chr: char) -> Self {",
                  "        Self(EscapeDebugInner::Char(chr))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "chr",
                            {
                              "type": "Path",
                              "path": [
                                "char"
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeDebug"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "chr",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "chr"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeDebug"
                                ],
                                "fields": [
                                  {
                                    "StructTuple": {
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebugInner",
                                        "Char"
                                      ],
                                      "fields": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "chr"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "backslash",
                "snippet": [
                  "    const fn backslash(c: ascii::Char) -> Self {",
                  "        Self(EscapeDebugInner::Bytes(escape::EscapeIterInner::backslash(c)))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "c",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "ascii",
                                  "ascii_char",
                                  "AsciiChar"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeDebug"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "c",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "c"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeDebug"
                                ],
                                "fields": [
                                  {
                                    "StructTuple": {
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebugInner",
                                        "Bytes"
                                      ],
                                      "fields": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "escape",
                                                      "EscapeIterInner"
                                                    ]
                                                  },
                                                  "consts": [
                                                    {
                                                      "Literal": {
                                                        "Integer": {
                                                          "kind": "Usize",
                                                          "negative_sign": false,
                                                          "value": 10
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "tys": []
                                                },
                                                "func": "backslash",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "c"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "unicode",
                "snippet": [
                  "    const fn unicode(c: char) -> Self {",
                  "        Self(EscapeDebugInner::Bytes(escape::EscapeIterInner::unicode(c)))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "c",
                            {
                              "type": "Path",
                              "path": [
                                "char"
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "EscapeDebug"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "c",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "c"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructTuple": {
                                "path": [
                                  "core",
                                  "char",
                                  "EscapeDebug"
                                ],
                                "fields": [
                                  {
                                    "StructTuple": {
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebugInner",
                                        "Bytes"
                                      ],
                                      "fields": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "escape",
                                                      "EscapeIterInner"
                                                    ]
                                                  },
                                                  "consts": [
                                                    {
                                                      "Literal": {
                                                        "Integer": {
                                                          "kind": "Usize",
                                                          "negative_sign": false,
                                                          "value": 10
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "tys": []
                                                },
                                                "func": "unicode",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "c"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clear",
                "snippet": [
                  "    fn clear(&mut self) {",
                  "        self.0 = EscapeDebugInner::Bytes(escape::EscapeIterInner::empty());",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "char",
                                      "EscapeDebug"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "unit"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Let": {
                                      "name": null,
                                      "is_user": true,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.write"
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  {
                                                    "InternalString": "core::char::EscapeDebug"
                                                  },
                                                  {
                                                    "LocalVar": "0"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "StructTuple": {
                                                "path": [
                                                  "core",
                                                  "char",
                                                  "EscapeDebugInner",
                                                  "Bytes"
                                                ],
                                                "fields": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "GetAssociatedFunction": {
                                                          "ty": {
                                                            "type": "Application",
                                                            "func": {
                                                              "type": "Path",
                                                              "path": [
                                                                "core",
                                                                "escape",
                                                                "EscapeIterInner"
                                                              ]
                                                            },
                                                            "consts": [
                                                              {
                                                                "Literal": {
                                                                  "Integer": {
                                                                    "kind": "Usize",
                                                                    "negative_sign": false,
                                                                    "value": 10
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "tys": []
                                                          },
                                                          "func": "empty",
                                                          "generic_tys": []
                                                        }
                                                      },
                                                      "args": [],
                                                      "kind": "Closure"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Tuple": {
                                                "elements": []
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "    type Item = char;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "    fn next(&mut self) -> Option<char> {",
                  "        match self.0 {",
                  "            EscapeDebugInner::Bytes(ref mut bytes) => bytes.next().map(char::from),",
                  "            EscapeDebugInner::Char(chr) => {",
                  "                self.clear();",
                  "                Some(chr)",
                  "            }",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebug"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Match": {
                                        "scrutinee": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::EscapeDebug"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "arms": [
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ0_0",
                                                  "is_user": false,
                                                  "init": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "γ"
                                                        },
                                                        {
                                                          "InternalString": "core::char::EscapeDebugInner::Bytes"
                                                        },
                                                        {
                                                          "InternalInteger": 0
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": "bytes",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.alloc"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ0_0"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.alloc"
                                                          },
                                                          "args": [
                                                            {
                                                              "Call": {
                                                                "func": {
                                                                  "GetAssociatedFunction": {
                                                                    "ty": {
                                                                      "type": "Application",
                                                                      "func": {
                                                                        "type": "Path",
                                                                        "path": [
                                                                          "core",
                                                                          "option",
                                                                          "Option"
                                                                        ]
                                                                      },
                                                                      "consts": [],
                                                                      "tys": [
                                                                        {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "u8"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    "func": "map",
                                                                    "generic_tys": [
                                                                      {
                                                                        "type": "Path",
                                                                        "path": [
                                                                          "char"
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "Function",
                                                                        "args": [
                                                                          {
                                                                            "type": "Path",
                                                                            "path": [
                                                                              "u8"
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "ret": {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "char"
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                "args": [
                                                                  {
                                                                    "Call": {
                                                                      "func": {
                                                                        "GetAssociatedFunction": {
                                                                          "ty": {
                                                                            "type": "Application",
                                                                            "func": {
                                                                              "type": "Path",
                                                                              "path": [
                                                                                "core",
                                                                                "escape",
                                                                                "EscapeIterInner"
                                                                              ]
                                                                            },
                                                                            "consts": [
                                                                              {
                                                                                "Literal": {
                                                                                  "Integer": {
                                                                                    "kind": "Usize",
                                                                                    "negative_sign": false,
                                                                                    "value": 10
                                                                                  }
                                                                                }
                                                                              }
                                                                            ],
                                                                            "tys": []
                                                                          },
                                                                          "func": "next",
                                                                          "generic_tys": []
                                                                        }
                                                                      },
                                                                      "args": [
                                                                        {
                                                                          "Call": {
                                                                            "func": {
                                                                              "LocalVar": "M.read"
                                                                            },
                                                                            "args": [
                                                                              {
                                                                                "LocalVar": "bytes"
                                                                              }
                                                                            ],
                                                                            "kind": "Effectful"
                                                                          }
                                                                        }
                                                                      ],
                                                                      "kind": "Closure"
                                                                    }
                                                                  },
                                                                  {
                                                                    "GetTraitMethod": {
                                                                      "trait_name": [
                                                                        "core",
                                                                        "convert",
                                                                        "From"
                                                                      ],
                                                                      "self_ty": {
                                                                        "type": "Path",
                                                                        "path": [
                                                                          "char"
                                                                        ]
                                                                      },
                                                                      "trait_tys": [
                                                                        {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "u8"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "method_name": "from",
                                                                      "generic_tys": []
                                                                    }
                                                                  }
                                                                ],
                                                                "kind": "Closure"
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          },
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ0_0",
                                                  "is_user": false,
                                                  "init": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "γ"
                                                        },
                                                        {
                                                          "InternalString": "core::char::EscapeDebugInner::Char"
                                                        },
                                                        {
                                                          "InternalInteger": 0
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": "chr",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.copy"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ0_0"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": null,
                                                          "is_user": true,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "GetAssociatedFunction": {
                                                                        "ty": {
                                                                          "type": "Application",
                                                                          "func": {
                                                                            "type": "Path",
                                                                            "path": [
                                                                              "core",
                                                                              "char",
                                                                              "EscapeDebug"
                                                                            ]
                                                                          },
                                                                          "consts": [],
                                                                          "tys": []
                                                                        },
                                                                        "func": "clear",
                                                                        "generic_tys": []
                                                                      }
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "LocalVar": "self"
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "Closure"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "StructTuple": {
                                                                    "path": [
                                                                      "core",
                                                                      "option",
                                                                      "Option",
                                                                      "Some"
                                                                    ],
                                                                    "fields": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "LocalVar": "chr"
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "    fn size_hint(&self) -> (usize, Option<usize>) {",
                  "        let n = self.len();",
                  "        (n, Some(n))",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebug"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Let": {
                                        "name": "n",
                                        "is_user": true,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "GetTraitMethod": {
                                                      "trait_name": [
                                                        "core",
                                                        "iter",
                                                        "traits",
                                                        "exact_size",
                                                        "ExactSizeIterator"
                                                      ],
                                                      "self_ty": {
                                                        "type": "Application",
                                                        "func": {
                                                          "type": "Path",
                                                          "path": [
                                                            "core",
                                                            "char",
                                                            "EscapeDebug"
                                                          ]
                                                        },
                                                        "consts": [],
                                                        "tys": []
                                                      },
                                                      "trait_tys": [],
                                                      "method_name": "len",
                                                      "generic_tys": []
                                                    }
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Closure"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Tuple": {
                                                  "elements": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "n"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "StructTuple": {
                                                        "path": [
                                                          "core",
                                                          "option",
                                                          "Option",
                                                          "Some"
                                                        ],
                                                        "fields": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "n"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "count",
                "snippet": [
                  "    fn count(self) -> usize {",
                  "        self.len()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "EscapeDebug"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "EscapeDebug"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "last",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "advance_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "exact_size",
              "ExactSizeIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "len",
                "snippet": [
                  "    fn len(&self) -> usize {",
                  "        match &self.0 {",
                  "            EscapeDebugInner::Bytes(bytes) => bytes.len(),",
                  "            EscapeDebugInner::Char(_) => 1,",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebug"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Match": {
                                        "scrutinee": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::EscapeDebug"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "arms": [
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ",
                                                  "is_user": false,
                                                  "init": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "γ"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ1_0",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            },
                                                            {
                                                              "InternalString": "core::char::EscapeDebugInner::Bytes"
                                                            },
                                                            {
                                                              "InternalInteger": 0
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "bytes",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ1_0"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "GetAssociatedFunction": {
                                                                        "ty": {
                                                                          "type": "Application",
                                                                          "func": {
                                                                            "type": "Path",
                                                                            "path": [
                                                                              "core",
                                                                              "escape",
                                                                              "EscapeIterInner"
                                                                            ]
                                                                          },
                                                                          "consts": [
                                                                            {
                                                                              "Literal": {
                                                                                "Integer": {
                                                                                  "kind": "Usize",
                                                                                  "negative_sign": false,
                                                                                  "value": 10
                                                                                }
                                                                              }
                                                                            }
                                                                          ],
                                                                          "tys": []
                                                                        },
                                                                        "func": "len",
                                                                        "generic_tys": []
                                                                      }
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "LocalVar": "bytes"
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "Closure"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          },
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ",
                                                  "is_user": false,
                                                  "init": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "γ"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ1_0",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            },
                                                            {
                                                              "InternalString": "core::char::EscapeDebugInner::Char"
                                                            },
                                                            {
                                                              "InternalInteger": 0
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.alloc"
                                                          },
                                                          "args": [
                                                            {
                                                              "Literal": {
                                                                "Integer": {
                                                                  "kind": "Usize",
                                                                  "negative_sign": false,
                                                                  "value": 1
                                                                }
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "is_empty",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "EscapeDebug"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "        match &self.0 {",
                  "            EscapeDebugInner::Bytes(bytes) => f.write_str(bytes.as_str()),",
                  "            EscapeDebugInner::Char(chr) => f.write_char(*chr),",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "EscapeDebug"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "Match": {
                                            "scrutinee": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "LocalVar": "self"
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        {
                                                          "InternalString": "core::char::EscapeDebug"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "arms": [
                                              {
                                                "Lambda": {
                                                  "args": [
                                                    [
                                                      "γ",
                                                      null
                                                    ]
                                                  ],
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "γ1_0",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                },
                                                                {
                                                                  "InternalString": "core::char::EscapeDebugInner::Bytes"
                                                                },
                                                                {
                                                                  "InternalInteger": 0
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Let": {
                                                              "name": "bytes",
                                                              "is_user": false,
                                                              "init": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "γ1_0"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              "body": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetAssociatedFunction": {
                                                                            "ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "fmt",
                                                                                  "Formatter"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": []
                                                                            },
                                                                            "func": "write_str",
                                                                            "generic_tys": []
                                                                          }
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "LocalVar": "f"
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "GetAssociatedFunction": {
                                                                                  "ty": {
                                                                                    "type": "Application",
                                                                                    "func": {
                                                                                      "type": "Path",
                                                                                      "path": [
                                                                                        "core",
                                                                                        "escape",
                                                                                        "EscapeIterInner"
                                                                                      ]
                                                                                    },
                                                                                    "consts": [
                                                                                      {
                                                                                        "Literal": {
                                                                                          "Integer": {
                                                                                            "kind": "Usize",
                                                                                            "negative_sign": false,
                                                                                            "value": 10
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "tys": []
                                                                                  },
                                                                                  "func": "as_str",
                                                                                  "generic_tys": []
                                                                                }
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.read"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "LocalVar": "bytes"
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "Closure"
                                                                            }
                                                                          }
                                                                        ],
                                                                        "kind": "Closure"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "is_for_match": true,
                                                  "is_internal": true
                                                }
                                              },
                                              {
                                                "Lambda": {
                                                  "args": [
                                                    [
                                                      "γ",
                                                      null
                                                    ]
                                                  ],
                                                  "body": {
                                                    "Let": {
                                                      "name": "γ",
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "γ"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Let": {
                                                          "name": "γ1_0",
                                                          "is_user": false,
                                                          "init": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                },
                                                                {
                                                                  "InternalString": "core::char::EscapeDebugInner::Char"
                                                                },
                                                                {
                                                                  "InternalInteger": 0
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          "body": {
                                                            "Let": {
                                                              "name": "chr",
                                                              "is_user": false,
                                                              "init": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "γ1_0"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              "body": {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetTraitMethod": {
                                                                            "trait_name": [
                                                                              "core",
                                                                              "fmt",
                                                                              "Write"
                                                                            ],
                                                                            "self_ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "fmt",
                                                                                  "Formatter"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": []
                                                                            },
                                                                            "trait_tys": [],
                                                                            "method_name": "write_char",
                                                                            "generic_tys": []
                                                                          }
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "LocalVar": "f"
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.read"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "LocalVar": "chr"
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          }
                                                                        ],
                                                                        "kind": "Closure"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "is_for_match": true,
                                                  "is_internal": true
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "ToLowercase",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "char",
                    "CaseMappingIter"
                  ]
                },
                "consts": [],
                "tys": []
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "        Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "ToLowercase"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::ToLowercase"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "        Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "ToLowercase"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructTuple": {
                                  "path": [
                                    "core",
                                    "char",
                                    "ToLowercase"
                                  ],
                                  "fields": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetTraitMethod": {
                                            "trait_name": [
                                              "core",
                                              "clone",
                                              "Clone"
                                            ],
                                            "self_ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "char",
                                                  "CaseMappingIter"
                                                ]
                                              },
                                              "consts": [],
                                              "tys": []
                                            },
                                            "trait_tys": [],
                                            "method_name": "clone",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::ToLowercase"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "            type Item = char;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "            fn next(&mut self) -> Option<char> {",
                  "                self.0.next()",
                  "            }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "next",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToLowercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "            fn size_hint(&self) -> (usize, Option<usize>) {",
                  "                self.0.size_hint()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "size_hint",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToLowercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "fold",
                "snippet": [
                  "            fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc",
                  "            where",
                  "                Fold: FnMut(Acc, Self::Item) -> Acc,",
                  "            {",
                  "                self.0.fold(init, fold)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "Acc",
                          "Fold"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToLowercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ],
                            [
                              "init",
                              {
                                "type": "Var",
                                "name": "Acc"
                              },
                              null
                            ],
                            [
                              "fold",
                              {
                                "type": "Var",
                                "name": "Fold"
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Var",
                            "name": "Acc"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "init",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "init"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": "fold",
                                      "is_user": false,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "fold"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "iter",
                                                "traits",
                                                "iterator",
                                                "Iterator"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "char",
                                                    "CaseMappingIter"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": []
                                              },
                                              "trait_tys": [],
                                              "method_name": "fold",
                                              "generic_tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "Acc"
                                                },
                                                {
                                                  "type": "Var",
                                                  "name": "Fold"
                                                }
                                              ]
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        },
                                                        {
                                                          "InternalString": "core::char::ToLowercase"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "init"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "fold"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "count",
                "snippet": [
                  "            fn count(self) -> usize {",
                  "                self.0.count()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToLowercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "count",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::ToLowercase"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "last",
                "snippet": [
                  "            fn last(self) -> Option<Self::Item> {",
                  "                self.0.last()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToLowercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Associated"
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "last",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::ToLowercase"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_by",
                "snippet": [
                  "            fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "                self.0.advance_by(n)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "iterator",
                                            "Iterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "advance_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToLowercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": [
                  "            unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item {",
                  "                // SAFETY: just forwarding requirements to caller",
                  "                unsafe { self.0.__iterator_get_unchecked(idx) }",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "idx",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Associated"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "idx",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "idx"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "iterator",
                                            "Iterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "__iterator_get_unchecked",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToLowercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "idx"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "double_ended",
              "DoubleEndedIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "next_back",
                "snippet": [
                  "            fn next_back(&mut self) -> Option<char> {",
                  "                self.0.next_back()",
                  "            }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "double_ended",
                                        "DoubleEndedIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "next_back",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToLowercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "rfold",
                "snippet": [
                  "            fn rfold<Acc, Fold>(self, init: Acc, rfold: Fold) -> Acc",
                  "            where",
                  "                Fold: FnMut(Acc, Self::Item) -> Acc,",
                  "            {",
                  "                self.0.rfold(init, rfold)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "Acc",
                          "Fold"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToLowercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ],
                            [
                              "init",
                              {
                                "type": "Var",
                                "name": "Acc"
                              },
                              null
                            ],
                            [
                              "rfold",
                              {
                                "type": "Var",
                                "name": "Fold"
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Var",
                            "name": "Acc"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "init",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "init"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": "rfold",
                                      "is_user": false,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "rfold"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "iter",
                                                "traits",
                                                "double_ended",
                                                "DoubleEndedIterator"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "char",
                                                    "CaseMappingIter"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": []
                                              },
                                              "trait_tys": [],
                                              "method_name": "rfold",
                                              "generic_tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "Acc"
                                                },
                                                {
                                                  "type": "Var",
                                                  "name": "Fold"
                                                }
                                              ]
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        },
                                                        {
                                                          "InternalString": "core::char::ToLowercase"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "init"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "rfold"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_back_by",
                "snippet": [
                  "            fn advance_back_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "                self.0.advance_back_by(n)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "double_ended",
                                            "DoubleEndedIterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "advance_back_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToLowercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "nth_back",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_rfold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rfind",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "exact_size",
              "ExactSizeIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "len",
                "snippet": [
                  "            fn len(&self) -> usize {",
                  "                self.0.len()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToLowercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "is_empty",
                "snippet": [
                  "            fn is_empty(&self) -> bool {",
                  "                self.0.is_empty()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "bool"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "is_empty",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToLowercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "TrustedLen"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "adapters",
              "zip",
              "TrustedRandomAccessNoCoerce"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "value_MAY_HAVE_SIDE_EFFECT",
                "snippet": [
                  "            const MAY_HAVE_SIDE_EFFECT: bool = false;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Const": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "bool"
                        ]
                      },
                      "body": {
                        "Call": {
                          "func": {
                            "LocalVar": "M.alloc"
                          },
                          "args": [
                            {
                              "Literal": {
                                "Bool": false
                              }
                            }
                          ],
                          "kind": "Effectful"
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "adapters",
              "zip",
              "TrustedRandomAccess"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToLowercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "                fmt::Display::fmt(&self.0, f)",
                  "            }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToLowercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "fmt",
                                            "Display"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "fmt",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToLowercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "ToUppercase",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "char",
                    "CaseMappingIter"
                  ]
                },
                "consts": [],
                "tys": []
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "        Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "ToUppercase"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::ToUppercase"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "        Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "ToUppercase"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructTuple": {
                                  "path": [
                                    "core",
                                    "char",
                                    "ToUppercase"
                                  ],
                                  "fields": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetTraitMethod": {
                                            "trait_name": [
                                              "core",
                                              "clone",
                                              "Clone"
                                            ],
                                            "self_ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "char",
                                                  "CaseMappingIter"
                                                ]
                                              },
                                              "consts": [],
                                              "tys": []
                                            },
                                            "trait_tys": [],
                                            "method_name": "clone",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::ToUppercase"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "            type Item = char;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "            fn next(&mut self) -> Option<char> {",
                  "                self.0.next()",
                  "            }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "next",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToUppercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "            fn size_hint(&self) -> (usize, Option<usize>) {",
                  "                self.0.size_hint()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "size_hint",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToUppercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "fold",
                "snippet": [
                  "            fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc",
                  "            where",
                  "                Fold: FnMut(Acc, Self::Item) -> Acc,",
                  "            {",
                  "                self.0.fold(init, fold)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "Acc",
                          "Fold"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToUppercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ],
                            [
                              "init",
                              {
                                "type": "Var",
                                "name": "Acc"
                              },
                              null
                            ],
                            [
                              "fold",
                              {
                                "type": "Var",
                                "name": "Fold"
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Var",
                            "name": "Acc"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "init",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "init"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": "fold",
                                      "is_user": false,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "fold"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "iter",
                                                "traits",
                                                "iterator",
                                                "Iterator"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "char",
                                                    "CaseMappingIter"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": []
                                              },
                                              "trait_tys": [],
                                              "method_name": "fold",
                                              "generic_tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "Acc"
                                                },
                                                {
                                                  "type": "Var",
                                                  "name": "Fold"
                                                }
                                              ]
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        },
                                                        {
                                                          "InternalString": "core::char::ToUppercase"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "init"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "fold"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "count",
                "snippet": [
                  "            fn count(self) -> usize {",
                  "                self.0.count()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToUppercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "count",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::ToUppercase"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "last",
                "snippet": [
                  "            fn last(self) -> Option<Self::Item> {",
                  "                self.0.last()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToUppercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Associated"
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "last",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::ToUppercase"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_by",
                "snippet": [
                  "            fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "                self.0.advance_by(n)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "iterator",
                                            "Iterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "advance_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToUppercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": [
                  "            unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item {",
                  "                // SAFETY: just forwarding requirements to caller",
                  "                unsafe { self.0.__iterator_get_unchecked(idx) }",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "idx",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Associated"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "idx",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "idx"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "iterator",
                                            "Iterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "__iterator_get_unchecked",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToUppercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "idx"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "double_ended",
              "DoubleEndedIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "next_back",
                "snippet": [
                  "            fn next_back(&mut self) -> Option<char> {",
                  "                self.0.next_back()",
                  "            }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "double_ended",
                                        "DoubleEndedIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "next_back",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToUppercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "rfold",
                "snippet": [
                  "            fn rfold<Acc, Fold>(self, init: Acc, rfold: Fold) -> Acc",
                  "            where",
                  "                Fold: FnMut(Acc, Self::Item) -> Acc,",
                  "            {",
                  "                self.0.rfold(init, rfold)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "Acc",
                          "Fold"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "ToUppercase"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ],
                            [
                              "init",
                              {
                                "type": "Var",
                                "name": "Acc"
                              },
                              null
                            ],
                            [
                              "rfold",
                              {
                                "type": "Var",
                                "name": "Fold"
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Var",
                            "name": "Acc"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "init",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "init"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": "rfold",
                                      "is_user": false,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "rfold"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "iter",
                                                "traits",
                                                "double_ended",
                                                "DoubleEndedIterator"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "char",
                                                    "CaseMappingIter"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": []
                                              },
                                              "trait_tys": [],
                                              "method_name": "rfold",
                                              "generic_tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "Acc"
                                                },
                                                {
                                                  "type": "Var",
                                                  "name": "Fold"
                                                }
                                              ]
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        },
                                                        {
                                                          "InternalString": "core::char::ToUppercase"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "init"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "rfold"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_back_by",
                "snippet": [
                  "            fn advance_back_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "                self.0.advance_back_by(n)",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "double_ended",
                                            "DoubleEndedIterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "advance_back_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToUppercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "nth_back",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_rfold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rfind",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "exact_size",
              "ExactSizeIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "len",
                "snippet": [
                  "            fn len(&self) -> usize {",
                  "                self.0.len()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToUppercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "is_empty",
                "snippet": [
                  "            fn is_empty(&self) -> bool {",
                  "                self.0.is_empty()",
                  "            }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "bool"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "char",
                                            "CaseMappingIter"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": []
                                      },
                                      "trait_tys": [],
                                      "method_name": "is_empty",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::ToUppercase"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "TrustedLen"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "adapters",
              "zip",
              "TrustedRandomAccessNoCoerce"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "value_MAY_HAVE_SIDE_EFFECT",
                "snippet": [
                  "            const MAY_HAVE_SIDE_EFFECT: bool = false;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Const": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "bool"
                        ]
                      },
                      "body": {
                        "Call": {
                          "func": {
                            "LocalVar": "M.alloc"
                          },
                          "args": [
                            {
                              "Literal": {
                                "Bool": false
                              }
                            }
                          ],
                          "kind": "Effectful"
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "adapters",
              "zip",
              "TrustedRandomAccess"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "ToUppercase"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "                fmt::Display::fmt(&self.0, f)",
                  "            }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "ToUppercase"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "fmt",
                                            "Display"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "char",
                                                "CaseMappingIter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "trait_tys": [],
                                          "method_name": "fmt",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::ToUppercase"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "CaseMappingIter",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "array",
                    "iter",
                    "IntoIter"
                  ]
                },
                "consts": [
                  {
                    "Literal": {
                      "Integer": {
                        "kind": "Usize",
                        "negative_sign": false,
                        "value": 3
                      }
                    }
                  }
                ],
                "tys": [
                  {
                    "type": "Path",
                    "path": [
                      "char"
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "CaseMappingIter"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::CaseMappingIter"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "CaseMappingIter"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructTuple": {
                                  "path": [
                                    "core",
                                    "char",
                                    "CaseMappingIter"
                                  ],
                                  "fields": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetTraitMethod": {
                                            "trait_name": [
                                              "core",
                                              "clone",
                                              "Clone"
                                            ],
                                            "self_ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "array",
                                                  "iter",
                                                  "IntoIter"
                                                ]
                                              },
                                              "consts": [
                                                {
                                                  "Literal": {
                                                    "Integer": {
                                                      "kind": "Usize",
                                                      "negative_sign": false,
                                                      "value": 3
                                                    }
                                                  }
                                                }
                                              ],
                                              "tys": [
                                                {
                                                  "type": "Path",
                                                  "path": [
                                                    "char"
                                                  ]
                                                }
                                              ]
                                            },
                                            "trait_tys": [],
                                            "method_name": "clone",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                {
                                                  "InternalString": "core::char::CaseMappingIter"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "items": [
              {
                "name": "new",
                "snippet": [
                  "    fn new(chars: [char; 3]) -> CaseMappingIter {",
                  "        let mut iter = chars.into_iter();",
                  "        if chars[2] == '\\0' {",
                  "            iter.next_back();",
                  "            if chars[1] == '\\0' {",
                  "                iter.next_back();",
                  "",
                  "                // Deliberately don't check `chars[0]`,",
                  "                // as '\\0' lowercases to itself",
                  "            }",
                  "        }",
                  "        CaseMappingIter(iter)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "chars",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "array"
                                ]
                              },
                              "consts": [
                                {
                                  "Literal": {
                                    "Integer": {
                                      "kind": "Usize",
                                      "negative_sign": false,
                                      "value": 3
                                    }
                                  }
                                }
                              ],
                              "tys": [
                                {
                                  "type": "Path",
                                  "path": [
                                    "char"
                                  ]
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "char",
                              "CaseMappingIter"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "chars",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "chars"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Let": {
                                      "name": "iter",
                                      "is_user": true,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "GetTraitMethod": {
                                                    "trait_name": [
                                                      "core",
                                                      "iter",
                                                      "traits",
                                                      "collect",
                                                      "IntoIterator"
                                                    ],
                                                    "self_ty": {
                                                      "type": "Application",
                                                      "func": {
                                                        "type": "Path",
                                                        "path": [
                                                          "array"
                                                        ]
                                                      },
                                                      "consts": [
                                                        {
                                                          "Literal": {
                                                            "Integer": {
                                                              "kind": "Usize",
                                                              "negative_sign": false,
                                                              "value": 3
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "tys": [
                                                        {
                                                          "type": "Path",
                                                          "path": [
                                                            "char"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "trait_tys": [],
                                                    "method_name": "into_iter",
                                                    "generic_tys": []
                                                  }
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "chars"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Closure"
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Let": {
                                          "name": null,
                                          "is_user": true,
                                          "init": {
                                            "Match": {
                                              "scrutinee": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Tuple": {
                                                        "elements": []
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              "arms": [
                                                {
                                                  "Lambda": {
                                                    "args": [
                                                      [
                                                        "γ",
                                                        null
                                                      ]
                                                    ],
                                                    "body": {
                                                      "Let": {
                                                        "name": "γ",
                                                        "is_user": false,
                                                        "init": {
                                                          "Use": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "BinOp.eq"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Index": {
                                                                                "base": {
                                                                                  "LocalVar": "chars"
                                                                                },
                                                                                "index": {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.alloc"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "Literal": {
                                                                                          "Integer": {
                                                                                            "kind": "Usize",
                                                                                            "negative_sign": false,
                                                                                            "value": 2
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      },
                                                                      {
                                                                        "Literal": {
                                                                          "Char": "\u0000"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        },
                                                        "body": {
                                                          "Let": {
                                                            "name": null,
                                                            "is_user": false,
                                                            "init": {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.is_constant_or_break_match"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "Call": {
                                                                      "func": {
                                                                        "LocalVar": "M.read"
                                                                      },
                                                                      "args": [
                                                                        {
                                                                          "LocalVar": "γ"
                                                                        }
                                                                      ],
                                                                      "kind": "Effectful"
                                                                    }
                                                                  },
                                                                  {
                                                                    "Literal": {
                                                                      "Bool": true
                                                                    }
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            },
                                                            "body": {
                                                              "Let": {
                                                                "name": null,
                                                                "is_user": true,
                                                                "init": {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.alloc"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "GetTraitMethod": {
                                                                              "trait_name": [
                                                                                "core",
                                                                                "iter",
                                                                                "traits",
                                                                                "double_ended",
                                                                                "DoubleEndedIterator"
                                                                              ],
                                                                              "self_ty": {
                                                                                "type": "Application",
                                                                                "func": {
                                                                                  "type": "Path",
                                                                                  "path": [
                                                                                    "core",
                                                                                    "array",
                                                                                    "iter",
                                                                                    "IntoIter"
                                                                                  ]
                                                                                },
                                                                                "consts": [
                                                                                  {
                                                                                    "Literal": {
                                                                                      "Integer": {
                                                                                        "kind": "Usize",
                                                                                        "negative_sign": false,
                                                                                        "value": 3
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "tys": [
                                                                                  {
                                                                                    "type": "Path",
                                                                                    "path": [
                                                                                      "char"
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "trait_tys": [],
                                                                              "method_name": "next_back",
                                                                              "generic_tys": []
                                                                            }
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "LocalVar": "iter"
                                                                            }
                                                                          ],
                                                                          "kind": "Closure"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                },
                                                                "body": {
                                                                  "Match": {
                                                                    "scrutinee": {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.alloc"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Tuple": {
                                                                              "elements": []
                                                                            }
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    },
                                                                    "arms": [
                                                                      {
                                                                        "Lambda": {
                                                                          "args": [
                                                                            [
                                                                              "γ",
                                                                              null
                                                                            ]
                                                                          ],
                                                                          "body": {
                                                                            "Let": {
                                                                              "name": "γ",
                                                                              "is_user": false,
                                                                              "init": {
                                                                                "Use": {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.alloc"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "Call": {
                                                                                          "func": {
                                                                                            "LocalVar": "BinOp.eq"
                                                                                          },
                                                                                          "args": [
                                                                                            {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.read"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "Index": {
                                                                                                      "base": {
                                                                                                        "LocalVar": "chars"
                                                                                                      },
                                                                                                      "index": {
                                                                                                        "Call": {
                                                                                                          "func": {
                                                                                                            "LocalVar": "M.alloc"
                                                                                                          },
                                                                                                          "args": [
                                                                                                            {
                                                                                                              "Literal": {
                                                                                                                "Integer": {
                                                                                                                  "kind": "Usize",
                                                                                                                  "negative_sign": false,
                                                                                                                  "value": 1
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          ],
                                                                                                          "kind": "Effectful"
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "Literal": {
                                                                                                "Char": "\u0000"
                                                                                              }
                                                                                            }
                                                                                          ],
                                                                                          "kind": "Effectful"
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "body": {
                                                                                "Let": {
                                                                                  "name": null,
                                                                                  "is_user": false,
                                                                                  "init": {
                                                                                    "Call": {
                                                                                      "func": {
                                                                                        "LocalVar": "M.is_constant_or_break_match"
                                                                                      },
                                                                                      "args": [
                                                                                        {
                                                                                          "Call": {
                                                                                            "func": {
                                                                                              "LocalVar": "M.read"
                                                                                            },
                                                                                            "args": [
                                                                                              {
                                                                                                "LocalVar": "γ"
                                                                                              }
                                                                                            ],
                                                                                            "kind": "Effectful"
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "Literal": {
                                                                                            "Bool": true
                                                                                          }
                                                                                        }
                                                                                      ],
                                                                                      "kind": "Effectful"
                                                                                    }
                                                                                  },
                                                                                  "body": {
                                                                                    "Let": {
                                                                                      "name": null,
                                                                                      "is_user": true,
                                                                                      "init": {
                                                                                        "Call": {
                                                                                          "func": {
                                                                                            "LocalVar": "M.alloc"
                                                                                          },
                                                                                          "args": [
                                                                                            {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "GetTraitMethod": {
                                                                                                    "trait_name": [
                                                                                                      "core",
                                                                                                      "iter",
                                                                                                      "traits",
                                                                                                      "double_ended",
                                                                                                      "DoubleEndedIterator"
                                                                                                    ],
                                                                                                    "self_ty": {
                                                                                                      "type": "Application",
                                                                                                      "func": {
                                                                                                        "type": "Path",
                                                                                                        "path": [
                                                                                                          "core",
                                                                                                          "array",
                                                                                                          "iter",
                                                                                                          "IntoIter"
                                                                                                        ]
                                                                                                      },
                                                                                                      "consts": [
                                                                                                        {
                                                                                                          "Literal": {
                                                                                                            "Integer": {
                                                                                                              "kind": "Usize",
                                                                                                              "negative_sign": false,
                                                                                                              "value": 3
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      ],
                                                                                                      "tys": [
                                                                                                        {
                                                                                                          "type": "Path",
                                                                                                          "path": [
                                                                                                            "char"
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    "trait_tys": [],
                                                                                                    "method_name": "next_back",
                                                                                                    "generic_tys": []
                                                                                                  }
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "LocalVar": "iter"
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Closure"
                                                                                              }
                                                                                            }
                                                                                          ],
                                                                                          "kind": "Effectful"
                                                                                        }
                                                                                      },
                                                                                      "body": {
                                                                                        "Call": {
                                                                                          "func": {
                                                                                            "LocalVar": "M.alloc"
                                                                                          },
                                                                                          "args": [
                                                                                            {
                                                                                              "Tuple": {
                                                                                                "elements": []
                                                                                              }
                                                                                            }
                                                                                          ],
                                                                                          "kind": "Effectful"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "is_for_match": true,
                                                                          "is_internal": true
                                                                        }
                                                                      },
                                                                      {
                                                                        "Lambda": {
                                                                          "args": [
                                                                            [
                                                                              "γ",
                                                                              null
                                                                            ]
                                                                          ],
                                                                          "body": {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.alloc"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "Tuple": {
                                                                                    "elements": []
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          "is_for_match": true,
                                                                          "is_internal": true
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "is_for_match": true,
                                                    "is_internal": true
                                                  }
                                                },
                                                {
                                                  "Lambda": {
                                                    "args": [
                                                      [
                                                        "γ",
                                                        null
                                                      ]
                                                    ],
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "Tuple": {
                                                              "elements": []
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "is_for_match": true,
                                                    "is_internal": true
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "body": {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.alloc"
                                              },
                                              "args": [
                                                {
                                                  "StructTuple": {
                                                    "path": [
                                                      "core",
                                                      "char",
                                                      "CaseMappingIter"
                                                    ],
                                                    "fields": [
                                                      {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "iter"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "    type Item = char;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "    fn next(&mut self) -> Option<char> {",
                  "        self.0.next()",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "next",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::CaseMappingIter"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "    fn size_hint(&self) -> (usize, Option<usize>) {",
                  "        self.0.size_hint()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "size_hint",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::CaseMappingIter"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "fold",
                "snippet": [
                  "    fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc",
                  "    where",
                  "        Fold: FnMut(Acc, Self::Item) -> Acc,",
                  "    {",
                  "        self.0.fold(init, fold)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "Acc",
                          "Fold"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "CaseMappingIter"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ],
                            [
                              "init",
                              {
                                "type": "Var",
                                "name": "Acc"
                              },
                              null
                            ],
                            [
                              "fold",
                              {
                                "type": "Var",
                                "name": "Fold"
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Var",
                            "name": "Acc"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "init",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "init"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": "fold",
                                      "is_user": false,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "fold"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "iter",
                                                "traits",
                                                "iterator",
                                                "Iterator"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "array",
                                                    "iter",
                                                    "IntoIter"
                                                  ]
                                                },
                                                "consts": [
                                                  {
                                                    "Literal": {
                                                      "Integer": {
                                                        "kind": "Usize",
                                                        "negative_sign": false,
                                                        "value": 3
                                                      }
                                                    }
                                                  }
                                                ],
                                                "tys": [
                                                  {
                                                    "type": "Path",
                                                    "path": [
                                                      "char"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "trait_tys": [],
                                              "method_name": "fold",
                                              "generic_tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "Acc"
                                                },
                                                {
                                                  "type": "Var",
                                                  "name": "Fold"
                                                }
                                              ]
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        },
                                                        {
                                                          "InternalString": "core::char::CaseMappingIter"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "init"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "fold"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "count",
                "snippet": [
                  "    fn count(self) -> usize {",
                  "        self.0.count()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "CaseMappingIter"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "count",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::CaseMappingIter"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "last",
                "snippet": [
                  "    fn last(self) -> Option<Self::Item> {",
                  "        self.0.last()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "CaseMappingIter"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Associated"
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "iterator",
                                        "Iterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "last",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                },
                                                {
                                                  "InternalString": "core::char::CaseMappingIter"
                                                },
                                                {
                                                  "LocalVar": "0"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_by",
                "snippet": [
                  "    fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "        self.0.advance_by(n)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "iterator",
                                            "Iterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "array",
                                                "iter",
                                                "IntoIter"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": [
                                              {
                                                "type": "Path",
                                                "path": [
                                                  "char"
                                                ]
                                              }
                                            ]
                                          },
                                          "trait_tys": [],
                                          "method_name": "advance_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::CaseMappingIter"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": [
                  "    unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item {",
                  "        // SAFETY: just forwarding requirements to caller",
                  "        unsafe { self.0.__iterator_get_unchecked(idx) }",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "idx",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Associated"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "idx",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "idx"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "iterator",
                                            "Iterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "array",
                                                "iter",
                                                "IntoIter"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": [
                                              {
                                                "type": "Path",
                                                "path": [
                                                  "char"
                                                ]
                                              }
                                            ]
                                          },
                                          "trait_tys": [],
                                          "method_name": "__iterator_get_unchecked",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::CaseMappingIter"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "idx"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "double_ended",
              "DoubleEndedIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "next_back",
                "snippet": [
                  "    fn next_back(&mut self) -> Option<char> {",
                  "        self.0.next_back()",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "char"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "double_ended",
                                        "DoubleEndedIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "next_back",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::CaseMappingIter"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "rfold",
                "snippet": [
                  "    fn rfold<Acc, Fold>(self, init: Acc, rfold: Fold) -> Acc",
                  "    where",
                  "        Fold: FnMut(Acc, Self::Item) -> Acc,",
                  "    {",
                  "        self.0.rfold(init, rfold)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "Acc",
                          "Fold"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "char",
                                    "CaseMappingIter"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              },
                              null
                            ],
                            [
                              "init",
                              {
                                "type": "Var",
                                "name": "Acc"
                              },
                              null
                            ],
                            [
                              "rfold",
                              {
                                "type": "Var",
                                "name": "Fold"
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Var",
                            "name": "Acc"
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "init",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "init"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": "rfold",
                                      "is_user": false,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "rfold"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "iter",
                                                "traits",
                                                "double_ended",
                                                "DoubleEndedIterator"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "array",
                                                    "iter",
                                                    "IntoIter"
                                                  ]
                                                },
                                                "consts": [
                                                  {
                                                    "Literal": {
                                                      "Integer": {
                                                        "kind": "Usize",
                                                        "negative_sign": false,
                                                        "value": 3
                                                      }
                                                    }
                                                  }
                                                ],
                                                "tys": [
                                                  {
                                                    "type": "Path",
                                                    "path": [
                                                      "char"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "trait_tys": [],
                                              "method_name": "rfold",
                                              "generic_tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "Acc"
                                                },
                                                {
                                                  "type": "Var",
                                                  "name": "Fold"
                                                }
                                              ]
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        },
                                                        {
                                                          "InternalString": "core::char::CaseMappingIter"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "init"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "LocalVar": "rfold"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "advance_back_by",
                "snippet": [
                  "    fn advance_back_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {",
                  "        self.0.advance_back_by(n)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "n",
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "num",
                                    "nonzero",
                                    "NonZero"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "n",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "n"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "iter",
                                            "traits",
                                            "double_ended",
                                            "DoubleEndedIterator"
                                          ],
                                          "self_ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "array",
                                                "iter",
                                                "IntoIter"
                                              ]
                                            },
                                            "consts": [
                                              {
                                                "Literal": {
                                                  "Integer": {
                                                    "kind": "Usize",
                                                    "negative_sign": false,
                                                    "value": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "tys": [
                                              {
                                                "type": "Path",
                                                "path": [
                                                  "char"
                                                ]
                                              }
                                            ]
                                          },
                                          "trait_tys": [],
                                          "method_name": "advance_back_by",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::CaseMappingIter"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "n"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "nth_back",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_rfold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rfind",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "exact_size",
              "ExactSizeIterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "len",
                "snippet": [
                  "    fn len(&self) -> usize {",
                  "        self.0.len()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "usize"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "len",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::CaseMappingIter"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "is_empty",
                "snippet": [
                  "    fn is_empty(&self) -> bool {",
                  "        self.0.is_empty()",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "bool"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "iter",
                                        "traits",
                                        "exact_size",
                                        "ExactSizeIterator"
                                      ],
                                      "self_ty": {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "array",
                                            "iter",
                                            "IntoIter"
                                          ]
                                        },
                                        "consts": [
                                          {
                                            "Literal": {
                                              "Integer": {
                                                "kind": "Usize",
                                                "negative_sign": false,
                                                "value": 3
                                              }
                                            }
                                          }
                                        ],
                                        "tys": [
                                          {
                                            "type": "Path",
                                            "path": [
                                              "char"
                                            ]
                                          }
                                        ]
                                      },
                                      "trait_tys": [],
                                      "method_name": "is_empty",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          {
                                            "InternalString": "core::char::CaseMappingIter"
                                          },
                                          {
                                            "LocalVar": "0"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "TrustedLen"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "adapters",
              "zip",
              "TrustedRandomAccessNoCoerce"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "value_MAY_HAVE_SIDE_EFFECT",
                "snippet": [
                  "    const MAY_HAVE_SIDE_EFFECT: bool = false;"
                ],
                "kind": {
                  "RequiredValue": {
                    "Const": {
                      "ty": {
                        "type": "Path",
                        "path": [
                          "bool"
                        ]
                      },
                      "body": {
                        "Call": {
                          "func": {
                            "LocalVar": "M.alloc"
                          },
                          "args": [
                            {
                              "Literal": {
                                "Bool": false
                              }
                            }
                          ],
                          "kind": "Effectful"
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "adapters",
              "zip",
              "TrustedRandomAccess"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "CaseMappingIter"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "        for c in self.0.clone() {",
                  "            f.write_char(c)?;",
                  "        }",
                  "        Ok(())",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "CaseMappingIter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.catch_return"
                                      },
                                      "args": [
                                        {
                                          "Lambda": {
                                            "args": [],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.read"
                                                },
                                                "args": [
                                                  {
                                                    "Let": {
                                                      "name": null,
                                                      "is_user": true,
                                                      "init": {
                                                        "Use": {
                                                          "Match": {
                                                            "scrutinee": {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.alloc"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "Call": {
                                                                      "func": {
                                                                        "GetTraitMethod": {
                                                                          "trait_name": [
                                                                            "core",
                                                                            "iter",
                                                                            "traits",
                                                                            "collect",
                                                                            "IntoIterator"
                                                                          ],
                                                                          "self_ty": {
                                                                            "type": "Application",
                                                                            "func": {
                                                                              "type": "Path",
                                                                              "path": [
                                                                                "core",
                                                                                "array",
                                                                                "iter",
                                                                                "IntoIter"
                                                                              ]
                                                                            },
                                                                            "consts": [
                                                                              {
                                                                                "Literal": {
                                                                                  "Integer": {
                                                                                    "kind": "Usize",
                                                                                    "negative_sign": false,
                                                                                    "value": 3
                                                                                  }
                                                                                }
                                                                              }
                                                                            ],
                                                                            "tys": [
                                                                              {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "char"
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          "trait_tys": [],
                                                                          "method_name": "into_iter",
                                                                          "generic_tys": []
                                                                        }
                                                                      },
                                                                      "args": [
                                                                        {
                                                                          "Call": {
                                                                            "func": {
                                                                              "GetTraitMethod": {
                                                                                "trait_name": [
                                                                                  "core",
                                                                                  "clone",
                                                                                  "Clone"
                                                                                ],
                                                                                "self_ty": {
                                                                                  "type": "Application",
                                                                                  "func": {
                                                                                    "type": "Path",
                                                                                    "path": [
                                                                                      "core",
                                                                                      "array",
                                                                                      "iter",
                                                                                      "IntoIter"
                                                                                    ]
                                                                                  },
                                                                                  "consts": [
                                                                                    {
                                                                                      "Literal": {
                                                                                        "Integer": {
                                                                                          "kind": "Usize",
                                                                                          "negative_sign": false,
                                                                                          "value": 3
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "tys": [
                                                                                    {
                                                                                      "type": "Path",
                                                                                      "path": [
                                                                                        "char"
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "trait_tys": [],
                                                                                "method_name": "clone",
                                                                                "generic_tys": []
                                                                              }
                                                                            },
                                                                            "args": [
                                                                              {
                                                                                "Call": {
                                                                                  "func": {
                                                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                                  },
                                                                                  "args": [
                                                                                    {
                                                                                      "Call": {
                                                                                        "func": {
                                                                                          "LocalVar": "M.read"
                                                                                        },
                                                                                        "args": [
                                                                                          {
                                                                                            "LocalVar": "self"
                                                                                          }
                                                                                        ],
                                                                                        "kind": "Effectful"
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "InternalString": "core::char::CaseMappingIter"
                                                                                    },
                                                                                    {
                                                                                      "LocalVar": "0"
                                                                                    }
                                                                                  ],
                                                                                  "kind": "Effectful"
                                                                                }
                                                                              }
                                                                            ],
                                                                            "kind": "Closure"
                                                                          }
                                                                        }
                                                                      ],
                                                                      "kind": "Closure"
                                                                    }
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            },
                                                            "arms": [
                                                              {
                                                                "Lambda": {
                                                                  "args": [
                                                                    [
                                                                      "γ",
                                                                      null
                                                                    ]
                                                                  ],
                                                                  "body": {
                                                                    "Let": {
                                                                      "name": "iter",
                                                                      "is_user": false,
                                                                      "init": {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.copy"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "LocalVar": "γ"
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      },
                                                                      "body": {
                                                                        "Loop": {
                                                                          "body": {
                                                                            "Let": {
                                                                              "name": null,
                                                                              "is_user": true,
                                                                              "init": {
                                                                                "Match": {
                                                                                  "scrutinee": {
                                                                                    "Call": {
                                                                                      "func": {
                                                                                        "LocalVar": "M.alloc"
                                                                                      },
                                                                                      "args": [
                                                                                        {
                                                                                          "Call": {
                                                                                            "func": {
                                                                                              "GetTraitMethod": {
                                                                                                "trait_name": [
                                                                                                  "core",
                                                                                                  "iter",
                                                                                                  "traits",
                                                                                                  "iterator",
                                                                                                  "Iterator"
                                                                                                ],
                                                                                                "self_ty": {
                                                                                                  "type": "Application",
                                                                                                  "func": {
                                                                                                    "type": "Path",
                                                                                                    "path": [
                                                                                                      "core",
                                                                                                      "array",
                                                                                                      "iter",
                                                                                                      "IntoIter"
                                                                                                    ]
                                                                                                  },
                                                                                                  "consts": [
                                                                                                    {
                                                                                                      "Literal": {
                                                                                                        "Integer": {
                                                                                                          "kind": "Usize",
                                                                                                          "negative_sign": false,
                                                                                                          "value": 3
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  ],
                                                                                                  "tys": [
                                                                                                    {
                                                                                                      "type": "Path",
                                                                                                      "path": [
                                                                                                        "char"
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "trait_tys": [],
                                                                                                "method_name": "next",
                                                                                                "generic_tys": []
                                                                                              }
                                                                                            },
                                                                                            "args": [
                                                                                              {
                                                                                                "LocalVar": "iter"
                                                                                              }
                                                                                            ],
                                                                                            "kind": "Closure"
                                                                                          }
                                                                                        }
                                                                                      ],
                                                                                      "kind": "Effectful"
                                                                                    }
                                                                                  },
                                                                                  "arms": [
                                                                                    {
                                                                                      "Lambda": {
                                                                                        "args": [
                                                                                          [
                                                                                            "γ",
                                                                                            null
                                                                                          ]
                                                                                        ],
                                                                                        "body": {
                                                                                          "Let": {
                                                                                            "name": null,
                                                                                            "is_user": false,
                                                                                            "init": {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.is_struct_tuple"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "LocalVar": "γ"
                                                                                                  },
                                                                                                  {
                                                                                                    "InternalString": "core::option::Option::None"
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            },
                                                                                            "body": {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.alloc"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "Call": {
                                                                                                      "func": {
                                                                                                        "LocalVar": "M.never_to_any"
                                                                                                      },
                                                                                                      "args": [
                                                                                                        {
                                                                                                          "Call": {
                                                                                                            "func": {
                                                                                                              "LocalVar": "M.read"
                                                                                                            },
                                                                                                            "args": [
                                                                                                              {
                                                                                                                "ControlFlow": "Break"
                                                                                                              }
                                                                                                            ],
                                                                                                            "kind": "Effectful"
                                                                                                          }
                                                                                                        }
                                                                                                      ],
                                                                                                      "kind": "Effectful"
                                                                                                    }
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "is_for_match": true,
                                                                                        "is_internal": true
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "Lambda": {
                                                                                        "args": [
                                                                                          [
                                                                                            "γ",
                                                                                            null
                                                                                          ]
                                                                                        ],
                                                                                        "body": {
                                                                                          "Let": {
                                                                                            "name": "γ0_0",
                                                                                            "is_user": false,
                                                                                            "init": {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "LocalVar": "γ"
                                                                                                  },
                                                                                                  {
                                                                                                    "InternalString": "core::option::Option::Some"
                                                                                                  },
                                                                                                  {
                                                                                                    "InternalInteger": 0
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            },
                                                                                            "body": {
                                                                                              "Let": {
                                                                                                "name": "c",
                                                                                                "is_user": false,
                                                                                                "init": {
                                                                                                  "Call": {
                                                                                                    "func": {
                                                                                                      "LocalVar": "M.copy"
                                                                                                    },
                                                                                                    "args": [
                                                                                                      {
                                                                                                        "LocalVar": "γ0_0"
                                                                                                      }
                                                                                                    ],
                                                                                                    "kind": "Effectful"
                                                                                                  }
                                                                                                },
                                                                                                "body": {
                                                                                                  "Let": {
                                                                                                    "name": null,
                                                                                                    "is_user": true,
                                                                                                    "init": {
                                                                                                      "Match": {
                                                                                                        "scrutinee": {
                                                                                                          "Call": {
                                                                                                            "func": {
                                                                                                              "LocalVar": "M.alloc"
                                                                                                            },
                                                                                                            "args": [
                                                                                                              {
                                                                                                                "Call": {
                                                                                                                  "func": {
                                                                                                                    "GetTraitMethod": {
                                                                                                                      "trait_name": [
                                                                                                                        "core",
                                                                                                                        "ops",
                                                                                                                        "try_trait",
                                                                                                                        "Try"
                                                                                                                      ],
                                                                                                                      "self_ty": {
                                                                                                                        "type": "Application",
                                                                                                                        "func": {
                                                                                                                          "type": "Path",
                                                                                                                          "path": [
                                                                                                                            "core",
                                                                                                                            "result",
                                                                                                                            "Result"
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        "consts": [],
                                                                                                                        "tys": [
                                                                                                                          {
                                                                                                                            "type": "Tuple",
                                                                                                                            "tys": []
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "Application",
                                                                                                                            "func": {
                                                                                                                              "type": "Path",
                                                                                                                              "path": [
                                                                                                                                "core",
                                                                                                                                "fmt",
                                                                                                                                "Error"
                                                                                                                              ]
                                                                                                                            },
                                                                                                                            "consts": [],
                                                                                                                            "tys": []
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      },
                                                                                                                      "trait_tys": [],
                                                                                                                      "method_name": "branch",
                                                                                                                      "generic_tys": []
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "args": [
                                                                                                                    {
                                                                                                                      "Call": {
                                                                                                                        "func": {
                                                                                                                          "GetTraitMethod": {
                                                                                                                            "trait_name": [
                                                                                                                              "core",
                                                                                                                              "fmt",
                                                                                                                              "Write"
                                                                                                                            ],
                                                                                                                            "self_ty": {
                                                                                                                              "type": "Application",
                                                                                                                              "func": {
                                                                                                                                "type": "Path",
                                                                                                                                "path": [
                                                                                                                                  "core",
                                                                                                                                  "fmt",
                                                                                                                                  "Formatter"
                                                                                                                                ]
                                                                                                                              },
                                                                                                                              "consts": [],
                                                                                                                              "tys": []
                                                                                                                            },
                                                                                                                            "trait_tys": [],
                                                                                                                            "method_name": "write_char",
                                                                                                                            "generic_tys": []
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "args": [
                                                                                                                          {
                                                                                                                            "Call": {
                                                                                                                              "func": {
                                                                                                                                "LocalVar": "M.read"
                                                                                                                              },
                                                                                                                              "args": [
                                                                                                                                {
                                                                                                                                  "LocalVar": "f"
                                                                                                                                }
                                                                                                                              ],
                                                                                                                              "kind": "Effectful"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "Call": {
                                                                                                                              "func": {
                                                                                                                                "LocalVar": "M.read"
                                                                                                                              },
                                                                                                                              "args": [
                                                                                                                                {
                                                                                                                                  "LocalVar": "c"
                                                                                                                                }
                                                                                                                              ],
                                                                                                                              "kind": "Effectful"
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ],
                                                                                                                        "kind": "Closure"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ],
                                                                                                                  "kind": "Closure"
                                                                                                                }
                                                                                                              }
                                                                                                            ],
                                                                                                            "kind": "Effectful"
                                                                                                          }
                                                                                                        },
                                                                                                        "arms": [
                                                                                                          {
                                                                                                            "Lambda": {
                                                                                                              "args": [
                                                                                                                [
                                                                                                                  "γ",
                                                                                                                  null
                                                                                                                ]
                                                                                                              ],
                                                                                                              "body": {
                                                                                                                "Let": {
                                                                                                                  "name": "γ0_0",
                                                                                                                  "is_user": false,
                                                                                                                  "init": {
                                                                                                                    "Call": {
                                                                                                                      "func": {
                                                                                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                                                                      },
                                                                                                                      "args": [
                                                                                                                        {
                                                                                                                          "LocalVar": "γ"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "InternalString": "core::ops::control_flow::ControlFlow::Break"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "InternalInteger": 0
                                                                                                                        }
                                                                                                                      ],
                                                                                                                      "kind": "Effectful"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "body": {
                                                                                                                    "Let": {
                                                                                                                      "name": "residual",
                                                                                                                      "is_user": false,
                                                                                                                      "init": {
                                                                                                                        "Call": {
                                                                                                                          "func": {
                                                                                                                            "LocalVar": "M.copy"
                                                                                                                          },
                                                                                                                          "args": [
                                                                                                                            {
                                                                                                                              "LocalVar": "γ0_0"
                                                                                                                            }
                                                                                                                          ],
                                                                                                                          "kind": "Effectful"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "body": {
                                                                                                                        "Call": {
                                                                                                                          "func": {
                                                                                                                            "LocalVar": "M.alloc"
                                                                                                                          },
                                                                                                                          "args": [
                                                                                                                            {
                                                                                                                              "Call": {
                                                                                                                                "func": {
                                                                                                                                  "LocalVar": "M.never_to_any"
                                                                                                                                },
                                                                                                                                "args": [
                                                                                                                                  {
                                                                                                                                    "Call": {
                                                                                                                                      "func": {
                                                                                                                                        "LocalVar": "M.read"
                                                                                                                                      },
                                                                                                                                      "args": [
                                                                                                                                        {
                                                                                                                                          "Return": {
                                                                                                                                            "Call": {
                                                                                                                                              "func": {
                                                                                                                                                "GetTraitMethod": {
                                                                                                                                                  "trait_name": [
                                                                                                                                                    "core",
                                                                                                                                                    "ops",
                                                                                                                                                    "try_trait",
                                                                                                                                                    "FromResidual"
                                                                                                                                                  ],
                                                                                                                                                  "self_ty": {
                                                                                                                                                    "type": "Application",
                                                                                                                                                    "func": {
                                                                                                                                                      "type": "Path",
                                                                                                                                                      "path": [
                                                                                                                                                        "core",
                                                                                                                                                        "result",
                                                                                                                                                        "Result"
                                                                                                                                                      ]
                                                                                                                                                    },
                                                                                                                                                    "consts": [],
                                                                                                                                                    "tys": [
                                                                                                                                                      {
                                                                                                                                                        "type": "Tuple",
                                                                                                                                                        "tys": []
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        "type": "Application",
                                                                                                                                                        "func": {
                                                                                                                                                          "type": "Path",
                                                                                                                                                          "path": [
                                                                                                                                                            "core",
                                                                                                                                                            "fmt",
                                                                                                                                                            "Error"
                                                                                                                                                          ]
                                                                                                                                                        },
                                                                                                                                                        "consts": [],
                                                                                                                                                        "tys": []
                                                                                                                                                      }
                                                                                                                                                    ]
                                                                                                                                                  },
                                                                                                                                                  "trait_tys": [
                                                                                                                                                    {
                                                                                                                                                      "type": "Application",
                                                                                                                                                      "func": {
                                                                                                                                                        "type": "Path",
                                                                                                                                                        "path": [
                                                                                                                                                          "core",
                                                                                                                                                          "result",
                                                                                                                                                          "Result"
                                                                                                                                                        ]
                                                                                                                                                      },
                                                                                                                                                      "consts": [],
                                                                                                                                                      "tys": [
                                                                                                                                                        {
                                                                                                                                                          "type": "Application",
                                                                                                                                                          "func": {
                                                                                                                                                            "type": "Path",
                                                                                                                                                            "path": [
                                                                                                                                                              "core",
                                                                                                                                                              "convert",
                                                                                                                                                              "Infallible"
                                                                                                                                                            ]
                                                                                                                                                          },
                                                                                                                                                          "consts": [],
                                                                                                                                                          "tys": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          "type": "Application",
                                                                                                                                                          "func": {
                                                                                                                                                            "type": "Path",
                                                                                                                                                            "path": [
                                                                                                                                                              "core",
                                                                                                                                                              "fmt",
                                                                                                                                                              "Error"
                                                                                                                                                            ]
                                                                                                                                                          },
                                                                                                                                                          "consts": [],
                                                                                                                                                          "tys": []
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  ],
                                                                                                                                                  "method_name": "from_residual",
                                                                                                                                                  "generic_tys": []
                                                                                                                                                }
                                                                                                                                              },
                                                                                                                                              "args": [
                                                                                                                                                {
                                                                                                                                                  "Call": {
                                                                                                                                                    "func": {
                                                                                                                                                      "LocalVar": "M.read"
                                                                                                                                                    },
                                                                                                                                                    "args": [
                                                                                                                                                      {
                                                                                                                                                        "LocalVar": "residual"
                                                                                                                                                      }
                                                                                                                                                    ],
                                                                                                                                                    "kind": "Effectful"
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              ],
                                                                                                                                              "kind": "Closure"
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      ],
                                                                                                                                      "kind": "Effectful"
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                                "kind": "Effectful"
                                                                                                                              }
                                                                                                                            }
                                                                                                                          ],
                                                                                                                          "kind": "Effectful"
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              },
                                                                                                              "is_for_match": true,
                                                                                                              "is_internal": true
                                                                                                            }
                                                                                                          },
                                                                                                          {
                                                                                                            "Lambda": {
                                                                                                              "args": [
                                                                                                                [
                                                                                                                  "γ",
                                                                                                                  null
                                                                                                                ]
                                                                                                              ],
                                                                                                              "body": {
                                                                                                                "Let": {
                                                                                                                  "name": "γ0_0",
                                                                                                                  "is_user": false,
                                                                                                                  "init": {
                                                                                                                    "Call": {
                                                                                                                      "func": {
                                                                                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                                                                      },
                                                                                                                      "args": [
                                                                                                                        {
                                                                                                                          "LocalVar": "γ"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "InternalString": "core::ops::control_flow::ControlFlow::Continue"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "InternalInteger": 0
                                                                                                                        }
                                                                                                                      ],
                                                                                                                      "kind": "Effectful"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "body": {
                                                                                                                    "Let": {
                                                                                                                      "name": "val",
                                                                                                                      "is_user": false,
                                                                                                                      "init": {
                                                                                                                        "Call": {
                                                                                                                          "func": {
                                                                                                                            "LocalVar": "M.copy"
                                                                                                                          },
                                                                                                                          "args": [
                                                                                                                            {
                                                                                                                              "LocalVar": "γ0_0"
                                                                                                                            }
                                                                                                                          ],
                                                                                                                          "kind": "Effectful"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "body": {
                                                                                                                        "LocalVar": "val"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              },
                                                                                                              "is_for_match": true,
                                                                                                              "is_internal": true
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    },
                                                                                                    "body": {
                                                                                                      "Call": {
                                                                                                        "func": {
                                                                                                          "LocalVar": "M.alloc"
                                                                                                        },
                                                                                                        "args": [
                                                                                                          {
                                                                                                            "Tuple": {
                                                                                                              "elements": []
                                                                                                            }
                                                                                                          }
                                                                                                        ],
                                                                                                        "kind": "Effectful"
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "is_for_match": true,
                                                                                        "is_internal": true
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              "body": {
                                                                                "Call": {
                                                                                  "func": {
                                                                                    "LocalVar": "M.alloc"
                                                                                  },
                                                                                  "args": [
                                                                                    {
                                                                                      "Tuple": {
                                                                                        "elements": []
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "kind": "Effectful"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "is_for_match": true,
                                                                  "is_internal": true
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "body": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.alloc"
                                                          },
                                                          "args": [
                                                            {
                                                              "StructTuple": {
                                                                "path": [
                                                                  "core",
                                                                  "result",
                                                                  "Result",
                                                                  "Ok"
                                                                ],
                                                                "fields": [
                                                                  {
                                                                    "Tuple": {
                                                                      "elements": []
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": false,
                                            "is_internal": true
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "TryFromCharError",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Tuple",
                "tys": []
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "TryFromCharError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_tuple_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "TryFromCharError"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::char::TryFromCharError"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "marker",
              "Copy"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "TryFromCharError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "char",
                                "TryFromCharError"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Match": {
                                        "scrutinee": {
                                          "LocalVar": "Value.DeclaredButUndefined"
                                        },
                                        "arms": [
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "marker",
              "StructuralPartialEq"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "cmp",
              "PartialEq"
            ],
            "trait_ty_params": [
              [
                "Rhs",
                "Default"
              ]
            ],
            "items": [
              {
                "name": "eq",
                "snippet": [
                  "PartialEq"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "TryFromCharError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "other",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "TryFromCharError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "bool"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "other",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "other"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "cmp",
                                            "PartialEq"
                                          ],
                                          "self_ty": {
                                            "type": "Tuple",
                                            "tys": []
                                          },
                                          "trait_tys": [
                                            {
                                              "type": "Tuple",
                                              "tys": []
                                            }
                                          ],
                                          "method_name": "eq",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::TryFromCharError"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "other"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::char::TryFromCharError"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "cmp",
              "Eq"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "assert_receiver_is_total_eq",
                "snippet": [
                  "Eq"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "TryFromCharError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Match": {
                                        "scrutinee": {
                                          "LocalVar": "Value.DeclaredButUndefined"
                                        },
                                        "arms": [
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Tuple": {
                                                        "elements": []
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Display"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "        \"unicode code point out of range\".fmt(fmt)",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "TryFromCharError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "fmt",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "fmt",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "fmt"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "fmt",
                                            "Display"
                                          ],
                                          "self_ty": {
                                            "type": "Path",
                                            "path": [
                                              "str"
                                            ]
                                          },
                                          "trait_tys": [],
                                          "method_name": "fmt",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "unicode code point out of range"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "fmt"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/char/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "TryFromCharError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "description",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        }
      ]
    }
  }
]