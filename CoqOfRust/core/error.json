[
  {
    "file_name": "core/src/error.rs",
    "item": {
      "type": "Module",
      "name": "error",
      "body": [
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Trait",
            "name": "Error",
            "path": [
              "core",
              "error",
              "Error"
            ],
            "const_params": [],
            "ty_params": [],
            "body": [
              [
                "source",
                {
                  "DefinitionWithDefault": {
                    "const_params": [],
                    "ty_params": [],
                    "signature_and_body": {
                      "args": [
                        [
                          "self",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Var",
                                "name": "Self"
                              }
                            ]
                          },
                          null
                        ]
                      ],
                      "ret_ty": {
                        "type": "Application",
                        "func": {
                          "type": "Path",
                          "path": [
                            "core",
                            "option",
                            "Option"
                          ]
                        },
                        "consts": [],
                        "tys": [
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Dyn",
                                "traits": [
                                  [
                                    "core",
                                    "error",
                                    "Error",
                                    "Trait"
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "Let": {
                          "name": "self",
                          "is_user": false,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "LocalVar": "self"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "StructTuple": {
                              "path": [
                                "core",
                                "option",
                                "Option",
                                "None"
                              ],
                              "fields": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              [
                "type_id",
                {
                  "DefinitionWithDefault": {
                    "const_params": [],
                    "ty_params": [],
                    "signature_and_body": {
                      "args": [
                        [
                          "self",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Var",
                                "name": "Self"
                              }
                            ]
                          },
                          null
                        ],
                        [
                          "β1",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "error",
                                "private",
                                "Internal"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "Wild"
                        ]
                      ],
                      "ret_ty": {
                        "type": "Application",
                        "func": {
                          "type": "Path",
                          "path": [
                            "core",
                            "any",
                            "TypeId"
                          ]
                        },
                        "consts": [],
                        "tys": []
                      },
                      "body": {
                        "Let": {
                          "name": "self",
                          "is_user": false,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "LocalVar": "self"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "Let": {
                              "name": "β1",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "β1"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Match": {
                                  "scrutinee": {
                                    "LocalVar": "β1"
                                  },
                                  "arms": [
                                    {
                                      "Lambda": {
                                        "args": [
                                          [
                                            "γ",
                                            null
                                          ]
                                        ],
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "any",
                                                      "TypeId"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "of",
                                                "generic_tys": [
                                                  {
                                                    "type": "Var",
                                                    "name": "Self"
                                                  }
                                                ]
                                              }
                                            },
                                            "args": [],
                                            "kind": "Closure"
                                          }
                                        },
                                        "is_for_match": true,
                                        "is_internal": true
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              [
                "description",
                {
                  "DefinitionWithDefault": {
                    "const_params": [],
                    "ty_params": [],
                    "signature_and_body": {
                      "args": [
                        [
                          "self",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Var",
                                "name": "Self"
                              }
                            ]
                          },
                          null
                        ]
                      ],
                      "ret_ty": {
                        "type": "Application",
                        "func": {
                          "type": "Path",
                          "path": [
                            "&"
                          ]
                        },
                        "consts": [],
                        "tys": [
                          {
                            "type": "Path",
                            "path": [
                              "str"
                            ]
                          }
                        ]
                      },
                      "body": {
                        "Let": {
                          "name": "self",
                          "is_user": false,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "LocalVar": "self"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "Literal": {
                                    "String": "description() is deprecated; use Display"
                                  }
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              [
                "cause",
                {
                  "DefinitionWithDefault": {
                    "const_params": [],
                    "ty_params": [],
                    "signature_and_body": {
                      "args": [
                        [
                          "self",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Var",
                                "name": "Self"
                              }
                            ]
                          },
                          null
                        ]
                      ],
                      "ret_ty": {
                        "type": "Application",
                        "func": {
                          "type": "Path",
                          "path": [
                            "core",
                            "option",
                            "Option"
                          ]
                        },
                        "consts": [],
                        "tys": [
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Dyn",
                                "traits": [
                                  [
                                    "core",
                                    "error",
                                    "Error",
                                    "Trait"
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "body": {
                        "Let": {
                          "name": "self",
                          "is_user": false,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "LocalVar": "self"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "Call": {
                              "func": {
                                "GetTraitMethod": {
                                  "trait_name": [
                                    "core",
                                    "error",
                                    "Error"
                                  ],
                                  "self_ty": {
                                    "type": "Var",
                                    "name": "Self"
                                  },
                                  "trait_tys": [],
                                  "method_name": "source",
                                  "generic_tys": []
                                }
                              },
                              "args": [
                                {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.read"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "self"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                }
                              ],
                              "kind": "Closure"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              [
                "provide",
                {
                  "DefinitionWithDefault": {
                    "const_params": [],
                    "ty_params": [],
                    "signature_and_body": {
                      "args": [
                        [
                          "self",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Var",
                                "name": "Self"
                              }
                            ]
                          },
                          null
                        ],
                        [
                          "request",
                          {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&mut"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "error",
                                    "Request"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          null
                        ]
                      ],
                      "ret_ty": {
                        "type": "Path",
                        "path": [
                          "unit"
                        ]
                      },
                      "body": {
                        "Let": {
                          "name": "self",
                          "is_user": false,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "LocalVar": "self"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "Let": {
                              "name": "request",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "request"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Tuple": {
                                  "elements": []
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Module",
            "name": "private",
            "body": [
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TypeStructTuple",
                  "name": "Internal",
                  "const_params": [],
                  "ty_params": [],
                  "fields": []
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [],
                  "predicates": [],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "private",
                        "Internal"
                      ]
                    },
                    "consts": [],
                    "tys": []
                  },
                  "of_trait": [
                    "core",
                    "fmt",
                    "Debug"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "fmt",
                      "snippet": [
                        "    Debug"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Definition": {
                            "definition": {
                              "const_params": [],
                              "ty_params": [],
                              "signature_and_body": {
                                "args": [
                                  [
                                    "self",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "private",
                                              "Internal"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        }
                                      ]
                                    },
                                    null
                                  ],
                                  [
                                    "f",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&mut"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "fmt",
                                              "Formatter"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        }
                                      ]
                                    },
                                    null
                                  ]
                                ],
                                "ret_ty": {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "result",
                                      "Result"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Tuple",
                                      "tys": []
                                    },
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "fmt",
                                          "Error"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": []
                                    }
                                  ]
                                },
                                "body": {
                                  "Let": {
                                    "name": "self",
                                    "is_user": false,
                                    "init": {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.alloc"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    },
                                    "body": {
                                      "Let": {
                                        "name": "f",
                                        "is_user": false,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "fmt",
                                                      "Formatter"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "write_str",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "f"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "Literal": {
                                                        "String": "Internal"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Path",
              "path": [
                "never"
              ]
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "description",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Dyn",
              "traits": [
                [
                  "core",
                  "error",
                  "Error",
                  "Trait"
                ]
              ]
            },
            "items": [
              {
                "name": "is",
                "snippet": [
                  "    pub fn is<T: Error + 'static>(&self) -> bool {",
                  "        // Get `TypeId` of the type this function is instantiated with.",
                  "        let t = TypeId::of::<T>();",
                  "",
                  "        // Get `TypeId` of the type in the trait object (`self`).",
                  "        let concrete = self.type_id(private::Internal);",
                  "",
                  "        // Compare both `TypeId`s on equality.",
                  "        t == concrete",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "bool"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Let": {
                                      "name": "t",
                                      "is_user": true,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "GetAssociatedFunction": {
                                                    "ty": {
                                                      "type": "Application",
                                                      "func": {
                                                        "type": "Path",
                                                        "path": [
                                                          "core",
                                                          "any",
                                                          "TypeId"
                                                        ]
                                                      },
                                                      "consts": [],
                                                      "tys": []
                                                    },
                                                    "func": "of",
                                                    "generic_tys": [
                                                      {
                                                        "type": "Var",
                                                        "name": "T"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "args": [],
                                                "kind": "Closure"
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Let": {
                                          "name": "concrete",
                                          "is_user": true,
                                          "init": {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.alloc"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "GetTraitMethod": {
                                                        "trait_name": [
                                                          "core",
                                                          "error",
                                                          "Error"
                                                        ],
                                                        "self_ty": {
                                                          "type": "Dyn",
                                                          "traits": [
                                                            [
                                                              "core",
                                                              "error",
                                                              "Error",
                                                              "Trait"
                                                            ]
                                                          ]
                                                        },
                                                        "trait_tys": [],
                                                        "method_name": "type_id",
                                                        "generic_tys": []
                                                      }
                                                    },
                                                    "args": [
                                                      {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "self"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      {
                                                        "StructTuple": {
                                                          "path": [
                                                            "core",
                                                            "error",
                                                            "private",
                                                            "Internal"
                                                          ],
                                                          "fields": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "Closure"
                                                  }
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          },
                                          "body": {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.alloc"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "GetTraitMethod": {
                                                        "trait_name": [
                                                          "core",
                                                          "cmp",
                                                          "PartialEq"
                                                        ],
                                                        "self_ty": {
                                                          "type": "Application",
                                                          "func": {
                                                            "type": "Path",
                                                            "path": [
                                                              "core",
                                                              "any",
                                                              "TypeId"
                                                            ]
                                                          },
                                                          "consts": [],
                                                          "tys": []
                                                        },
                                                        "trait_tys": [
                                                          {
                                                            "type": "Application",
                                                            "func": {
                                                              "type": "Path",
                                                              "path": [
                                                                "core",
                                                                "any",
                                                                "TypeId"
                                                              ]
                                                            },
                                                            "consts": [],
                                                            "tys": []
                                                          }
                                                        ],
                                                        "method_name": "eq",
                                                        "generic_tys": []
                                                      }
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "t"
                                                      },
                                                      {
                                                        "LocalVar": "concrete"
                                                      }
                                                    ],
                                                    "kind": "Closure"
                                                  }
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_ref",
                "snippet": [
                  "    pub fn downcast_ref<T: Error + 'static>(&self) -> Option<&T> {",
                  "        if self.is::<T>() {",
                  "            // SAFETY: `is` ensures this type cast is correct",
                  "            unsafe { Some(&*(self as *const dyn Error as *const T)) }",
                  "        } else {",
                  "            None",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Match": {
                                      "scrutinee": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Tuple": {
                                                "elements": []
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "arms": [
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Let": {
                                                "name": "γ",
                                                "is_user": false,
                                                "init": {
                                                  "Use": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.alloc"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "GetAssociatedFunction": {
                                                                "ty": {
                                                                  "type": "Dyn",
                                                                  "traits": [
                                                                    [
                                                                      "core",
                                                                      "error",
                                                                      "Error",
                                                                      "Trait"
                                                                    ]
                                                                  ]
                                                                },
                                                                "func": "is",
                                                                "generic_tys": [
                                                                  {
                                                                    "type": "Var",
                                                                    "name": "T"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.read"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "self"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Closure"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                },
                                                "body": {
                                                  "Let": {
                                                    "name": null,
                                                    "is_user": false,
                                                    "init": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.is_constant_or_break_match"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "Literal": {
                                                              "Bool": true
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "StructTuple": {
                                                              "path": [
                                                                "core",
                                                                "option",
                                                                "Option",
                                                                "Some"
                                                              ],
                                                              "fields": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.rust_cast"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Use": {
                                                                                "Call": {
                                                                                  "func": {
                                                                                    "LocalVar": "M.alloc"
                                                                                  },
                                                                                  "args": [
                                                                                    {
                                                                                      "Call": {
                                                                                        "func": {
                                                                                          "LocalVar": "M.read"
                                                                                        },
                                                                                        "args": [
                                                                                          {
                                                                                            "LocalVar": "self"
                                                                                          }
                                                                                        ],
                                                                                        "kind": "Effectful"
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "kind": "Effectful"
                                                                                }
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "Pure"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        },
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "StructTuple": {
                                                      "path": [
                                                        "core",
                                                        "option",
                                                        "Option",
                                                        "None"
                                                      ],
                                                      "fields": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_mut",
                "snippet": [
                  "    pub fn downcast_mut<T: Error + 'static>(&mut self) -> Option<&mut T> {",
                  "        if self.is::<T>() {",
                  "            // SAFETY: `is` ensures this type cast is correct",
                  "            unsafe { Some(&mut *(self as *mut dyn Error as *mut T)) }",
                  "        } else {",
                  "            None",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Match": {
                                      "scrutinee": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Tuple": {
                                                "elements": []
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "arms": [
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Let": {
                                                "name": "γ",
                                                "is_user": false,
                                                "init": {
                                                  "Use": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.alloc"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "GetAssociatedFunction": {
                                                                "ty": {
                                                                  "type": "Dyn",
                                                                  "traits": [
                                                                    [
                                                                      "core",
                                                                      "error",
                                                                      "Error",
                                                                      "Trait"
                                                                    ]
                                                                  ]
                                                                },
                                                                "func": "is",
                                                                "generic_tys": [
                                                                  {
                                                                    "type": "Var",
                                                                    "name": "T"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.read"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "self"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Closure"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                },
                                                "body": {
                                                  "Let": {
                                                    "name": null,
                                                    "is_user": false,
                                                    "init": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.is_constant_or_break_match"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "Literal": {
                                                              "Bool": true
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "StructTuple": {
                                                              "path": [
                                                                "core",
                                                                "option",
                                                                "Option",
                                                                "Some"
                                                              ],
                                                              "fields": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.rust_cast"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Use": {
                                                                                "Call": {
                                                                                  "func": {
                                                                                    "LocalVar": "M.alloc"
                                                                                  },
                                                                                  "args": [
                                                                                    {
                                                                                      "Call": {
                                                                                        "func": {
                                                                                          "LocalVar": "M.read"
                                                                                        },
                                                                                        "args": [
                                                                                          {
                                                                                            "LocalVar": "self"
                                                                                          }
                                                                                        ],
                                                                                        "kind": "Effectful"
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "kind": "Effectful"
                                                                                }
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "Pure"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        },
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "StructTuple": {
                                                      "path": [
                                                        "core",
                                                        "option",
                                                        "Option",
                                                        "None"
                                                      ],
                                                      "fields": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Dyn",
              "traits": [
                [
                  "core",
                  "error",
                  "Error",
                  "Trait"
                ],
                [
                  "core",
                  "marker",
                  "Send",
                  "AutoTrait"
                ]
              ]
            },
            "items": [
              {
                "name": "is",
                "snippet": [
                  "    pub fn is<T: Error + 'static>(&self) -> bool {",
                  "        <dyn Error + 'static>::is::<T>(self)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "bool"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Error",
                                          "Trait"
                                        ]
                                      ]
                                    },
                                    "func": "is",
                                    "generic_tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_ref",
                "snippet": [
                  "    pub fn downcast_ref<T: Error + 'static>(&self) -> Option<&T> {",
                  "        <dyn Error + 'static>::downcast_ref::<T>(self)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Error",
                                          "Trait"
                                        ]
                                      ]
                                    },
                                    "func": "downcast_ref",
                                    "generic_tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_mut",
                "snippet": [
                  "    pub fn downcast_mut<T: Error + 'static>(&mut self) -> Option<&mut T> {",
                  "        <dyn Error + 'static>::downcast_mut::<T>(self)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Error",
                                          "Trait"
                                        ]
                                      ]
                                    },
                                    "func": "downcast_mut",
                                    "generic_tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Dyn",
              "traits": [
                [
                  "core",
                  "error",
                  "Error",
                  "Trait"
                ],
                [
                  "core",
                  "marker",
                  "Send",
                  "AutoTrait"
                ],
                [
                  "core",
                  "marker",
                  "Sync",
                  "AutoTrait"
                ]
              ]
            },
            "items": [
              {
                "name": "is",
                "snippet": [
                  "    pub fn is<T: Error + 'static>(&self) -> bool {",
                  "        <dyn Error + 'static>::is::<T>(self)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "bool"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Error",
                                          "Trait"
                                        ]
                                      ]
                                    },
                                    "func": "is",
                                    "generic_tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_ref",
                "snippet": [
                  "    pub fn downcast_ref<T: Error + 'static>(&self) -> Option<&T> {",
                  "        <dyn Error + 'static>::downcast_ref::<T>(self)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Error",
                                          "Trait"
                                        ]
                                      ]
                                    },
                                    "func": "downcast_ref",
                                    "generic_tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_mut",
                "snippet": [
                  "    pub fn downcast_mut<T: Error + 'static>(&mut self) -> Option<&mut T> {",
                  "        <dyn Error + 'static>::downcast_mut::<T>(self)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Error",
                                          "Trait"
                                        ]
                                      ]
                                    },
                                    "func": "downcast_mut",
                                    "generic_tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Dyn",
              "traits": [
                [
                  "core",
                  "error",
                  "Error",
                  "Trait"
                ]
              ]
            },
            "items": [
              {
                "name": "sources",
                "snippet": [
                  "    pub fn sources(&self) -> Source<'_> {",
                  "        // You may think this method would be better in the Error trait, and you'd be right.",
                  "        // Unfortunately that doesn't work, not because of the object safety rules but because we",
                  "        // save a reference to self in Sources below as a trait object. If this method was",
                  "        // declared in Error, then self would have the type &T where T is some concrete type which",
                  "        // implements Error. We would need to coerce self to have type &dyn Error, but that requires",
                  "        // that Self has a known size (i.e., Self: Sized). We can't put that bound on Error",
                  "        // since that would forbid Error trait objects, and we can't put that bound on the method",
                  "        // because that means the method can't be called on trait objects (we'd also need the",
                  "        // 'static bound, but that isn't allowed because methods with bounds on Self other than",
                  "        // Sized are not object-safe). Requiring an Unsize bound is not backwards compatible.",
                  "",
                  "        Source { current: Some(self) }",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "DynT"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "error",
                              "Source"
                            ]
                          },
                          "consts": [],
                          "tys": []
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "StructStruct": {
                                "path": [
                                  "core",
                                  "error",
                                  "Source"
                                ],
                                "fields": [
                                  [
                                    "current",
                                    {
                                      "StructTuple": {
                                        "path": [
                                          "core",
                                          "option",
                                          "Option",
                                          "Some"
                                        ],
                                        "fields": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                ],
                                "base": null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Definition",
            "name": "request_value",
            "path": [
              "core",
              "error",
              "request_value"
            ],
            "snippet": [
              "pub fn request_value<'a, T>(err: &'a (impl Error + ?Sized)) -> Option<T>",
              "where",
              "    T: 'static,",
              "{",
              "    request_by_type_tag::<'a, tags::Value<T>>(err)",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T",
                "impl_Error__plus___Sized"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "err",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "impl_Error__plus___Sized"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "option",
                      "Option"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Var",
                      "name": "T"
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "err",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "err"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "error",
                              "request_by_type_tag"
                            ],
                            "generic_tys": [
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "error",
                                    "tags",
                                    "Value"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Var",
                                    "name": "T"
                                  }
                                ]
                              },
                              {
                                "type": "Var",
                                "name": "impl_Error__plus___Sized"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "err"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Definition",
            "name": "request_ref",
            "path": [
              "core",
              "error",
              "request_ref"
            ],
            "snippet": [
              "pub fn request_ref<'a, T>(err: &'a (impl Error + ?Sized)) -> Option<&'a T>",
              "where",
              "    T: 'static + ?Sized,",
              "{",
              "    request_by_type_tag::<'a, tags::Ref<tags::MaybeSizedValue<T>>>(err)",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T",
                "impl_Error__plus___Sized"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "err",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "impl_Error__plus___Sized"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "option",
                      "Option"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "err",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "err"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "error",
                              "request_by_type_tag"
                            ],
                            "generic_tys": [
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "error",
                                    "tags",
                                    "Ref"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "tags",
                                        "MaybeSizedValue"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "Var",
                                "name": "impl_Error__plus___Sized"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "err"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Definition",
            "name": "request_by_type_tag",
            "path": [
              "core",
              "error",
              "request_by_type_tag"
            ],
            "snippet": [
              "fn request_by_type_tag<'a, I>(err: &'a (impl Error + ?Sized)) -> Option<I::Reified>",
              "where",
              "    I: tags::Type<'a>,",
              "{",
              "    let mut tagged = Tagged { tag_id: TypeId::of::<I>(), value: TaggedOption::<'a, I>(None) };",
              "    err.provide(tagged.as_request());",
              "    tagged.value.0",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "I",
                "impl_Error__plus___Sized"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "err",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "impl_Error__plus___Sized"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "option",
                      "Option"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Associated"
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "err",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "err"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.read"
                        },
                        "args": [
                          {
                            "Let": {
                              "name": "tagged",
                              "is_user": true,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "StructStruct": {
                                        "path": [
                                          "core",
                                          "error",
                                          "Tagged"
                                        ],
                                        "fields": [
                                          [
                                            "tag_id",
                                            {
                                              "Call": {
                                                "func": {
                                                  "GetAssociatedFunction": {
                                                    "ty": {
                                                      "type": "Application",
                                                      "func": {
                                                        "type": "Path",
                                                        "path": [
                                                          "core",
                                                          "any",
                                                          "TypeId"
                                                        ]
                                                      },
                                                      "consts": [],
                                                      "tys": []
                                                    },
                                                    "func": "of",
                                                    "generic_tys": [
                                                      {
                                                        "type": "Var",
                                                        "name": "I"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "args": [],
                                                "kind": "Closure"
                                              }
                                            }
                                          ],
                                          [
                                            "value",
                                            {
                                              "StructTuple": {
                                                "path": [
                                                  "core",
                                                  "error",
                                                  "TaggedOption"
                                                ],
                                                "fields": [
                                                  {
                                                    "StructTuple": {
                                                      "path": [
                                                        "core",
                                                        "option",
                                                        "Option",
                                                        "None"
                                                      ],
                                                      "fields": []
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        ],
                                        "base": null
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": null,
                                  "is_user": true,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetTraitMethod": {
                                                "trait_name": [
                                                  "core",
                                                  "error",
                                                  "Error"
                                                ],
                                                "self_ty": {
                                                  "type": "Var",
                                                  "name": "impl_Error__plus___Sized"
                                                },
                                                "trait_tys": [],
                                                "method_name": "provide",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "err"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "GetAssociatedFunction": {
                                                      "ty": {
                                                        "type": "Application",
                                                        "func": {
                                                          "type": "Path",
                                                          "path": [
                                                            "core",
                                                            "error",
                                                            "Tagged"
                                                          ]
                                                        },
                                                        "consts": [],
                                                        "tys": [
                                                          {
                                                            "type": "Application",
                                                            "func": {
                                                              "type": "Path",
                                                              "path": [
                                                                "core",
                                                                "error",
                                                                "TaggedOption"
                                                              ]
                                                            },
                                                            "consts": [],
                                                            "tys": [
                                                              {
                                                                "type": "Var",
                                                                "name": "I"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "func": "as_request",
                                                      "generic_tys": []
                                                    }
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "tagged"
                                                    }
                                                  ],
                                                  "kind": "Closure"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_record_field"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "tagged"
                                              },
                                              {
                                                "InternalString": "core::error::Tagged"
                                              },
                                              {
                                                "InternalString": "value"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "InternalString": "core::error::TaggedOption"
                                        },
                                        {
                                          "LocalVar": "0"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ],
                        "kind": "Effectful"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "Request",
            "const_params": [],
            "ty_params": [],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "error",
                    "Tagged"
                  ]
                },
                "consts": [],
                "tys": [
                  {
                    "type": "Dyn",
                    "traits": [
                      [
                        "core",
                        "error",
                        "Erased",
                        "Trait"
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Request"
                ]
              },
              "consts": [],
              "tys": []
            },
            "items": [
              {
                "name": "provide_value",
                "snippet": [
                  "    pub fn provide_value<T>(&mut self, value: T) -> &mut Self",
                  "    where",
                  "        T: 'static,",
                  "    {",
                  "        self.provide::<tags::Value<T>>(value)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ],
                          [
                            "value",
                            {
                              "type": "Var",
                              "name": "T"
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Let": {
                                "name": "value",
                                "is_user": false,
                                "init": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.alloc"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "value"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                },
                                "body": {
                                  "Call": {
                                    "func": {
                                      "GetAssociatedFunction": {
                                        "ty": {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "Request"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        },
                                        "func": "provide",
                                        "generic_tys": [
                                          {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "error",
                                                "tags",
                                                "Value"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": [
                                              {
                                                "type": "Var",
                                                "name": "T"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "args": [
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "self"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "value"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      }
                                    ],
                                    "kind": "Closure"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "provide_value_with",
                "snippet": [
                  "    pub fn provide_value_with<T>(&mut self, fulfil: impl FnOnce() -> T) -> &mut Self",
                  "    where",
                  "        T: 'static,",
                  "    {",
                  "        self.provide_with::<tags::Value<T>>(fulfil)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T",
                        "impl_FnOnce___arrow_T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ],
                          [
                            "fulfil",
                            {
                              "type": "Var",
                              "name": "impl_FnOnce___arrow_T"
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Let": {
                                "name": "fulfil",
                                "is_user": false,
                                "init": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.alloc"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "fulfil"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                },
                                "body": {
                                  "Call": {
                                    "func": {
                                      "GetAssociatedFunction": {
                                        "ty": {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "Request"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        },
                                        "func": "provide_with",
                                        "generic_tys": [
                                          {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "error",
                                                "tags",
                                                "Value"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": [
                                              {
                                                "type": "Var",
                                                "name": "T"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "Var",
                                            "name": "impl_FnOnce___arrow_T"
                                          }
                                        ]
                                      }
                                    },
                                    "args": [
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "self"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "fulfil"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      }
                                    ],
                                    "kind": "Closure"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "provide_ref",
                "snippet": [
                  "    pub fn provide_ref<T: ?Sized + 'static>(&mut self, value: &'a T) -> &mut Self {",
                  "        self.provide::<tags::Ref<tags::MaybeSizedValue<T>>>(value)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ],
                          [
                            "value",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Var",
                                  "name": "T"
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Let": {
                                "name": "value",
                                "is_user": false,
                                "init": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.alloc"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "value"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                },
                                "body": {
                                  "Call": {
                                    "func": {
                                      "GetAssociatedFunction": {
                                        "ty": {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "Request"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        },
                                        "func": "provide",
                                        "generic_tys": [
                                          {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "error",
                                                "tags",
                                                "Ref"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": [
                                              {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "error",
                                                    "tags",
                                                    "MaybeSizedValue"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": [
                                                  {
                                                    "type": "Var",
                                                    "name": "T"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "args": [
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "self"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "value"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      }
                                    ],
                                    "kind": "Closure"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "provide_ref_with",
                "snippet": [
                  "    pub fn provide_ref_with<T: ?Sized + 'static>(",
                  "        &mut self,",
                  "        fulfil: impl FnOnce() -> &'a T,",
                  "    ) -> &mut Self {",
                  "        self.provide_with::<tags::Ref<tags::MaybeSizedValue<T>>>(fulfil)",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T",
                        "impl_FnOnce___arrow__'a_T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ],
                          [
                            "fulfil",
                            {
                              "type": "Var",
                              "name": "impl_FnOnce___arrow__'a_T"
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Let": {
                                "name": "fulfil",
                                "is_user": false,
                                "init": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.alloc"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "fulfil"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                },
                                "body": {
                                  "Call": {
                                    "func": {
                                      "GetAssociatedFunction": {
                                        "ty": {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "Request"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        },
                                        "func": "provide_with",
                                        "generic_tys": [
                                          {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "error",
                                                "tags",
                                                "Ref"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": [
                                              {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "error",
                                                    "tags",
                                                    "MaybeSizedValue"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": [
                                                  {
                                                    "type": "Var",
                                                    "name": "T"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "type": "Var",
                                            "name": "impl_FnOnce___arrow__'a_T"
                                          }
                                        ]
                                      }
                                    },
                                    "args": [
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "self"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.read"
                                          },
                                          "args": [
                                            {
                                              "LocalVar": "fulfil"
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      }
                                    ],
                                    "kind": "Closure"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "provide",
                "snippet": [
                  "    fn provide<I>(&mut self, value: I::Reified) -> &mut Self",
                  "    where",
                  "        I: tags::Type<'a>,",
                  "    {",
                  "        if let Some(res @ TaggedOption(None)) = self.0.downcast_mut::<I>() {",
                  "            res.0 = Some(value);",
                  "        }",
                  "        self",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "I"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ],
                          [
                            "value",
                            {
                              "type": "Associated"
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Let": {
                                "name": "value",
                                "is_user": false,
                                "init": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.alloc"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "value"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                },
                                "body": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.read"
                                    },
                                    "args": [
                                      {
                                        "Let": {
                                          "name": null,
                                          "is_user": true,
                                          "init": {
                                            "Match": {
                                              "scrutinee": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Tuple": {
                                                        "elements": []
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              "arms": [
                                                {
                                                  "Lambda": {
                                                    "args": [
                                                      [
                                                        "γ",
                                                        null
                                                      ]
                                                    ],
                                                    "body": {
                                                      "Let": {
                                                        "name": "γ",
                                                        "is_user": false,
                                                        "init": {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.alloc"
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "GetAssociatedFunction": {
                                                                      "ty": {
                                                                        "type": "Application",
                                                                        "func": {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "core",
                                                                            "error",
                                                                            "Tagged"
                                                                          ]
                                                                        },
                                                                        "consts": [],
                                                                        "tys": [
                                                                          {
                                                                            "type": "Dyn",
                                                                            "traits": [
                                                                              [
                                                                                "core",
                                                                                "error",
                                                                                "Erased",
                                                                                "Trait"
                                                                              ]
                                                                            ]
                                                                          }
                                                                        ]
                                                                      },
                                                                      "func": "downcast_mut",
                                                                      "generic_tys": [
                                                                        {
                                                                          "type": "Var",
                                                                          "name": "I"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "LocalVar": "self"
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "InternalString": "core::error::Request"
                                                                          },
                                                                          {
                                                                            "LocalVar": "0"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Closure"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        "body": {
                                                          "Let": {
                                                            "name": "γ0_0",
                                                            "is_user": false,
                                                            "init": {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "LocalVar": "γ"
                                                                  },
                                                                  {
                                                                    "InternalString": "core::option::Option::Some"
                                                                  },
                                                                  {
                                                                    "InternalInteger": 0
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            },
                                                            "body": {
                                                              "Let": {
                                                                "name": "res",
                                                                "is_user": false,
                                                                "init": {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.copy"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "LocalVar": "γ0_0"
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                },
                                                                "body": {
                                                                  "Let": {
                                                                    "name": "γ0_0",
                                                                    "is_user": false,
                                                                    "init": {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.read"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "LocalVar": "γ0_0"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    },
                                                                    "body": {
                                                                      "Let": {
                                                                        "name": "γ3_0",
                                                                        "is_user": false,
                                                                        "init": {
                                                                          "Call": {
                                                                            "func": {
                                                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                            },
                                                                            "args": [
                                                                              {
                                                                                "LocalVar": "γ0_0"
                                                                              },
                                                                              {
                                                                                "InternalString": "core::error::TaggedOption"
                                                                              },
                                                                              {
                                                                                "InternalInteger": 0
                                                                              }
                                                                            ],
                                                                            "kind": "Effectful"
                                                                          }
                                                                        },
                                                                        "body": {
                                                                          "Let": {
                                                                            "name": null,
                                                                            "is_user": false,
                                                                            "init": {
                                                                              "Call": {
                                                                                "func": {
                                                                                  "LocalVar": "M.is_struct_tuple"
                                                                                },
                                                                                "args": [
                                                                                  {
                                                                                    "LocalVar": "γ3_0"
                                                                                  },
                                                                                  {
                                                                                    "InternalString": "core::option::Option::None"
                                                                                  }
                                                                                ],
                                                                                "kind": "Effectful"
                                                                              }
                                                                            },
                                                                            "body": {
                                                                              "Let": {
                                                                                "name": null,
                                                                                "is_user": true,
                                                                                "init": {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.write"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "Call": {
                                                                                          "func": {
                                                                                            "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                                          },
                                                                                          "args": [
                                                                                            {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.read"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "LocalVar": "res"
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "InternalString": "core::error::TaggedOption"
                                                                                            },
                                                                                            {
                                                                                              "LocalVar": "0"
                                                                                            }
                                                                                          ],
                                                                                          "kind": "Effectful"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "StructTuple": {
                                                                                          "path": [
                                                                                            "core",
                                                                                            "option",
                                                                                            "Option",
                                                                                            "Some"
                                                                                          ],
                                                                                          "fields": [
                                                                                            {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.read"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "LocalVar": "value"
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                },
                                                                                "body": {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.alloc"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "Tuple": {
                                                                                          "elements": []
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "is_for_match": true,
                                                    "is_internal": true
                                                  }
                                                },
                                                {
                                                  "Lambda": {
                                                    "args": [
                                                      [
                                                        "γ",
                                                        null
                                                      ]
                                                    ],
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "Tuple": {
                                                              "elements": []
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "is_for_match": true,
                                                    "is_internal": true
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "body": {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.alloc"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "provide_with",
                "snippet": [
                  "    fn provide_with<I>(&mut self, fulfil: impl FnOnce() -> I::Reified) -> &mut Self",
                  "    where",
                  "        I: tags::Type<'a>,",
                  "    {",
                  "        if let Some(res @ TaggedOption(None)) = self.0.downcast_mut::<I>() {",
                  "            res.0 = Some(fulfil());",
                  "        }",
                  "        self",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "I",
                        "impl_FnOnce___arrow_I_Reified"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ],
                          [
                            "fulfil",
                            {
                              "type": "Var",
                              "name": "impl_FnOnce___arrow_I_Reified"
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Let": {
                                "name": "fulfil",
                                "is_user": false,
                                "init": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.alloc"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "fulfil"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                },
                                "body": {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.read"
                                    },
                                    "args": [
                                      {
                                        "Let": {
                                          "name": null,
                                          "is_user": true,
                                          "init": {
                                            "Match": {
                                              "scrutinee": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Tuple": {
                                                        "elements": []
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              "arms": [
                                                {
                                                  "Lambda": {
                                                    "args": [
                                                      [
                                                        "γ",
                                                        null
                                                      ]
                                                    ],
                                                    "body": {
                                                      "Let": {
                                                        "name": "γ",
                                                        "is_user": false,
                                                        "init": {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.alloc"
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "GetAssociatedFunction": {
                                                                      "ty": {
                                                                        "type": "Application",
                                                                        "func": {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "core",
                                                                            "error",
                                                                            "Tagged"
                                                                          ]
                                                                        },
                                                                        "consts": [],
                                                                        "tys": [
                                                                          {
                                                                            "type": "Dyn",
                                                                            "traits": [
                                                                              [
                                                                                "core",
                                                                                "error",
                                                                                "Erased",
                                                                                "Trait"
                                                                              ]
                                                                            ]
                                                                          }
                                                                        ]
                                                                      },
                                                                      "func": "downcast_mut",
                                                                      "generic_tys": [
                                                                        {
                                                                          "type": "Var",
                                                                          "name": "I"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.read"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "LocalVar": "self"
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          },
                                                                          {
                                                                            "InternalString": "core::error::Request"
                                                                          },
                                                                          {
                                                                            "LocalVar": "0"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Closure"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        "body": {
                                                          "Let": {
                                                            "name": "γ0_0",
                                                            "is_user": false,
                                                            "init": {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "LocalVar": "γ"
                                                                  },
                                                                  {
                                                                    "InternalString": "core::option::Option::Some"
                                                                  },
                                                                  {
                                                                    "InternalInteger": 0
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            },
                                                            "body": {
                                                              "Let": {
                                                                "name": "res",
                                                                "is_user": false,
                                                                "init": {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.copy"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "LocalVar": "γ0_0"
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                },
                                                                "body": {
                                                                  "Let": {
                                                                    "name": "γ0_0",
                                                                    "is_user": false,
                                                                    "init": {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.read"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "LocalVar": "γ0_0"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    },
                                                                    "body": {
                                                                      "Let": {
                                                                        "name": "γ3_0",
                                                                        "is_user": false,
                                                                        "init": {
                                                                          "Call": {
                                                                            "func": {
                                                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                            },
                                                                            "args": [
                                                                              {
                                                                                "LocalVar": "γ0_0"
                                                                              },
                                                                              {
                                                                                "InternalString": "core::error::TaggedOption"
                                                                              },
                                                                              {
                                                                                "InternalInteger": 0
                                                                              }
                                                                            ],
                                                                            "kind": "Effectful"
                                                                          }
                                                                        },
                                                                        "body": {
                                                                          "Let": {
                                                                            "name": null,
                                                                            "is_user": false,
                                                                            "init": {
                                                                              "Call": {
                                                                                "func": {
                                                                                  "LocalVar": "M.is_struct_tuple"
                                                                                },
                                                                                "args": [
                                                                                  {
                                                                                    "LocalVar": "γ3_0"
                                                                                  },
                                                                                  {
                                                                                    "InternalString": "core::option::Option::None"
                                                                                  }
                                                                                ],
                                                                                "kind": "Effectful"
                                                                              }
                                                                            },
                                                                            "body": {
                                                                              "Let": {
                                                                                "name": null,
                                                                                "is_user": true,
                                                                                "init": {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.write"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "Call": {
                                                                                          "func": {
                                                                                            "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                                                          },
                                                                                          "args": [
                                                                                            {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "LocalVar": "M.read"
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "LocalVar": "res"
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Effectful"
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "InternalString": "core::error::TaggedOption"
                                                                                            },
                                                                                            {
                                                                                              "LocalVar": "0"
                                                                                            }
                                                                                          ],
                                                                                          "kind": "Effectful"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "StructTuple": {
                                                                                          "path": [
                                                                                            "core",
                                                                                            "option",
                                                                                            "Option",
                                                                                            "Some"
                                                                                          ],
                                                                                          "fields": [
                                                                                            {
                                                                                              "Call": {
                                                                                                "func": {
                                                                                                  "GetTraitMethod": {
                                                                                                    "trait_name": [
                                                                                                      "core",
                                                                                                      "ops",
                                                                                                      "function",
                                                                                                      "FnOnce"
                                                                                                    ],
                                                                                                    "self_ty": {
                                                                                                      "type": "Var",
                                                                                                      "name": "impl_FnOnce___arrow_I_Reified"
                                                                                                    },
                                                                                                    "trait_tys": [
                                                                                                      {
                                                                                                        "type": "Tuple",
                                                                                                        "tys": []
                                                                                                      }
                                                                                                    ],
                                                                                                    "method_name": "call_once",
                                                                                                    "generic_tys": []
                                                                                                  }
                                                                                                },
                                                                                                "args": [
                                                                                                  {
                                                                                                    "Call": {
                                                                                                      "func": {
                                                                                                        "LocalVar": "M.read"
                                                                                                      },
                                                                                                      "args": [
                                                                                                        {
                                                                                                          "LocalVar": "fulfil"
                                                                                                        }
                                                                                                      ],
                                                                                                      "kind": "Effectful"
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "Tuple": {
                                                                                                      "elements": []
                                                                                                    }
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "Closure"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                },
                                                                                "body": {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.alloc"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "Tuple": {
                                                                                          "elements": []
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "is_for_match": true,
                                                    "is_internal": true
                                                  }
                                                },
                                                {
                                                  "Lambda": {
                                                    "args": [
                                                      [
                                                        "γ",
                                                        null
                                                      ]
                                                    ],
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "Tuple": {
                                                              "elements": []
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "is_for_match": true,
                                                    "is_internal": true
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "body": {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.alloc"
                                              },
                                              "args": [
                                                {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.read"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "self"
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "would_be_satisfied_by_value_of",
                "snippet": [
                  "    pub fn would_be_satisfied_by_value_of<T>(&self) -> bool",
                  "    where",
                  "        T: 'static,",
                  "    {",
                  "        self.would_be_satisfied_by::<tags::Value<T>>()",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "bool"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "error",
                                          "Request"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": []
                                    },
                                    "func": "would_be_satisfied_by",
                                    "generic_tys": [
                                      {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "error",
                                            "tags",
                                            "Value"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": [
                                          {
                                            "type": "Var",
                                            "name": "T"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "would_be_satisfied_by_ref_of",
                "snippet": [
                  "    pub fn would_be_satisfied_by_ref_of<T>(&self) -> bool",
                  "    where",
                  "        T: ?Sized + 'static,",
                  "    {",
                  "        self.would_be_satisfied_by::<tags::Ref<tags::MaybeSizedValue<T>>>()",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "T"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "bool"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "GetAssociatedFunction": {
                                    "ty": {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "error",
                                          "Request"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": []
                                    },
                                    "func": "would_be_satisfied_by",
                                    "generic_tys": [
                                      {
                                        "type": "Application",
                                        "func": {
                                          "type": "Path",
                                          "path": [
                                            "core",
                                            "error",
                                            "tags",
                                            "Ref"
                                          ]
                                        },
                                        "consts": [],
                                        "tys": [
                                          {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "error",
                                                "tags",
                                                "MaybeSizedValue"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": [
                                              {
                                                "type": "Var",
                                                "name": "T"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "args": [
                                  {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "self"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                ],
                                "kind": "Closure"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "would_be_satisfied_by",
                "snippet": [
                  "    fn would_be_satisfied_by<I>(&self) -> bool",
                  "    where",
                  "        I: tags::Type<'a>,",
                  "    {",
                  "        matches!(self.0.downcast::<I>(), Some(TaggedOption(None)))",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "I"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Request"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": []
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Path",
                          "path": [
                            "bool"
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Match": {
                                      "scrutinee": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "GetAssociatedFunction": {
                                                    "ty": {
                                                      "type": "Application",
                                                      "func": {
                                                        "type": "Path",
                                                        "path": [
                                                          "core",
                                                          "error",
                                                          "Tagged"
                                                        ]
                                                      },
                                                      "consts": [],
                                                      "tys": [
                                                        {
                                                          "type": "Dyn",
                                                          "traits": [
                                                            [
                                                              "core",
                                                              "error",
                                                              "Erased",
                                                              "Trait"
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "func": "downcast",
                                                    "generic_tys": [
                                                      {
                                                        "type": "Var",
                                                        "name": "I"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "LocalVar": "self"
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        {
                                                          "InternalString": "core::error::Request"
                                                        },
                                                        {
                                                          "LocalVar": "0"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Closure"
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "arms": [
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Let": {
                                                "name": "γ0_0",
                                                "is_user": false,
                                                "init": {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                    },
                                                    "args": [
                                                      {
                                                        "LocalVar": "γ"
                                                      },
                                                      {
                                                        "InternalString": "core::option::Option::Some"
                                                      },
                                                      {
                                                        "InternalInteger": 0
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                "body": {
                                                  "Let": {
                                                    "name": "γ0_0",
                                                    "is_user": false,
                                                    "init": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "γ0_0"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "body": {
                                                      "Let": {
                                                        "name": "γ2_0",
                                                        "is_user": false,
                                                        "init": {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                            },
                                                            "args": [
                                                              {
                                                                "LocalVar": "γ0_0"
                                                              },
                                                              {
                                                                "InternalString": "core::error::TaggedOption"
                                                              },
                                                              {
                                                                "InternalInteger": 0
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        "body": {
                                                          "Let": {
                                                            "name": null,
                                                            "is_user": false,
                                                            "init": {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.is_struct_tuple"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "LocalVar": "γ2_0"
                                                                  },
                                                                  {
                                                                    "InternalString": "core::option::Option::None"
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            },
                                                            "body": {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.alloc"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "Literal": {
                                                                      "Bool": true
                                                                    }
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        },
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Literal": {
                                                      "Bool": false
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Request"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, f: &mut Formatter<'_>) -> Result {",
                  "        f.debug_struct(\"Request\").finish_non_exhaustive()",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "Request"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "builders",
                                                "DebugStruct"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "finish_non_exhaustive",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "GetAssociatedFunction": {
                                                      "ty": {
                                                        "type": "Application",
                                                        "func": {
                                                          "type": "Path",
                                                          "path": [
                                                            "core",
                                                            "fmt",
                                                            "Formatter"
                                                          ]
                                                        },
                                                        "consts": [],
                                                        "tys": []
                                                      },
                                                      "func": "debug_struct",
                                                      "generic_tys": []
                                                    }
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "f"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "Literal": {
                                                              "String": "Request"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Closure"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Module",
            "name": "tags",
            "body": [
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "Trait",
                  "name": "Type_",
                  "path": [
                    "core",
                    "error",
                    "tags",
                    "Type"
                  ],
                  "const_params": [],
                  "ty_params": [],
                  "body": [
                    [
                      "Reified",
                      {
                        "Type": []
                      }
                    ]
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "Trait",
                  "name": "MaybeSizedType",
                  "path": [
                    "core",
                    "error",
                    "tags",
                    "MaybeSizedType"
                  ],
                  "const_params": [],
                  "ty_params": [],
                  "body": [
                    [
                      "Reified",
                      {
                        "Type": []
                      }
                    ]
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "T"
                  ],
                  "predicates": [
                    {
                      "bound": {
                        "name": [
                          "core",
                          "error",
                          "tags",
                          "Type"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "T"
                      }
                    }
                  ],
                  "self_ty": {
                    "type": "Var",
                    "name": "T"
                  },
                  "of_trait": [
                    "core",
                    "error",
                    "tags",
                    "MaybeSizedType"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "Reified",
                      "snippet": [
                        "        type Reified = T::Reified;"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Type": {
                            "ty": {
                              "type": "Associated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TypeStructTuple",
                  "name": "Value",
                  "const_params": [],
                  "ty_params": [
                    "T"
                  ],
                  "fields": [
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "core",
                          "marker",
                          "PhantomData"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "T"
                  ],
                  "predicates": [
                    {
                      "bound": {
                        "name": [
                          "core",
                          "fmt",
                          "Debug"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "T"
                      }
                    }
                  ],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "tags",
                        "Value"
                      ]
                    },
                    "consts": [],
                    "tys": [
                      {
                        "type": "Var",
                        "name": "T"
                      }
                    ]
                  },
                  "of_trait": [
                    "core",
                    "fmt",
                    "Debug"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "fmt",
                      "snippet": [
                        "    Debug"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Definition": {
                            "definition": {
                              "const_params": [],
                              "ty_params": [],
                              "signature_and_body": {
                                "args": [
                                  [
                                    "self",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "tags",
                                              "Value"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": [
                                            {
                                              "type": "Var",
                                              "name": "T"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    null
                                  ],
                                  [
                                    "f",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&mut"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "fmt",
                                              "Formatter"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        }
                                      ]
                                    },
                                    null
                                  ]
                                ],
                                "ret_ty": {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "result",
                                      "Result"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Tuple",
                                      "tys": []
                                    },
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "fmt",
                                          "Error"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": []
                                    }
                                  ]
                                },
                                "body": {
                                  "Let": {
                                    "name": "self",
                                    "is_user": false,
                                    "init": {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.alloc"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    },
                                    "body": {
                                      "Let": {
                                        "name": "f",
                                        "is_user": false,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "fmt",
                                                      "Formatter"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "debug_tuple_field1_finish",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "f"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "Literal": {
                                                        "String": "Value"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "self"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "InternalString": "core::error::tags::Value"
                                                          },
                                                          {
                                                            "LocalVar": "0"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "T"
                  ],
                  "predicates": [],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "tags",
                        "Value"
                      ]
                    },
                    "consts": [],
                    "tys": [
                      {
                        "type": "Var",
                        "name": "T"
                      }
                    ]
                  },
                  "of_trait": [
                    "core",
                    "error",
                    "tags",
                    "Type"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "Reified",
                      "snippet": [
                        "        type Reified = T;"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Type": {
                            "ty": {
                              "type": "Var",
                              "name": "T"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TypeStructTuple",
                  "name": "MaybeSizedValue",
                  "const_params": [],
                  "ty_params": [
                    "T"
                  ],
                  "fields": [
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "core",
                          "marker",
                          "PhantomData"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "T"
                  ],
                  "predicates": [
                    {
                      "bound": {
                        "name": [
                          "core",
                          "fmt",
                          "Debug"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "T"
                      }
                    },
                    {
                      "bound": {
                        "name": [
                          "core",
                          "marker",
                          "Sized"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "T"
                      }
                    }
                  ],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "tags",
                        "MaybeSizedValue"
                      ]
                    },
                    "consts": [],
                    "tys": [
                      {
                        "type": "Var",
                        "name": "T"
                      }
                    ]
                  },
                  "of_trait": [
                    "core",
                    "fmt",
                    "Debug"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "fmt",
                      "snippet": [
                        "    Debug"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Definition": {
                            "definition": {
                              "const_params": [],
                              "ty_params": [],
                              "signature_and_body": {
                                "args": [
                                  [
                                    "self",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "tags",
                                              "MaybeSizedValue"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": [
                                            {
                                              "type": "Var",
                                              "name": "T"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    null
                                  ],
                                  [
                                    "f",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&mut"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "fmt",
                                              "Formatter"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        }
                                      ]
                                    },
                                    null
                                  ]
                                ],
                                "ret_ty": {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "result",
                                      "Result"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Tuple",
                                      "tys": []
                                    },
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "fmt",
                                          "Error"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": []
                                    }
                                  ]
                                },
                                "body": {
                                  "Let": {
                                    "name": "self",
                                    "is_user": false,
                                    "init": {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.alloc"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    },
                                    "body": {
                                      "Let": {
                                        "name": "f",
                                        "is_user": false,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "fmt",
                                                      "Formatter"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "debug_tuple_field1_finish",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "f"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "Literal": {
                                                        "String": "MaybeSizedValue"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "self"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "InternalString": "core::error::tags::MaybeSizedValue"
                                                          },
                                                          {
                                                            "LocalVar": "0"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "T"
                  ],
                  "predicates": [
                    {
                      "bound": {
                        "name": [
                          "core",
                          "marker",
                          "Sized"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "T"
                      }
                    }
                  ],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "tags",
                        "MaybeSizedValue"
                      ]
                    },
                    "consts": [],
                    "tys": [
                      {
                        "type": "Var",
                        "name": "T"
                      }
                    ]
                  },
                  "of_trait": [
                    "core",
                    "error",
                    "tags",
                    "MaybeSizedType"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "Reified",
                      "snippet": [
                        "        type Reified = T;"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Type": {
                            "ty": {
                              "type": "Var",
                              "name": "T"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TypeStructTuple",
                  "name": "Ref",
                  "const_params": [],
                  "ty_params": [
                    "I"
                  ],
                  "fields": [
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "core",
                          "marker",
                          "PhantomData"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "I"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "I"
                  ],
                  "predicates": [
                    {
                      "bound": {
                        "name": [
                          "core",
                          "fmt",
                          "Debug"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "I"
                      }
                    }
                  ],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "tags",
                        "Ref"
                      ]
                    },
                    "consts": [],
                    "tys": [
                      {
                        "type": "Var",
                        "name": "I"
                      }
                    ]
                  },
                  "of_trait": [
                    "core",
                    "fmt",
                    "Debug"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "fmt",
                      "snippet": [
                        "    Debug"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Definition": {
                            "definition": {
                              "const_params": [],
                              "ty_params": [],
                              "signature_and_body": {
                                "args": [
                                  [
                                    "self",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "error",
                                              "tags",
                                              "Ref"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": [
                                            {
                                              "type": "Var",
                                              "name": "I"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    null
                                  ],
                                  [
                                    "f",
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "&mut"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "fmt",
                                              "Formatter"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": []
                                        }
                                      ]
                                    },
                                    null
                                  ]
                                ],
                                "ret_ty": {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "result",
                                      "Result"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Tuple",
                                      "tys": []
                                    },
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "fmt",
                                          "Error"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": []
                                    }
                                  ]
                                },
                                "body": {
                                  "Let": {
                                    "name": "self",
                                    "is_user": false,
                                    "init": {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.alloc"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    },
                                    "body": {
                                      "Let": {
                                        "name": "f",
                                        "is_user": false,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "fmt",
                                                      "Formatter"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "debug_tuple_field1_finish",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "f"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "Literal": {
                                                        "String": "Ref"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "self"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "InternalString": "core::error::tags::Ref"
                                                          },
                                                          {
                                                            "LocalVar": "0"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "file_name": "core/src/error.rs",
                "item": {
                  "type": "TraitImpl",
                  "generic_consts": [],
                  "generic_tys": [
                    "I"
                  ],
                  "predicates": [
                    {
                      "bound": {
                        "name": [
                          "core",
                          "error",
                          "tags",
                          "MaybeSizedType"
                        ],
                        "ty_params": []
                      },
                      "ty": {
                        "type": "Var",
                        "name": "I"
                      }
                    }
                  ],
                  "self_ty": {
                    "type": "Application",
                    "func": {
                      "type": "Path",
                      "path": [
                        "core",
                        "error",
                        "tags",
                        "Ref"
                      ]
                    },
                    "consts": [],
                    "tys": [
                      {
                        "type": "Var",
                        "name": "I"
                      }
                    ]
                  },
                  "of_trait": [
                    "core",
                    "error",
                    "tags",
                    "Type"
                  ],
                  "trait_ty_params": [],
                  "items": [
                    {
                      "name": "Reified",
                      "snippet": [
                        "        type Reified = &'a I::Reified;"
                      ],
                      "kind": {
                        "RequiredValue": {
                          "Type": {
                            "ty": {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Associated"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "TaggedOption",
            "const_params": [],
            "ty_params": [
              "I"
            ],
            "fields": [
              {
                "type": "Application",
                "func": {
                  "type": "Path",
                  "path": [
                    "core",
                    "option",
                    "Option"
                  ]
                },
                "consts": [],
                "tys": [
                  {
                    "type": "Associated"
                  }
                ]
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [
              "I"
            ],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Tagged"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "error",
                      "TaggedOption"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Var",
                      "name": "I"
                    }
                  ]
                }
              ]
            },
            "items": [
              {
                "name": "as_request",
                "snippet": [
                  "    pub(crate) fn as_request(&mut self) -> &mut Request<'a> {",
                  "        let erased = self as &mut Tagged<dyn Erased<'a> + 'a>;",
                  "        // SAFETY: transmuting `&mut Tagged<dyn Erased<'a> + 'a>` to `&mut Request<'a>` is safe since",
                  "        // `Request` is repr(transparent).",
                  "        unsafe { &mut *(erased as *mut Tagged<dyn Erased<'a>> as *mut Request<'a>) }",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Tagged"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Application",
                                      "func": {
                                        "type": "Path",
                                        "path": [
                                          "core",
                                          "error",
                                          "TaggedOption"
                                        ]
                                      },
                                      "consts": [],
                                      "tys": [
                                        {
                                          "type": "Var",
                                          "name": "I"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "&mut"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "core",
                                  "error",
                                  "Request"
                                ]
                              },
                              "consts": [],
                              "tys": []
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Let": {
                                      "name": "erased",
                                      "is_user": true,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.copy"
                                          },
                                          "args": [
                                            {
                                              "Use": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.rust_cast"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "Use": {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.alloc"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.read"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "LocalVar": "erased"
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Pure"
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Trait",
            "name": "Erased",
            "path": [
              "core",
              "error",
              "Erased"
            ],
            "const_params": [],
            "ty_params": [],
            "body": []
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "I"
            ],
            "predicates": [
              {
                "bound": {
                  "name": [
                    "core",
                    "error",
                    "tags",
                    "Type"
                  ],
                  "ty_params": []
                },
                "ty": {
                  "type": "Var",
                  "name": "I"
                }
              }
            ],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "TaggedOption"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "I"
                }
              ]
            },
            "of_trait": [
              "core",
              "error",
              "Erased"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TypeStructStruct",
            "name": "Tagged",
            "const_params": [],
            "ty_params": [
              "E"
            ],
            "fields": [
              [
                "tag_id",
                {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "any",
                      "TypeId"
                    ]
                  },
                  "consts": [],
                  "tys": []
                }
              ],
              [
                "value",
                {
                  "type": "Var",
                  "name": "E"
                }
              ]
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "Impl",
            "generic_consts": [],
            "generic_tys": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Tagged"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Dyn",
                  "traits": [
                    [
                      "core",
                      "error",
                      "Erased",
                      "Trait"
                    ]
                  ]
                }
              ]
            },
            "items": [
              {
                "name": "downcast",
                "snippet": [
                  "    fn downcast<I>(&self) -> Option<&TaggedOption<'a, I>>",
                  "    where",
                  "        I: tags::Type<'a>,",
                  "    {",
                  "        if self.tag_id == TypeId::of::<I>() {",
                  "            // SAFETY: Just checked whether we're pointing to an I.",
                  "            Some(&unsafe { &*(self as *const Self).cast::<Tagged<TaggedOption<'a, I>>>() }.value)",
                  "        } else {",
                  "            None",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "I"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Tagged"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Erased",
                                          "Trait"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "TaggedOption"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Var",
                                      "name": "I"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Match": {
                                      "scrutinee": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Tuple": {
                                                "elements": []
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "arms": [
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Let": {
                                                "name": "γ",
                                                "is_user": false,
                                                "init": {
                                                  "Use": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.alloc"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "GetTraitMethod": {
                                                                "trait_name": [
                                                                  "core",
                                                                  "cmp",
                                                                  "PartialEq"
                                                                ],
                                                                "self_ty": {
                                                                  "type": "Application",
                                                                  "func": {
                                                                    "type": "Path",
                                                                    "path": [
                                                                      "core",
                                                                      "any",
                                                                      "TypeId"
                                                                    ]
                                                                  },
                                                                  "consts": [],
                                                                  "tys": []
                                                                },
                                                                "trait_tys": [
                                                                  {
                                                                    "type": "Application",
                                                                    "func": {
                                                                      "type": "Path",
                                                                      "path": [
                                                                        "core",
                                                                        "any",
                                                                        "TypeId"
                                                                      ]
                                                                    },
                                                                    "consts": [],
                                                                    "tys": []
                                                                  }
                                                                ],
                                                                "method_name": "eq",
                                                                "generic_tys": []
                                                              }
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.SubPointer.get_struct_record_field"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.read"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "LocalVar": "self"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    },
                                                                    {
                                                                      "InternalString": "core::error::Tagged"
                                                                    },
                                                                    {
                                                                      "InternalString": "tag_id"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetAssociatedFunction": {
                                                                            "ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "any",
                                                                                  "TypeId"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": []
                                                                            },
                                                                            "func": "of",
                                                                            "generic_tys": [
                                                                              {
                                                                                "type": "Var",
                                                                                "name": "I"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        "args": [],
                                                                        "kind": "Closure"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Closure"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                },
                                                "body": {
                                                  "Let": {
                                                    "name": null,
                                                    "is_user": false,
                                                    "init": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.is_constant_or_break_match"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "Literal": {
                                                              "Bool": true
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "StructTuple": {
                                                              "path": [
                                                                "core",
                                                                "option",
                                                                "Option",
                                                                "Some"
                                                              ],
                                                              "fields": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.SubPointer.get_struct_record_field"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "GetAssociatedFunction": {
                                                                              "ty": {
                                                                                "type": "Application",
                                                                                "func": {
                                                                                  "type": "Path",
                                                                                  "path": [
                                                                                    "*const"
                                                                                  ]
                                                                                },
                                                                                "consts": [],
                                                                                "tys": [
                                                                                  {
                                                                                    "type": "Application",
                                                                                    "func": {
                                                                                      "type": "Path",
                                                                                      "path": [
                                                                                        "core",
                                                                                        "error",
                                                                                        "Tagged"
                                                                                      ]
                                                                                    },
                                                                                    "consts": [],
                                                                                    "tys": [
                                                                                      {
                                                                                        "type": "Dyn",
                                                                                        "traits": [
                                                                                          [
                                                                                            "core",
                                                                                            "error",
                                                                                            "Erased",
                                                                                            "Trait"
                                                                                          ]
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "func": "cast",
                                                                              "generic_tys": [
                                                                                {
                                                                                  "type": "Application",
                                                                                  "func": {
                                                                                    "type": "Path",
                                                                                    "path": [
                                                                                      "core",
                                                                                      "error",
                                                                                      "Tagged"
                                                                                    ]
                                                                                  },
                                                                                  "consts": [],
                                                                                  "tys": [
                                                                                    {
                                                                                      "type": "Application",
                                                                                      "func": {
                                                                                        "type": "Path",
                                                                                        "path": [
                                                                                          "core",
                                                                                          "error",
                                                                                          "TaggedOption"
                                                                                        ]
                                                                                      },
                                                                                      "consts": [],
                                                                                      "tys": [
                                                                                        {
                                                                                          "type": "Var",
                                                                                          "name": "I"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Call": {
                                                                                "func": {
                                                                                  "LocalVar": "M.read"
                                                                                },
                                                                                "args": [
                                                                                  {
                                                                                    "Use": {
                                                                                      "Call": {
                                                                                        "func": {
                                                                                          "LocalVar": "M.alloc"
                                                                                        },
                                                                                        "args": [
                                                                                          {
                                                                                            "Call": {
                                                                                              "func": {
                                                                                                "LocalVar": "M.read"
                                                                                              },
                                                                                              "args": [
                                                                                                {
                                                                                                  "LocalVar": "self"
                                                                                                }
                                                                                              ],
                                                                                              "kind": "Effectful"
                                                                                            }
                                                                                          }
                                                                                        ],
                                                                                        "kind": "Effectful"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "kind": "Effectful"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Closure"
                                                                        }
                                                                      },
                                                                      {
                                                                        "InternalString": "core::error::Tagged"
                                                                      },
                                                                      {
                                                                        "InternalString": "value"
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        },
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "StructTuple": {
                                                      "path": [
                                                        "core",
                                                        "option",
                                                        "Option",
                                                        "None"
                                                      ],
                                                      "fields": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "downcast_mut",
                "snippet": [
                  "    fn downcast_mut<I>(&mut self) -> Option<&mut TaggedOption<'a, I>>",
                  "    where",
                  "        I: tags::Type<'a>,",
                  "    {",
                  "        if self.tag_id == TypeId::of::<I>() {",
                  "            Some(",
                  "                // SAFETY: Just checked whether we're pointing to an I.",
                  "                &mut unsafe { &mut *(self as *mut Self).cast::<Tagged<TaggedOption<'a, I>>>() }",
                  "                    .value,",
                  "            )",
                  "        } else {",
                  "            None",
                  "        }",
                  "    }"
                ],
                "kind": {
                  "Definition": {
                    "definition": {
                      "const_params": [],
                      "ty_params": [
                        "I"
                      ],
                      "signature_and_body": {
                        "args": [
                          [
                            "self",
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "Tagged"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Dyn",
                                      "traits": [
                                        [
                                          "core",
                                          "error",
                                          "Erased",
                                          "Trait"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            null
                          ]
                        ],
                        "ret_ty": {
                          "type": "Application",
                          "func": {
                            "type": "Path",
                            "path": [
                              "core",
                              "option",
                              "Option"
                            ]
                          },
                          "consts": [],
                          "tys": [
                            {
                              "type": "Application",
                              "func": {
                                "type": "Path",
                                "path": [
                                  "&mut"
                                ]
                              },
                              "consts": [],
                              "tys": [
                                {
                                  "type": "Application",
                                  "func": {
                                    "type": "Path",
                                    "path": [
                                      "core",
                                      "error",
                                      "TaggedOption"
                                    ]
                                  },
                                  "consts": [],
                                  "tys": [
                                    {
                                      "type": "Var",
                                      "name": "I"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "body": {
                          "Let": {
                            "name": "self",
                            "is_user": false,
                            "init": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.alloc"
                                },
                                "args": [
                                  {
                                    "LocalVar": "self"
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            },
                            "body": {
                              "Call": {
                                "func": {
                                  "LocalVar": "M.read"
                                },
                                "args": [
                                  {
                                    "Match": {
                                      "scrutinee": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Tuple": {
                                                "elements": []
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "arms": [
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Let": {
                                                "name": "γ",
                                                "is_user": false,
                                                "init": {
                                                  "Use": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.alloc"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "GetTraitMethod": {
                                                                "trait_name": [
                                                                  "core",
                                                                  "cmp",
                                                                  "PartialEq"
                                                                ],
                                                                "self_ty": {
                                                                  "type": "Application",
                                                                  "func": {
                                                                    "type": "Path",
                                                                    "path": [
                                                                      "core",
                                                                      "any",
                                                                      "TypeId"
                                                                    ]
                                                                  },
                                                                  "consts": [],
                                                                  "tys": []
                                                                },
                                                                "trait_tys": [
                                                                  {
                                                                    "type": "Application",
                                                                    "func": {
                                                                      "type": "Path",
                                                                      "path": [
                                                                        "core",
                                                                        "any",
                                                                        "TypeId"
                                                                      ]
                                                                    },
                                                                    "consts": [],
                                                                    "tys": []
                                                                  }
                                                                ],
                                                                "method_name": "eq",
                                                                "generic_tys": []
                                                              }
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.SubPointer.get_struct_record_field"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.read"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "LocalVar": "self"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    },
                                                                    {
                                                                      "InternalString": "core::error::Tagged"
                                                                    },
                                                                    {
                                                                      "InternalString": "tag_id"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.alloc"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetAssociatedFunction": {
                                                                            "ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "any",
                                                                                  "TypeId"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": []
                                                                            },
                                                                            "func": "of",
                                                                            "generic_tys": [
                                                                              {
                                                                                "type": "Var",
                                                                                "name": "I"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        "args": [],
                                                                        "kind": "Closure"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Closure"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                },
                                                "body": {
                                                  "Let": {
                                                    "name": null,
                                                    "is_user": false,
                                                    "init": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.is_constant_or_break_match"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "γ"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "Literal": {
                                                              "Bool": true
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "body": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "StructTuple": {
                                                              "path": [
                                                                "core",
                                                                "option",
                                                                "Option",
                                                                "Some"
                                                              ],
                                                              "fields": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.SubPointer.get_struct_record_field"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "GetAssociatedFunction": {
                                                                              "ty": {
                                                                                "type": "Application",
                                                                                "func": {
                                                                                  "type": "Path",
                                                                                  "path": [
                                                                                    "*mut"
                                                                                  ]
                                                                                },
                                                                                "consts": [],
                                                                                "tys": [
                                                                                  {
                                                                                    "type": "Application",
                                                                                    "func": {
                                                                                      "type": "Path",
                                                                                      "path": [
                                                                                        "core",
                                                                                        "error",
                                                                                        "Tagged"
                                                                                      ]
                                                                                    },
                                                                                    "consts": [],
                                                                                    "tys": [
                                                                                      {
                                                                                        "type": "Dyn",
                                                                                        "traits": [
                                                                                          [
                                                                                            "core",
                                                                                            "error",
                                                                                            "Erased",
                                                                                            "Trait"
                                                                                          ]
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "func": "cast",
                                                                              "generic_tys": [
                                                                                {
                                                                                  "type": "Application",
                                                                                  "func": {
                                                                                    "type": "Path",
                                                                                    "path": [
                                                                                      "core",
                                                                                      "error",
                                                                                      "Tagged"
                                                                                    ]
                                                                                  },
                                                                                  "consts": [],
                                                                                  "tys": [
                                                                                    {
                                                                                      "type": "Application",
                                                                                      "func": {
                                                                                        "type": "Path",
                                                                                        "path": [
                                                                                          "core",
                                                                                          "error",
                                                                                          "TaggedOption"
                                                                                        ]
                                                                                      },
                                                                                      "consts": [],
                                                                                      "tys": [
                                                                                        {
                                                                                          "type": "Var",
                                                                                          "name": "I"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "Call": {
                                                                                "func": {
                                                                                  "LocalVar": "M.read"
                                                                                },
                                                                                "args": [
                                                                                  {
                                                                                    "Use": {
                                                                                      "Call": {
                                                                                        "func": {
                                                                                          "LocalVar": "M.alloc"
                                                                                        },
                                                                                        "args": [
                                                                                          {
                                                                                            "Call": {
                                                                                              "func": {
                                                                                                "LocalVar": "M.read"
                                                                                              },
                                                                                              "args": [
                                                                                                {
                                                                                                  "LocalVar": "self"
                                                                                                }
                                                                                              ],
                                                                                              "kind": "Effectful"
                                                                                            }
                                                                                          }
                                                                                        ],
                                                                                        "kind": "Effectful"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "kind": "Effectful"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "Closure"
                                                                        }
                                                                      },
                                                                      {
                                                                        "InternalString": "core::error::Tagged"
                                                                      },
                                                                      {
                                                                        "InternalString": "value"
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        },
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "γ",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "StructTuple": {
                                                      "path": [
                                                        "core",
                                                        "option",
                                                        "Option",
                                                        "None"
                                                      ],
                                                      "fields": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "kind": "Effectful"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TypeStructStruct",
            "name": "Source",
            "const_params": [],
            "ty_params": [],
            "fields": [
              [
                "current",
                {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "option",
                      "Option"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Dyn",
                          "traits": [
                            [
                              "core",
                              "error",
                              "Error",
                              "Trait"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Source"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "Clone"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "Source"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "error",
                                "Source"
                              ]
                            },
                            "consts": [],
                            "tys": []
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "StructStruct": {
                                  "path": [
                                    "core",
                                    "error",
                                    "Source"
                                  ],
                                  "fields": [
                                    [
                                      "current",
                                      {
                                        "Call": {
                                          "func": {
                                            "GetTraitMethod": {
                                              "trait_name": [
                                                "core",
                                                "clone",
                                                "Clone"
                                              ],
                                              "self_ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "option",
                                                    "Option"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": [
                                                  {
                                                    "type": "Application",
                                                    "func": {
                                                      "type": "Path",
                                                      "path": [
                                                        "&"
                                                      ]
                                                    },
                                                    "consts": [],
                                                    "tys": [
                                                      {
                                                        "type": "Dyn",
                                                        "traits": [
                                                          [
                                                            "core",
                                                            "error",
                                                            "Error",
                                                            "Trait"
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "trait_tys": [],
                                              "method_name": "clone",
                                              "generic_tys": []
                                            }
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.SubPointer.get_struct_record_field"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "self"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  {
                                                    "InternalString": "core::error::Source"
                                                  },
                                                  {
                                                    "InternalString": "current"
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          ],
                                          "kind": "Closure"
                                        }
                                      }
                                    ]
                                  ],
                                  "base": null
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Source"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "Debug"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "Source"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "f",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "f",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "f"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "Formatter"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "debug_struct_field1_finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "LocalVar": "f"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "Source"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.read"
                                            },
                                            "args": [
                                              {
                                                "Literal": {
                                                  "String": "current"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_record_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::error::Source"
                                                    },
                                                    {
                                                      "InternalString": "current"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Source"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "iterator",
              "Iterator"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "Item",
                "snippet": [
                  "    type Item = &'a (dyn Error + 'static);"
                ],
                "kind": {
                  "RequiredValue": {
                    "Type": {
                      "ty": {
                        "type": "Application",
                        "func": {
                          "type": "Path",
                          "path": [
                            "&"
                          ]
                        },
                        "consts": [],
                        "tys": [
                          {
                            "type": "Dyn",
                            "traits": [
                              [
                                "core",
                                "error",
                                "Error",
                                "Trait"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "name": "next",
                "snippet": [
                  "    fn next(&mut self) -> Option<Self::Item> {",
                  "        let current = self.current;",
                  "        self.current = self.current.and_then(Error::source);",
                  "        current",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "Source"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Associated"
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Let": {
                                        "name": "current",
                                        "is_user": true,
                                        "init": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.copy"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_record_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::error::Source"
                                                    },
                                                    {
                                                      "InternalString": "current"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "body": {
                                          "Let": {
                                            "name": null,
                                            "is_user": true,
                                            "init": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.write"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.SubPointer.get_struct_record_field"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "LocalVar": "self"
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        {
                                                          "InternalString": "core::error::Source"
                                                        },
                                                        {
                                                          "InternalString": "current"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "GetAssociatedFunction": {
                                                          "ty": {
                                                            "type": "Application",
                                                            "func": {
                                                              "type": "Path",
                                                              "path": [
                                                                "core",
                                                                "option",
                                                                "Option"
                                                              ]
                                                            },
                                                            "consts": [],
                                                            "tys": [
                                                              {
                                                                "type": "Application",
                                                                "func": {
                                                                  "type": "Path",
                                                                  "path": [
                                                                    "&"
                                                                  ]
                                                                },
                                                                "consts": [],
                                                                "tys": [
                                                                  {
                                                                    "type": "Dyn",
                                                                    "traits": [
                                                                      [
                                                                        "core",
                                                                        "error",
                                                                        "Error",
                                                                        "Trait"
                                                                      ]
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          },
                                                          "func": "and_then",
                                                          "generic_tys": [
                                                            {
                                                              "type": "Application",
                                                              "func": {
                                                                "type": "Path",
                                                                "path": [
                                                                  "&"
                                                                ]
                                                              },
                                                              "consts": [],
                                                              "tys": [
                                                                {
                                                                  "type": "Dyn",
                                                                  "traits": [
                                                                    [
                                                                      "core",
                                                                      "error",
                                                                      "Error",
                                                                      "Trait"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Function",
                                                              "args": [
                                                                {
                                                                  "type": "Application",
                                                                  "func": {
                                                                    "type": "Path",
                                                                    "path": [
                                                                      "&"
                                                                    ]
                                                                  },
                                                                  "consts": [],
                                                                  "tys": [
                                                                    {
                                                                      "type": "Dyn",
                                                                      "traits": [
                                                                        [
                                                                          "core",
                                                                          "error",
                                                                          "Error",
                                                                          "Trait"
                                                                        ]
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ],
                                                              "ret": {
                                                                "type": "Application",
                                                                "func": {
                                                                  "type": "Path",
                                                                  "path": [
                                                                    "core",
                                                                    "option",
                                                                    "Option"
                                                                  ]
                                                                },
                                                                "consts": [],
                                                                "tys": [
                                                                  {
                                                                    "type": "Application",
                                                                    "func": {
                                                                      "type": "Path",
                                                                      "path": [
                                                                        "&"
                                                                      ]
                                                                    },
                                                                    "consts": [],
                                                                    "tys": [
                                                                      {
                                                                        "type": "Dyn",
                                                                        "traits": [
                                                                          [
                                                                            "core",
                                                                            "error",
                                                                            "Error",
                                                                            "Trait"
                                                                          ]
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.SubPointer.get_struct_record_field"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "LocalVar": "M.read"
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "LocalVar": "self"
                                                                          }
                                                                        ],
                                                                        "kind": "Effectful"
                                                                      }
                                                                    },
                                                                    {
                                                                      "InternalString": "core::error::Source"
                                                                    },
                                                                    {
                                                                      "InternalString": "current"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        {
                                                          "GetTraitMethod": {
                                                            "trait_name": [
                                                              "core",
                                                              "error",
                                                              "Error"
                                                            ],
                                                            "self_ty": {
                                                              "type": "Dyn",
                                                              "traits": [
                                                                [
                                                                  "core",
                                                                  "error",
                                                                  "Error",
                                                                  "Trait"
                                                                ]
                                                              ]
                                                            },
                                                            "trait_tys": [],
                                                            "method_name": "source",
                                                            "generic_tys": []
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Closure"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "body": {
                                              "LocalVar": "current"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "size_hint",
                "snippet": [
                  "    fn size_hint(&self) -> (usize, Option<usize>) {",
                  "        if self.current.is_some() { (1, None) } else { (0, Some(0)) }",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "Source"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Tuple",
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "usize"
                                ]
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "option",
                                    "Option"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Path",
                                    "path": [
                                      "usize"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Match": {
                                        "scrutinee": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Tuple": {
                                                  "elements": []
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "arms": [
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Let": {
                                                  "name": "γ",
                                                  "is_user": false,
                                                  "init": {
                                                    "Use": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.alloc"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "GetAssociatedFunction": {
                                                                  "ty": {
                                                                    "type": "Application",
                                                                    "func": {
                                                                      "type": "Path",
                                                                      "path": [
                                                                        "core",
                                                                        "option",
                                                                        "Option"
                                                                      ]
                                                                    },
                                                                    "consts": [],
                                                                    "tys": [
                                                                      {
                                                                        "type": "Application",
                                                                        "func": {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "&"
                                                                          ]
                                                                        },
                                                                        "consts": [],
                                                                        "tys": [
                                                                          {
                                                                            "type": "Dyn",
                                                                            "traits": [
                                                                              [
                                                                                "core",
                                                                                "error",
                                                                                "Error",
                                                                                "Trait"
                                                                              ]
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  },
                                                                  "func": "is_some",
                                                                  "generic_tys": []
                                                                }
                                                              },
                                                              "args": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "LocalVar": "M.SubPointer.get_struct_record_field"
                                                                    },
                                                                    "args": [
                                                                      {
                                                                        "Call": {
                                                                          "func": {
                                                                            "LocalVar": "M.read"
                                                                          },
                                                                          "args": [
                                                                            {
                                                                              "LocalVar": "self"
                                                                            }
                                                                          ],
                                                                          "kind": "Effectful"
                                                                        }
                                                                      },
                                                                      {
                                                                        "InternalString": "core::error::Source"
                                                                      },
                                                                      {
                                                                        "InternalString": "current"
                                                                      }
                                                                    ],
                                                                    "kind": "Effectful"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Closure"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  },
                                                  "body": {
                                                    "Let": {
                                                      "name": null,
                                                      "is_user": false,
                                                      "init": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.is_constant_or_break_match"
                                                          },
                                                          "args": [
                                                            {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.read"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "LocalVar": "γ"
                                                                  }
                                                                ],
                                                                "kind": "Effectful"
                                                              }
                                                            },
                                                            {
                                                              "Literal": {
                                                                "Bool": true
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      "body": {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.alloc"
                                                          },
                                                          "args": [
                                                            {
                                                              "Tuple": {
                                                                "elements": [
                                                                  {
                                                                    "Literal": {
                                                                      "Integer": {
                                                                        "kind": "Usize",
                                                                        "negative_sign": false,
                                                                        "value": 1
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "StructTuple": {
                                                                      "path": [
                                                                        "core",
                                                                        "option",
                                                                        "Option",
                                                                        "None"
                                                                      ],
                                                                      "fields": []
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          },
                                          {
                                            "Lambda": {
                                              "args": [
                                                [
                                                  "γ",
                                                  null
                                                ]
                                              ],
                                              "body": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Tuple": {
                                                        "elements": [
                                                          {
                                                            "Literal": {
                                                              "Integer": {
                                                                "kind": "Usize",
                                                                "negative_sign": false,
                                                                "value": 0
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "StructTuple": {
                                                              "path": [
                                                                "core",
                                                                "option",
                                                                "Option",
                                                                "Some"
                                                              ],
                                                              "fields": [
                                                                {
                                                                  "Literal": {
                                                                    "Integer": {
                                                                      "kind": "Usize",
                                                                      "negative_sign": false,
                                                                      "value": 0
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              "is_for_match": true,
                                              "is_internal": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "next_chunk",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "count",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "last",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "advance_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "nth",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "step_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "chain",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "zip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "intersperse_with",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "filter_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "enumerate",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "peekable",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_while",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "skip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "take",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "scan",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flat_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "flatten",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "map_windows",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fuse",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "inspect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "by_ref",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_collect",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "collect_into",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partition_in_place",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_partitioned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_for_each",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "fold",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_reduce",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "all",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "any",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "find_map",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "try_find",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "position",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rposition",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "max_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "min_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "rev",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "unzip",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "copied",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cloned",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cycle",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "array_chunks",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "sum",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "product",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "partial_cmp_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "eq_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "lt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "le",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "gt",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "ge",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "is_sorted_by_key",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "__iterator_get_unchecked",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "error",
                  "Source"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "iter",
              "traits",
              "marker",
              "FusedIterator"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [
              {
                "bound": {
                  "name": [
                    "core",
                    "error",
                    "Error"
                  ],
                  "ty_params": []
                },
                "ty": {
                  "type": "Var",
                  "name": "T"
                }
              },
              {
                "bound": {
                  "name": [
                    "core",
                    "marker",
                    "Sized"
                  ],
                  "ty_params": []
                },
                "ty": {
                  "type": "Var",
                  "name": "T"
                }
              }
            ],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "&"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "description",
                "snippet": [
                  "    fn description(&self) -> &str {",
                  "        Error::description(&**self)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "&"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "str"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "error",
                                        "Error"
                                      ],
                                      "self_ty": {
                                        "type": "Var",
                                        "name": "T"
                                      },
                                      "trait_tys": [],
                                      "method_name": "description",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "cause",
                "snippet": [
                  "    fn cause(&self) -> Option<&dyn Error> {",
                  "        Error::cause(&**self)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "&"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Dyn",
                                    "traits": [
                                      [
                                        "core",
                                        "error",
                                        "Error",
                                        "Trait"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "error",
                                        "Error"
                                      ],
                                      "self_ty": {
                                        "type": "Var",
                                        "name": "T"
                                      },
                                      "trait_tys": [],
                                      "method_name": "cause",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "source",
                "snippet": [
                  "    fn source(&self) -> Option<&(dyn Error + 'static)> {",
                  "        Error::source(&**self)",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "&"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "option",
                                "Option"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Dyn",
                                    "traits": [
                                      [
                                        "core",
                                        "error",
                                        "Error",
                                        "Trait"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "GetTraitMethod": {
                                      "trait_name": [
                                        "core",
                                        "error",
                                        "Error"
                                      ],
                                      "self_ty": {
                                        "type": "Var",
                                        "name": "T"
                                      },
                                      "trait_tys": [],
                                      "method_name": "source",
                                      "generic_tys": []
                                    }
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "self"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Closure"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "provide",
                "snippet": [
                  "    fn provide<'b>(&'b self, request: &mut Request<'b>) {",
                  "        Error::provide(&**self, request);",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "&"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "request",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "error",
                                        "Request"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "unit"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "request",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "request"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "Let": {
                                            "name": null,
                                            "is_user": true,
                                            "init": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "GetTraitMethod": {
                                                          "trait_name": [
                                                            "core",
                                                            "error",
                                                            "Error"
                                                          ],
                                                          "self_ty": {
                                                            "type": "Var",
                                                            "name": "T"
                                                          },
                                                          "trait_tys": [],
                                                          "method_name": "provide",
                                                          "generic_tys": []
                                                        }
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.read"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "self"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "LocalVar": "request"
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Closure"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Tuple": {
                                                      "elements": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "fmt",
                  "Error"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "description",
                "snippet": [
                  "    fn description(&self) -> &str {",
                  "        \"an error occurred when formatting an argument\"",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Error"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "str"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Literal": {
                                        "String": "an error occurred when formatting an argument"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "cell",
                  "BorrowError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "description",
                "snippet": [
                  "    fn description(&self) -> &str {",
                  "        \"already mutably borrowed\"",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "cell",
                                        "BorrowError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "str"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Literal": {
                                        "String": "already mutably borrowed"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "cell",
                  "BorrowMutError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "description",
                "snippet": [
                  "    fn description(&self) -> &str {",
                  "        \"already borrowed\"",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "cell",
                                        "BorrowMutError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "str"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Literal": {
                                        "String": "already borrowed"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "char",
                  "convert",
                  "CharTryFromError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "description",
                "snippet": [
                  "    fn description(&self) -> &str {",
                  "        \"converted integer out of range for `char`\"",
                  "    }"
                ],
                "kind": {
                  "OptionalValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "char",
                                        "convert",
                                        "CharTryFromError"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "&"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Path",
                                "path": [
                                  "str"
                                ]
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Literal": {
                                        "String": "converted integer out of range for `char`"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "time",
                  "TryFromFloatSecsError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "description",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "ffi",
                  "c_str",
                  "FromBytesUntilNulError"
                ]
              },
              "consts": [],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "description",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/error.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [
              "N"
            ],
            "generic_tys": [],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "slice",
                  "GetManyMutError"
                ]
              },
              "consts": [
                {
                  "LocalVar": "N"
                }
              ],
              "tys": []
            },
            "of_trait": [
              "core",
              "error",
              "Error"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "source",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "type_id",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "description",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "cause",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "provide",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        }
      ]
    }
  }
]