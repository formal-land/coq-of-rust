[
  {
    "file_name": "core/src/mem/mod.rs",
    "item": {
      "type": "Module",
      "name": "mem",
      "body": [
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "forget",
            "path": [
              "core",
              "mem",
              "forget"
            ],
            "snippet": [
              "pub const fn forget<T>(t: T) {",
              "    let _ = ManuallyDrop::new(t);",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "t",
                    {
                      "type": "Var",
                      "name": "T"
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "unit"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "t",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "t"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.read"
                        },
                        "args": [
                          {
                            "Match": {
                              "scrutinee": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetAssociatedFunction": {
                                            "ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "mem",
                                                  "manually_drop",
                                                  "ManuallyDrop"
                                                ]
                                              },
                                              "consts": [],
                                              "tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "T"
                                                }
                                              ]
                                            },
                                            "func": "new",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [
                                          {
                                            "Call": {
                                              "func": {
                                                "LocalVar": "M.read"
                                              },
                                              "args": [
                                                {
                                                  "LocalVar": "t"
                                                }
                                              ],
                                              "kind": "Effectful"
                                            }
                                          }
                                        ],
                                        "kind": "Closure"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "arms": [
                                {
                                  "Lambda": {
                                    "args": [
                                      [
                                        "Î³",
                                        null
                                      ]
                                    ],
                                    "body": {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.alloc"
                                        },
                                        "args": [
                                          {
                                            "Tuple": {
                                              "elements": []
                                            }
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    },
                                    "is_for_match": true,
                                    "is_internal": true
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "Effectful"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "forget_unsized",
            "path": [
              "core",
              "mem",
              "forget_unsized"
            ],
            "snippet": [
              "pub fn forget_unsized<T: ?Sized>(t: T) {",
              "    intrinsics::forget(t)",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "t",
                    {
                      "type": "Var",
                      "name": "T"
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "unit"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "t",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "t"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "intrinsics",
                              "forget"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "t"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "size_of",
            "path": [
              "core",
              "mem",
              "size_of"
            ],
            "snippet": [
              "pub const fn size_of<T>() -> usize {",
              "    intrinsics::size_of::<T>()",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Call": {
                    "func": {
                      "GetFunction": {
                        "func": [
                          "core",
                          "intrinsics",
                          "size_of"
                        ],
                        "generic_tys": [
                          {
                            "type": "Var",
                            "name": "T"
                          }
                        ]
                      }
                    },
                    "args": [],
                    "kind": "Closure"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "size_of_val",
            "path": [
              "core",
              "mem",
              "size_of_val"
            ],
            "snippet": [
              "pub const fn size_of_val<T: ?Sized>(val: &T) -> usize {",
              "    // SAFETY: `val` is a reference, so it's a valid raw pointer",
              "    unsafe { intrinsics::size_of_val(val) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "val",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "val",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "val"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "intrinsics",
                              "size_of_val"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "val"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "size_of_val_raw",
            "path": [
              "core",
              "mem",
              "size_of_val_raw"
            ],
            "snippet": [
              "pub const unsafe fn size_of_val_raw<T: ?Sized>(val: *const T) -> usize {",
              "    // SAFETY: the caller must provide a valid raw pointer",
              "    unsafe { intrinsics::size_of_val(val) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "val",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "*const"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "val",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "val"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "intrinsics",
                              "size_of_val"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "val"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "min_align_of",
            "path": [
              "core",
              "mem",
              "min_align_of"
            ],
            "snippet": [
              "pub fn min_align_of<T>() -> usize {",
              "    intrinsics::min_align_of::<T>()",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Call": {
                    "func": {
                      "GetFunction": {
                        "func": [
                          "core",
                          "intrinsics",
                          "min_align_of"
                        ],
                        "generic_tys": [
                          {
                            "type": "Var",
                            "name": "T"
                          }
                        ]
                      }
                    },
                    "args": [],
                    "kind": "Closure"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "min_align_of_val",
            "path": [
              "core",
              "mem",
              "min_align_of_val"
            ],
            "snippet": [
              "pub fn min_align_of_val<T: ?Sized>(val: &T) -> usize {",
              "    // SAFETY: val is a reference, so it's a valid raw pointer",
              "    unsafe { intrinsics::min_align_of_val(val) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "val",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "val",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "val"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "intrinsics",
                              "min_align_of_val"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "val"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "align_of",
            "path": [
              "core",
              "mem",
              "align_of"
            ],
            "snippet": [
              "pub const fn align_of<T>() -> usize {",
              "    intrinsics::min_align_of::<T>()",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Call": {
                    "func": {
                      "GetFunction": {
                        "func": [
                          "core",
                          "intrinsics",
                          "min_align_of"
                        ],
                        "generic_tys": [
                          {
                            "type": "Var",
                            "name": "T"
                          }
                        ]
                      }
                    },
                    "args": [],
                    "kind": "Closure"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "align_of_val",
            "path": [
              "core",
              "mem",
              "align_of_val"
            ],
            "snippet": [
              "pub const fn align_of_val<T: ?Sized>(val: &T) -> usize {",
              "    // SAFETY: val is a reference, so it's a valid raw pointer",
              "    unsafe { intrinsics::min_align_of_val(val) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "val",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "val",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "val"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "intrinsics",
                              "min_align_of_val"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "val"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "align_of_val_raw",
            "path": [
              "core",
              "mem",
              "align_of_val_raw"
            ],
            "snippet": [
              "pub const unsafe fn align_of_val_raw<T: ?Sized>(val: *const T) -> usize {",
              "    // SAFETY: the caller must provide a valid raw pointer",
              "    unsafe { intrinsics::min_align_of_val(val) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "val",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "*const"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "val",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "val"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "intrinsics",
                              "min_align_of_val"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "val"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "needs_drop",
            "path": [
              "core",
              "mem",
              "needs_drop"
            ],
            "snippet": [
              "pub const fn needs_drop<T: ?Sized>() -> bool {",
              "    intrinsics::needs_drop::<T>()",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "bool"
                  ]
                },
                "body": {
                  "Call": {
                    "func": {
                      "GetFunction": {
                        "func": [
                          "core",
                          "intrinsics",
                          "needs_drop"
                        ],
                        "generic_tys": [
                          {
                            "type": "Var",
                            "name": "T"
                          }
                        ]
                      }
                    },
                    "args": [],
                    "kind": "Closure"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "zeroed",
            "path": [
              "core",
              "mem",
              "zeroed"
            ],
            "snippet": [
              "pub const unsafe fn zeroed<T>() -> T {",
              "    // SAFETY: the caller must guarantee that an all-zero value is valid for `T`.",
              "    unsafe {",
              "        intrinsics::assert_zero_valid::<T>();",
              "        MaybeUninit::zeroed().assume_init()",
              "    }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Var",
                  "name": "T"
                },
                "body": {
                  "Call": {
                    "func": {
                      "LocalVar": "M.read"
                    },
                    "args": [
                      {
                        "Let": {
                          "name": null,
                          "is_user": true,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "Call": {
                                    "func": {
                                      "GetFunction": {
                                        "func": [
                                          "core",
                                          "intrinsics",
                                          "assert_zero_valid"
                                        ],
                                        "generic_tys": [
                                          {
                                            "type": "Var",
                                            "name": "T"
                                          }
                                        ]
                                      }
                                    },
                                    "args": [],
                                    "kind": "Closure"
                                  }
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "Call": {
                                    "func": {
                                      "GetAssociatedFunction": {
                                        "ty": {
                                          "type": "Application",
                                          "func": {
                                            "type": "Path",
                                            "path": [
                                              "core",
                                              "mem",
                                              "maybe_uninit",
                                              "MaybeUninit"
                                            ]
                                          },
                                          "consts": [],
                                          "tys": [
                                            {
                                              "type": "Var",
                                              "name": "T"
                                            }
                                          ]
                                        },
                                        "func": "assume_init",
                                        "generic_tys": []
                                      }
                                    },
                                    "args": [
                                      {
                                        "Call": {
                                          "func": {
                                            "GetAssociatedFunction": {
                                              "ty": {
                                                "type": "Application",
                                                "func": {
                                                  "type": "Path",
                                                  "path": [
                                                    "core",
                                                    "mem",
                                                    "maybe_uninit",
                                                    "MaybeUninit"
                                                  ]
                                                },
                                                "consts": [],
                                                "tys": [
                                                  {
                                                    "type": "Var",
                                                    "name": "T"
                                                  }
                                                ]
                                              },
                                              "func": "zeroed",
                                              "generic_tys": []
                                            }
                                          },
                                          "args": [],
                                          "kind": "Closure"
                                        }
                                      }
                                    ],
                                    "kind": "Closure"
                                  }
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        }
                      }
                    ],
                    "kind": "Effectful"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "uninitialized",
            "path": [
              "core",
              "mem",
              "uninitialized"
            ],
            "snippet": [
              "pub unsafe fn uninitialized<T>() -> T {",
              "    // SAFETY: the caller must guarantee that an uninitialized value is valid for `T`.",
              "    unsafe {",
              "        intrinsics::assert_mem_uninitialized_valid::<T>();",
              "        let mut val = MaybeUninit::<T>::uninit();",
              "",
              "        // Fill memory with 0x01, as an imperfect mitigation for old code that uses this function on",
              "        // bool, nonnull, and noundef types. But don't do this if we actively want to detect UB.",
              "        if !cfg!(any(miri, sanitize = \"memory\")) {",
              "            val.as_mut_ptr().write_bytes(0x01, 1);",
              "        }",
              "",
              "        val.assume_init()",
              "    }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Var",
                  "name": "T"
                },
                "body": {
                  "Call": {
                    "func": {
                      "LocalVar": "M.read"
                    },
                    "args": [
                      {
                        "Let": {
                          "name": null,
                          "is_user": true,
                          "init": {
                            "Call": {
                              "func": {
                                "LocalVar": "M.alloc"
                              },
                              "args": [
                                {
                                  "Call": {
                                    "func": {
                                      "GetFunction": {
                                        "func": [
                                          "core",
                                          "intrinsics",
                                          "assert_mem_uninitialized_valid"
                                        ],
                                        "generic_tys": [
                                          {
                                            "type": "Var",
                                            "name": "T"
                                          }
                                        ]
                                      }
                                    },
                                    "args": [],
                                    "kind": "Closure"
                                  }
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          "body": {
                            "Let": {
                              "name": "val",
                              "is_user": true,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "GetAssociatedFunction": {
                                            "ty": {
                                              "type": "Application",
                                              "func": {
                                                "type": "Path",
                                                "path": [
                                                  "core",
                                                  "mem",
                                                  "maybe_uninit",
                                                  "MaybeUninit"
                                                ]
                                              },
                                              "consts": [],
                                              "tys": [
                                                {
                                                  "type": "Var",
                                                  "name": "T"
                                                }
                                              ]
                                            },
                                            "func": "uninit",
                                            "generic_tys": []
                                          }
                                        },
                                        "args": [],
                                        "kind": "Closure"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": null,
                                  "is_user": true,
                                  "init": {
                                    "Match": {
                                      "scrutinee": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Tuple": {
                                                "elements": []
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "arms": [
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "Î³",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Let": {
                                                "name": "Î³",
                                                "is_user": false,
                                                "init": {
                                                  "Use": {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.alloc"
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "UnOp.not"
                                                            },
                                                            "args": [
                                                              {
                                                                "Literal": {
                                                                  "Bool": false
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                },
                                                "body": {
                                                  "Let": {
                                                    "name": null,
                                                    "is_user": false,
                                                    "init": {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.is_constant_or_break_match"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "Î³"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "Literal": {
                                                              "Bool": true
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    "body": {
                                                      "Let": {
                                                        "name": null,
                                                        "is_user": true,
                                                        "init": {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.alloc"
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "GetAssociatedFunction": {
                                                                      "ty": {
                                                                        "type": "Application",
                                                                        "func": {
                                                                          "type": "Path",
                                                                          "path": [
                                                                            "*mut"
                                                                          ]
                                                                        },
                                                                        "consts": [],
                                                                        "tys": [
                                                                          {
                                                                            "type": "Var",
                                                                            "name": "T"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "func": "write_bytes",
                                                                      "generic_tys": []
                                                                    }
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "Call": {
                                                                        "func": {
                                                                          "GetAssociatedFunction": {
                                                                            "ty": {
                                                                              "type": "Application",
                                                                              "func": {
                                                                                "type": "Path",
                                                                                "path": [
                                                                                  "core",
                                                                                  "mem",
                                                                                  "maybe_uninit",
                                                                                  "MaybeUninit"
                                                                                ]
                                                                              },
                                                                              "consts": [],
                                                                              "tys": [
                                                                                {
                                                                                  "type": "Var",
                                                                                  "name": "T"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "func": "as_mut_ptr",
                                                                            "generic_tys": []
                                                                          }
                                                                        },
                                                                        "args": [
                                                                          {
                                                                            "LocalVar": "val"
                                                                          }
                                                                        ],
                                                                        "kind": "Closure"
                                                                      }
                                                                    },
                                                                    {
                                                                      "Literal": {
                                                                        "Integer": {
                                                                          "kind": "U8",
                                                                          "negative_sign": false,
                                                                          "value": 1
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "Literal": {
                                                                        "Integer": {
                                                                          "kind": "Usize",
                                                                          "negative_sign": false,
                                                                          "value": 1
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "Closure"
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        "body": {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.alloc"
                                                            },
                                                            "args": [
                                                              {
                                                                "Tuple": {
                                                                  "elements": []
                                                                }
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        },
                                        {
                                          "Lambda": {
                                            "args": [
                                              [
                                                "Î³",
                                                null
                                              ]
                                            ],
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Tuple": {
                                                      "elements": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "is_for_match": true,
                                            "is_internal": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "mem",
                                                      "maybe_uninit",
                                                      "MaybeUninit"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": [
                                                    {
                                                      "type": "Var",
                                                      "name": "T"
                                                    }
                                                  ]
                                                },
                                                "func": "assume_init",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "val"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "kind": "Effectful"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "swap",
            "path": [
              "core",
              "mem",
              "swap"
            ],
            "snippet": [
              "pub const fn swap<T>(x: &mut T, y: &mut T) {",
              "    // SAFETY: `&mut` guarantees these are typed readable and writable",
              "    // as well as non-overlapping.",
              "    unsafe { intrinsics::typed_swap(x, y) }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "x",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&mut"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ],
                  [
                    "y",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&mut"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "unit"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "x",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "x"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Let": {
                        "name": "y",
                        "is_user": false,
                        "init": {
                          "Call": {
                            "func": {
                              "LocalVar": "M.alloc"
                            },
                            "args": [
                              {
                                "LocalVar": "y"
                              }
                            ],
                            "kind": "Effectful"
                          }
                        },
                        "body": {
                          "Call": {
                            "func": {
                              "GetFunction": {
                                "func": [
                                  "core",
                                  "intrinsics",
                                  "typed_swap"
                                ],
                                "generic_tys": [
                                  {
                                    "type": "Var",
                                    "name": "T"
                                  }
                                ]
                              }
                            },
                            "args": [
                              {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "x"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "y"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            ],
                            "kind": "Closure"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "take",
            "path": [
              "core",
              "mem",
              "take"
            ],
            "snippet": [
              "pub fn take<T: Default>(dest: &mut T) -> T {",
              "    replace(dest, T::default())",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "dest",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&mut"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Var",
                  "name": "T"
                },
                "body": {
                  "Let": {
                    "name": "dest",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "dest"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "GetFunction": {
                            "func": [
                              "core",
                              "mem",
                              "replace"
                            ],
                            "generic_tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "dest"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          },
                          {
                            "Call": {
                              "func": {
                                "GetTraitMethod": {
                                  "trait_name": [
                                    "core",
                                    "default",
                                    "Default"
                                  ],
                                  "self_ty": {
                                    "type": "Var",
                                    "name": "T"
                                  },
                                  "trait_tys": [],
                                  "method_name": "default",
                                  "generic_tys": []
                                }
                              },
                              "args": [],
                              "kind": "Closure"
                            }
                          }
                        ],
                        "kind": "Closure"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "replace",
            "path": [
              "core",
              "mem",
              "replace"
            ],
            "snippet": [
              "pub const fn replace<T>(dest: &mut T, src: T) -> T {",
              "    // It may be tempting to use `swap` to avoid `unsafe` here. Don't!",
              "    // The compiler optimizes the implementation below to two `memcpy`s",
              "    // while `swap` would require at least three. See PR#83022 for details.",
              "",
              "    // SAFETY: We read from `dest` but directly write `src` into it afterwards,",
              "    // such that the old value is not duplicated. Nothing is dropped and",
              "    // nothing here can panic.",
              "    unsafe {",
              "        let result = ptr::read(dest);",
              "        ptr::write(dest, src);",
              "        result",
              "    }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "dest",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&mut"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ],
                  [
                    "src",
                    {
                      "type": "Var",
                      "name": "T"
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Var",
                  "name": "T"
                },
                "body": {
                  "Let": {
                    "name": "dest",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "dest"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Let": {
                        "name": "src",
                        "is_user": false,
                        "init": {
                          "Call": {
                            "func": {
                              "LocalVar": "M.alloc"
                            },
                            "args": [
                              {
                                "LocalVar": "src"
                              }
                            ],
                            "kind": "Effectful"
                          }
                        },
                        "body": {
                          "Call": {
                            "func": {
                              "LocalVar": "M.read"
                            },
                            "args": [
                              {
                                "Let": {
                                  "name": "result",
                                  "is_user": true,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetFunction": {
                                                "func": [
                                                  "core",
                                                  "ptr",
                                                  "read"
                                                ],
                                                "generic_tys": [
                                                  {
                                                    "type": "Var",
                                                    "name": "T"
                                                  }
                                                ]
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "dest"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Let": {
                                      "name": null,
                                      "is_user": true,
                                      "init": {
                                        "Call": {
                                          "func": {
                                            "LocalVar": "M.alloc"
                                          },
                                          "args": [
                                            {
                                              "Call": {
                                                "func": {
                                                  "GetFunction": {
                                                    "func": [
                                                      "core",
                                                      "ptr",
                                                      "write"
                                                    ],
                                                    "generic_tys": [
                                                      {
                                                        "type": "Var",
                                                        "name": "T"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "dest"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  },
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "LocalVar": "M.read"
                                                      },
                                                      "args": [
                                                        {
                                                          "LocalVar": "src"
                                                        }
                                                      ],
                                                      "kind": "Effectful"
                                                    }
                                                  }
                                                ],
                                                "kind": "Closure"
                                              }
                                            }
                                          ],
                                          "kind": "Effectful"
                                        }
                                      },
                                      "body": {
                                        "LocalVar": "result"
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "kind": "Effectful"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "drop",
            "path": [
              "core",
              "mem",
              "drop"
            ],
            "snippet": [
              "pub fn drop<T>(_x: T) {}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "_x",
                    {
                      "type": "Var",
                      "name": "T"
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "unit"
                  ]
                },
                "body": {
                  "Let": {
                    "name": "_x",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "_x"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Tuple": {
                        "elements": []
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "copy",
            "path": [
              "core",
              "mem",
              "copy"
            ],
            "snippet": [
              "pub const fn copy<T: Copy>(x: &T) -> T {",
              "    *x",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "x",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Var",
                  "name": "T"
                },
                "body": {
                  "Let": {
                    "name": "x",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "x"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.read"
                        },
                        "args": [
                          {
                            "Call": {
                              "func": {
                                "LocalVar": "M.read"
                              },
                              "args": [
                                {
                                  "LocalVar": "x"
                                }
                              ],
                              "kind": "Effectful"
                            }
                          }
                        ],
                        "kind": "Effectful"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "transmute_copy",
            "path": [
              "core",
              "mem",
              "transmute_copy"
            ],
            "snippet": [
              "pub const unsafe fn transmute_copy<Src, Dst>(src: &Src) -> Dst {",
              "    assert!(",
              "        size_of::<Src>() >= size_of::<Dst>(),",
              "        \"cannot transmute_copy if Dst is larger than Src\"",
              "    );",
              "",
              "    // If Dst has a higher alignment requirement, src might not be suitably aligned.",
              "    if align_of::<Dst>() > align_of::<Src>() {",
              "        // SAFETY: `src` is a reference which is guaranteed to be valid for reads.",
              "        // The caller must guarantee that the actual transmutation is safe.",
              "        unsafe { ptr::read_unaligned(src as *const Src as *const Dst) }",
              "    } else {",
              "        // SAFETY: `src` is a reference which is guaranteed to be valid for reads.",
              "        // We just checked that `src as *const Dst` was properly aligned.",
              "        // The caller must guarantee that the actual transmutation is safe.",
              "        unsafe { ptr::read(src as *const Src as *const Dst) }",
              "    }",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "Src",
                "Dst"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "src",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "Src"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Var",
                  "name": "Dst"
                },
                "body": {
                  "Let": {
                    "name": "src",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "src"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.read"
                        },
                        "args": [
                          {
                            "Let": {
                              "name": null,
                              "is_user": true,
                              "init": {
                                "Match": {
                                  "scrutinee": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "Tuple": {
                                            "elements": []
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "arms": [
                                    {
                                      "Lambda": {
                                        "args": [
                                          [
                                            "Î³",
                                            null
                                          ]
                                        ],
                                        "body": {
                                          "Let": {
                                            "name": "Î³",
                                            "is_user": false,
                                            "init": {
                                              "Use": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "UnOp.not"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "BinOp.ge"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "GetFunction": {
                                                                        "func": [
                                                                          "core",
                                                                          "mem",
                                                                          "size_of"
                                                                        ],
                                                                        "generic_tys": [
                                                                          {
                                                                            "type": "Var",
                                                                            "name": "Src"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "args": [],
                                                                    "kind": "Closure"
                                                                  }
                                                                },
                                                                {
                                                                  "Call": {
                                                                    "func": {
                                                                      "GetFunction": {
                                                                        "func": [
                                                                          "core",
                                                                          "mem",
                                                                          "size_of"
                                                                        ],
                                                                        "generic_tys": [
                                                                          {
                                                                            "type": "Var",
                                                                            "name": "Dst"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "args": [],
                                                                    "kind": "Closure"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            },
                                            "body": {
                                              "Let": {
                                                "name": null,
                                                "is_user": false,
                                                "init": {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.is_constant_or_break_match"
                                                    },
                                                    "args": [
                                                      {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "Î³"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      {
                                                        "Literal": {
                                                          "Bool": true
                                                        }
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                "body": {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.alloc"
                                                    },
                                                    "args": [
                                                      {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.never_to_any"
                                                          },
                                                          "args": [
                                                            {
                                                              "Call": {
                                                                "func": {
                                                                  "GetFunction": {
                                                                    "func": [
                                                                      "core",
                                                                      "panicking",
                                                                      "panic_fmt"
                                                                    ],
                                                                    "generic_tys": []
                                                                  }
                                                                },
                                                                "args": [
                                                                  {
                                                                    "Call": {
                                                                      "func": {
                                                                        "GetAssociatedFunction": {
                                                                          "ty": {
                                                                            "type": "Application",
                                                                            "func": {
                                                                              "type": "Path",
                                                                              "path": [
                                                                                "core",
                                                                                "fmt",
                                                                                "Arguments"
                                                                              ]
                                                                            },
                                                                            "consts": [],
                                                                            "tys": []
                                                                          },
                                                                          "func": "new_const",
                                                                          "generic_tys": []
                                                                        }
                                                                      },
                                                                      "args": [
                                                                        {
                                                                          "Call": {
                                                                            "func": {
                                                                              "LocalVar": "M.alloc"
                                                                            },
                                                                            "args": [
                                                                              {
                                                                                "Array": {
                                                                                  "elements": [
                                                                                    {
                                                                                      "Call": {
                                                                                        "func": {
                                                                                          "LocalVar": "M.read"
                                                                                        },
                                                                                        "args": [
                                                                                          {
                                                                                            "Literal": {
                                                                                              "String": "cannot transmute_copy if Dst is larger than Src"
                                                                                            }
                                                                                          }
                                                                                        ],
                                                                                        "kind": "Effectful"
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "is_internal": false
                                                                                }
                                                                              }
                                                                            ],
                                                                            "kind": "Effectful"
                                                                          }
                                                                        }
                                                                      ],
                                                                      "kind": "Closure"
                                                                    }
                                                                  }
                                                                ],
                                                                "kind": "Closure"
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "is_for_match": true,
                                        "is_internal": true
                                      }
                                    },
                                    {
                                      "Lambda": {
                                        "args": [
                                          [
                                            "Î³",
                                            null
                                          ]
                                        ],
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Tuple": {
                                                  "elements": []
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "is_for_match": true,
                                        "is_internal": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "body": {
                                "Match": {
                                  "scrutinee": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "Tuple": {
                                            "elements": []
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "arms": [
                                    {
                                      "Lambda": {
                                        "args": [
                                          [
                                            "Î³",
                                            null
                                          ]
                                        ],
                                        "body": {
                                          "Let": {
                                            "name": "Î³",
                                            "is_user": false,
                                            "init": {
                                              "Use": {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "BinOp.gt"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "GetFunction": {
                                                                  "func": [
                                                                    "core",
                                                                    "mem",
                                                                    "align_of"
                                                                  ],
                                                                  "generic_tys": [
                                                                    {
                                                                      "type": "Var",
                                                                      "name": "Dst"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "args": [],
                                                              "kind": "Closure"
                                                            }
                                                          },
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "GetFunction": {
                                                                  "func": [
                                                                    "core",
                                                                    "mem",
                                                                    "align_of"
                                                                  ],
                                                                  "generic_tys": [
                                                                    {
                                                                      "type": "Var",
                                                                      "name": "Src"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "args": [],
                                                              "kind": "Closure"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            },
                                            "body": {
                                              "Let": {
                                                "name": null,
                                                "is_user": false,
                                                "init": {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.is_constant_or_break_match"
                                                    },
                                                    "args": [
                                                      {
                                                        "Call": {
                                                          "func": {
                                                            "LocalVar": "M.read"
                                                          },
                                                          "args": [
                                                            {
                                                              "LocalVar": "Î³"
                                                            }
                                                          ],
                                                          "kind": "Effectful"
                                                        }
                                                      },
                                                      {
                                                        "Literal": {
                                                          "Bool": true
                                                        }
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                },
                                                "body": {
                                                  "Call": {
                                                    "func": {
                                                      "LocalVar": "M.alloc"
                                                    },
                                                    "args": [
                                                      {
                                                        "Call": {
                                                          "func": {
                                                            "GetFunction": {
                                                              "func": [
                                                                "core",
                                                                "ptr",
                                                                "read_unaligned"
                                                              ],
                                                              "generic_tys": [
                                                                {
                                                                  "type": "Var",
                                                                  "name": "Dst"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "args": [
                                                            {
                                                              "Call": {
                                                                "func": {
                                                                  "LocalVar": "M.rust_cast"
                                                                },
                                                                "args": [
                                                                  {
                                                                    "Call": {
                                                                      "func": {
                                                                        "LocalVar": "M.read"
                                                                      },
                                                                      "args": [
                                                                        {
                                                                          "Use": {
                                                                            "Call": {
                                                                              "func": {
                                                                                "LocalVar": "M.alloc"
                                                                              },
                                                                              "args": [
                                                                                {
                                                                                  "Call": {
                                                                                    "func": {
                                                                                      "LocalVar": "M.read"
                                                                                    },
                                                                                    "args": [
                                                                                      {
                                                                                        "LocalVar": "src"
                                                                                      }
                                                                                    ],
                                                                                    "kind": "Effectful"
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "Effectful"
                                                                            }
                                                                          }
                                                                        }
                                                                      ],
                                                                      "kind": "Effectful"
                                                                    }
                                                                  }
                                                                ],
                                                                "kind": "Pure"
                                                              }
                                                            }
                                                          ],
                                                          "kind": "Closure"
                                                        }
                                                      }
                                                    ],
                                                    "kind": "Effectful"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "is_for_match": true,
                                        "is_internal": true
                                      }
                                    },
                                    {
                                      "Lambda": {
                                        "args": [
                                          [
                                            "Î³",
                                            null
                                          ]
                                        ],
                                        "body": {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.alloc"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "GetFunction": {
                                                      "func": [
                                                        "core",
                                                        "ptr",
                                                        "read"
                                                      ],
                                                      "generic_tys": [
                                                        {
                                                          "type": "Var",
                                                          "name": "Dst"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.rust_cast"
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Use": {
                                                                    "Call": {
                                                                      "func": {
                                                                        "LocalVar": "M.alloc"
                                                                      },
                                                                      "args": [
                                                                        {
                                                                          "Call": {
                                                                            "func": {
                                                                              "LocalVar": "M.read"
                                                                            },
                                                                            "args": [
                                                                              {
                                                                                "LocalVar": "src"
                                                                              }
                                                                            ],
                                                                            "kind": "Effectful"
                                                                          }
                                                                        }
                                                                      ],
                                                                      "kind": "Effectful"
                                                                    }
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Pure"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Closure"
                                                }
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        "is_for_match": true,
                                        "is_internal": true
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ],
                        "kind": "Effectful"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TypeStructTuple",
            "name": "Discriminant",
            "const_params": [],
            "ty_params": [
              "T"
            ],
            "fields": [
              {
                "type": "Associated"
              }
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "mem",
                  "Discriminant"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "marker",
              "Copy"
            ],
            "trait_ty_params": [],
            "items": []
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "mem",
                  "Discriminant"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "clone",
              "Clone"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "clone",
                "snippet": [
                  "    fn clone(&self) -> Self {",
                  "        *self",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "mem",
                                        "Discriminant"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "mem",
                                "Discriminant"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Var",
                                "name": "T"
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.read"
                                  },
                                  "args": [
                                    {
                                      "Call": {
                                        "func": {
                                          "LocalVar": "M.read"
                                        },
                                        "args": [
                                          {
                                            "LocalVar": "self"
                                          }
                                        ],
                                        "kind": "Effectful"
                                      }
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "clone_from",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "mem",
                  "Discriminant"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "cmp",
              "PartialEq"
            ],
            "trait_ty_params": [
              [
                "Rhs",
                "Default"
              ]
            ],
            "items": [
              {
                "name": "eq",
                "snippet": [
                  "    fn eq(&self, rhs: &Self) -> bool {",
                  "        self.0 == rhs.0",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "mem",
                                        "Discriminant"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "rhs",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "mem",
                                        "Discriminant"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "bool"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "rhs",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "rhs"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetTraitMethod": {
                                          "trait_name": [
                                            "core",
                                            "cmp",
                                            "PartialEq"
                                          ],
                                          "self_ty": {
                                            "type": "Associated"
                                          },
                                          "trait_tys": [
                                            {
                                              "type": "Associated"
                                            }
                                          ],
                                          "method_name": "eq",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "self"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::mem::Discriminant"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        },
                                        {
                                          "Call": {
                                            "func": {
                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.read"
                                                  },
                                                  "args": [
                                                    {
                                                      "LocalVar": "rhs"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "InternalString": "core::mem::Discriminant"
                                              },
                                              {
                                                "LocalVar": "0"
                                              }
                                            ],
                                            "kind": "Effectful"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "ne",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "mem",
                  "Discriminant"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "cmp",
              "Eq"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "assert_receiver_is_total_eq",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "mem",
                  "Discriminant"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "hash",
              "Hash"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "hash",
                "snippet": [
                  "    fn hash<H: hash::Hasher>(&self, state: &mut H) {",
                  "        self.0.hash(state);",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [
                          "H"
                        ],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "mem",
                                        "Discriminant"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "state",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Var",
                                    "name": "H"
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Path",
                            "path": [
                              "unit"
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "state",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "state"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.read"
                                      },
                                      "args": [
                                        {
                                          "Let": {
                                            "name": null,
                                            "is_user": true,
                                            "init": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Call": {
                                                      "func": {
                                                        "GetTraitMethod": {
                                                          "trait_name": [
                                                            "core",
                                                            "hash",
                                                            "Hash"
                                                          ],
                                                          "self_ty": {
                                                            "type": "Associated"
                                                          },
                                                          "trait_tys": [],
                                                          "method_name": "hash",
                                                          "generic_tys": [
                                                            {
                                                              "type": "Var",
                                                              "name": "H"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "args": [
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                            },
                                                            "args": [
                                                              {
                                                                "Call": {
                                                                  "func": {
                                                                    "LocalVar": "M.read"
                                                                  },
                                                                  "args": [
                                                                    {
                                                                      "LocalVar": "self"
                                                                    }
                                                                  ],
                                                                  "kind": "Effectful"
                                                                }
                                                              },
                                                              {
                                                                "InternalString": "core::mem::Discriminant"
                                                              },
                                                              {
                                                                "LocalVar": "0"
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        },
                                                        {
                                                          "Call": {
                                                            "func": {
                                                              "LocalVar": "M.read"
                                                            },
                                                            "args": [
                                                              {
                                                                "LocalVar": "state"
                                                              }
                                                            ],
                                                            "kind": "Effectful"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "Closure"
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            },
                                            "body": {
                                              "Call": {
                                                "func": {
                                                  "LocalVar": "M.alloc"
                                                },
                                                "args": [
                                                  {
                                                    "Tuple": {
                                                      "elements": []
                                                    }
                                                  }
                                                ],
                                                "kind": "Effectful"
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "hash_slice",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Application",
              "func": {
                "type": "Path",
                "path": [
                  "core",
                  "mem",
                  "Discriminant"
                ]
              },
              "consts": [],
              "tys": [
                {
                  "type": "Var",
                  "name": "T"
                }
              ]
            },
            "of_trait": [
              "core",
              "fmt",
              "Debug"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "fmt",
                "snippet": [
                  "    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {",
                  "        fmt.debug_tuple(\"Discriminant\").field(&self.0).finish()",
                  "    }"
                ],
                "kind": {
                  "RequiredValue": {
                    "Definition": {
                      "definition": {
                        "const_params": [],
                        "ty_params": [],
                        "signature_and_body": {
                          "args": [
                            [
                              "self",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "mem",
                                        "Discriminant"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": [
                                      {
                                        "type": "Var",
                                        "name": "T"
                                      }
                                    ]
                                  }
                                ]
                              },
                              null
                            ],
                            [
                              "fmt",
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "&mut"
                                  ]
                                },
                                "consts": [],
                                "tys": [
                                  {
                                    "type": "Application",
                                    "func": {
                                      "type": "Path",
                                      "path": [
                                        "core",
                                        "fmt",
                                        "Formatter"
                                      ]
                                    },
                                    "consts": [],
                                    "tys": []
                                  }
                                ]
                              },
                              null
                            ]
                          ],
                          "ret_ty": {
                            "type": "Application",
                            "func": {
                              "type": "Path",
                              "path": [
                                "core",
                                "result",
                                "Result"
                              ]
                            },
                            "consts": [],
                            "tys": [
                              {
                                "type": "Tuple",
                                "tys": []
                              },
                              {
                                "type": "Application",
                                "func": {
                                  "type": "Path",
                                  "path": [
                                    "core",
                                    "fmt",
                                    "Error"
                                  ]
                                },
                                "consts": [],
                                "tys": []
                              }
                            ]
                          },
                          "body": {
                            "Let": {
                              "name": "self",
                              "is_user": false,
                              "init": {
                                "Call": {
                                  "func": {
                                    "LocalVar": "M.alloc"
                                  },
                                  "args": [
                                    {
                                      "LocalVar": "self"
                                    }
                                  ],
                                  "kind": "Effectful"
                                }
                              },
                              "body": {
                                "Let": {
                                  "name": "fmt",
                                  "is_user": false,
                                  "init": {
                                    "Call": {
                                      "func": {
                                        "LocalVar": "M.alloc"
                                      },
                                      "args": [
                                        {
                                          "LocalVar": "fmt"
                                        }
                                      ],
                                      "kind": "Effectful"
                                    }
                                  },
                                  "body": {
                                    "Call": {
                                      "func": {
                                        "GetAssociatedFunction": {
                                          "ty": {
                                            "type": "Application",
                                            "func": {
                                              "type": "Path",
                                              "path": [
                                                "core",
                                                "fmt",
                                                "builders",
                                                "DebugTuple"
                                              ]
                                            },
                                            "consts": [],
                                            "tys": []
                                          },
                                          "func": "finish",
                                          "generic_tys": []
                                        }
                                      },
                                      "args": [
                                        {
                                          "Call": {
                                            "func": {
                                              "GetAssociatedFunction": {
                                                "ty": {
                                                  "type": "Application",
                                                  "func": {
                                                    "type": "Path",
                                                    "path": [
                                                      "core",
                                                      "fmt",
                                                      "builders",
                                                      "DebugTuple"
                                                    ]
                                                  },
                                                  "consts": [],
                                                  "tys": []
                                                },
                                                "func": "field",
                                                "generic_tys": []
                                              }
                                            },
                                            "args": [
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.alloc"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "GetAssociatedFunction": {
                                                            "ty": {
                                                              "type": "Application",
                                                              "func": {
                                                                "type": "Path",
                                                                "path": [
                                                                  "core",
                                                                  "fmt",
                                                                  "Formatter"
                                                                ]
                                                              },
                                                              "consts": [],
                                                              "tys": []
                                                            },
                                                            "func": "debug_tuple",
                                                            "generic_tys": []
                                                          }
                                                        },
                                                        "args": [
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "LocalVar": "fmt"
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          },
                                                          {
                                                            "Call": {
                                                              "func": {
                                                                "LocalVar": "M.read"
                                                              },
                                                              "args": [
                                                                {
                                                                  "Literal": {
                                                                    "String": "Discriminant"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "Effectful"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "Closure"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              },
                                              {
                                                "Call": {
                                                  "func": {
                                                    "LocalVar": "M.SubPointer.get_struct_tuple_field"
                                                  },
                                                  "args": [
                                                    {
                                                      "Call": {
                                                        "func": {
                                                          "LocalVar": "M.read"
                                                        },
                                                        "args": [
                                                          {
                                                            "LocalVar": "self"
                                                          }
                                                        ],
                                                        "kind": "Effectful"
                                                      }
                                                    },
                                                    {
                                                      "InternalString": "core::mem::Discriminant"
                                                    },
                                                    {
                                                      "LocalVar": "0"
                                                    }
                                                  ],
                                                  "kind": "Effectful"
                                                }
                                              }
                                            ],
                                            "kind": "Closure"
                                          }
                                        }
                                      ],
                                      "kind": "Closure"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "discriminant",
            "path": [
              "core",
              "mem",
              "discriminant"
            ],
            "snippet": [
              "pub const fn discriminant<T>(v: &T) -> Discriminant<T> {",
              "    Discriminant(intrinsics::discriminant_value(v))",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [
                  [
                    "v",
                    {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "&"
                        ]
                      },
                      "consts": [],
                      "tys": [
                        {
                          "type": "Var",
                          "name": "T"
                        }
                      ]
                    },
                    null
                  ]
                ],
                "ret_ty": {
                  "type": "Application",
                  "func": {
                    "type": "Path",
                    "path": [
                      "core",
                      "mem",
                      "Discriminant"
                    ]
                  },
                  "consts": [],
                  "tys": [
                    {
                      "type": "Var",
                      "name": "T"
                    }
                  ]
                },
                "body": {
                  "Let": {
                    "name": "v",
                    "is_user": false,
                    "init": {
                      "Call": {
                        "func": {
                          "LocalVar": "M.alloc"
                        },
                        "args": [
                          {
                            "LocalVar": "v"
                          }
                        ],
                        "kind": "Effectful"
                      }
                    },
                    "body": {
                      "StructTuple": {
                        "path": [
                          "core",
                          "mem",
                          "Discriminant"
                        ],
                        "fields": [
                          {
                            "Call": {
                              "func": {
                                "GetFunction": {
                                  "func": [
                                    "core",
                                    "intrinsics",
                                    "discriminant_value"
                                  ],
                                  "generic_tys": [
                                    {
                                      "type": "Var",
                                      "name": "T"
                                    }
                                  ]
                                }
                              },
                              "args": [
                                {
                                  "Call": {
                                    "func": {
                                      "LocalVar": "M.read"
                                    },
                                    "args": [
                                      {
                                        "LocalVar": "v"
                                      }
                                    ],
                                    "kind": "Effectful"
                                  }
                                }
                              ],
                              "kind": "Closure"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Definition",
            "name": "variant_count",
            "path": [
              "core",
              "mem",
              "variant_count"
            ],
            "snippet": [
              "pub const fn variant_count<T>() -> usize {",
              "    intrinsics::variant_count::<T>()",
              "}"
            ],
            "definition": {
              "const_params": [],
              "ty_params": [
                "T"
              ],
              "signature_and_body": {
                "args": [],
                "ret_ty": {
                  "type": "Path",
                  "path": [
                    "usize"
                  ]
                },
                "body": {
                  "Call": {
                    "func": {
                      "GetFunction": {
                        "func": [
                          "core",
                          "intrinsics",
                          "variant_count"
                        ],
                        "generic_tys": [
                          {
                            "type": "Var",
                            "name": "T"
                          }
                        ]
                      }
                    },
                    "args": [],
                    "kind": "Closure"
                  }
                }
              }
            }
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "Trait",
            "name": "SizedTypeProperties",
            "path": [
              "core",
              "mem",
              "SizedTypeProperties"
            ],
            "const_params": [],
            "ty_params": [],
            "body": [
              [
                "value_IS_ZST",
                {
                  "Definition": {
                    "const_params": [],
                    "ty_params": [],
                    "ty": {
                      "type": "Path",
                      "path": [
                        "bool"
                      ]
                    }
                  }
                }
              ],
              [
                "value_LAYOUT",
                {
                  "Definition": {
                    "const_params": [],
                    "ty_params": [],
                    "ty": {
                      "type": "Application",
                      "func": {
                        "type": "Path",
                        "path": [
                          "core",
                          "alloc",
                          "layout",
                          "Layout"
                        ]
                      },
                      "consts": [],
                      "tys": []
                    }
                  }
                }
              ]
            ]
          }
        },
        {
          "file_name": "core/src/mem/mod.rs",
          "item": {
            "type": "TraitImpl",
            "generic_consts": [],
            "generic_tys": [
              "T"
            ],
            "predicates": [],
            "self_ty": {
              "type": "Var",
              "name": "T"
            },
            "of_trait": [
              "core",
              "mem",
              "SizedTypeProperties"
            ],
            "trait_ty_params": [],
            "items": [
              {
                "name": "value_IS_ZST",
                "snippet": null,
                "kind": "Default"
              },
              {
                "name": "value_LAYOUT",
                "snippet": null,
                "kind": "Default"
              }
            ]
          }
        }
      ]
    }
  }
]