(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Parameter matching : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_matching : M.IsFunction "constructor_as_function::matching" matching.
Smpl Add apply Function_matching : is_function.

(* StructTuple
  {
    name := "Constructor";
    const_params := [];
    ty_params := [];
    fields := [ Ty.path "i32" ];
  } *)

Module Impl_core_fmt_Debug_for_constructor_as_function_Constructor.
  Definition Self : Ty.t := Ty.path "constructor_as_function::Constructor".
  
  Parameter fmt : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_constructor_as_function_Constructor.

Parameter main : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_main : M.IsFunction "constructor_as_function::main" main.
Smpl Add apply Function_main : is_function.
