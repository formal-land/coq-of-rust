(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* StructRecord
  {
    name := "Numbers";
    const_params := [];
    ty_params := [];
    fields := [ ("a", Ty.path "u64"); ("b", Ty.path "u64"); ("c", Ty.path "u64") ];
  } *)

Module Impl_core_fmt_Debug_for_mutations_Numbers.
  Definition Self : Ty.t := Ty.path "mutations::Numbers".
  
  Parameter fmt : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_mutations_Numbers.

Parameter get_a_ref : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_get_a_ref : M.IsFunction.C "mutations::get_a_ref" get_a_ref.
Admitted.

Parameter get_b_mut : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_get_b_mut : M.IsFunction.C "mutations::get_b_mut" get_b_mut.
Admitted.

Parameter duplicate : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_duplicate : M.IsFunction.C "mutations::duplicate" duplicate.
Admitted.

Parameter apply_duplicate : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_apply_duplicate :
  M.IsFunction.C "mutations::apply_duplicate" apply_duplicate.
Admitted.

Parameter main : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_main : M.IsFunction.C "mutations::main" main.
Admitted.

Parameter incr : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_incr : M.IsFunction.C "mutations::incr" incr.
Admitted.
