(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Empty.
Section Empty.
  Inductive t : Set := Build.
End Empty.
End Empty.

Module  Null.
Section Null.
  Inductive t : Set := Build.
End Null.
End Null.

Module  DoubleDrop.
Section DoubleDrop.
  Class Trait (Self : Set) {T : Set} : Type := {
    double_drop : Self -> T -> M unit;
  }.
  
End DoubleDrop.
End DoubleDrop.

Module  Impl_generics_traits_DoubleDrop_T_for_U.
Section Impl_generics_traits_DoubleDrop_T_for_U.
  Context {T U : Set}.
  
  Definition Self : Set := U.
  
  (*
      fn double_drop(self, _: T) {}
  *)
  Parameter double_drop : Self -> T -> M unit.
  
  Axiom double_drop_is_impl : impl Self "double_drop" = double_drop.
  
  Global Instance ‚Ñê : generics_traits.DoubleDrop.Trait Self (T := T) := {
    generics_traits.DoubleDrop.double_drop := double_drop;
  }.
End Impl_generics_traits_DoubleDrop_T_for_U.
End Impl_generics_traits_DoubleDrop_T_for_U.

(*
fn main() {
    let empty = Empty;
    let null = Null;

    // Deallocate `empty` and `null`.
    empty.double_drop(null);

    //empty;
    //null;
    // ^ TODO: Try uncommenting these lines.
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
