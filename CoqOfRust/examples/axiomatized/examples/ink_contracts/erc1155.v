(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* StructRecord
  {
    name := "Mapping";
    const_params := [];
    ty_params := [ "K"; "V" ];
    fields :=
      [
        ("_key", Ty.apply (Ty.path "core::marker::PhantomData") [] [ K ]);
        ("_value", Ty.apply (Ty.path "core::marker::PhantomData") [] [ V ])
      ];
  } *)

Module Impl_core_default_Default_where_core_default_Default_K_where_core_default_Default_V_for_erc1155_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t := Ty.apply (Ty.path "erc1155::Mapping") [] [ K; V ].
  
  Parameter default : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (K V : Ty.t),
    M.IsTraitInstance
      "core::default::Default"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      (Self K V)
      (* Instance *) [ ("default", InstanceField.Method (default K V)) ].
End Impl_core_default_Default_where_core_default_Default_K_where_core_default_Default_V_for_erc1155_Mapping_K_V.

Module Impl_erc1155_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t := Ty.apply (Ty.path "erc1155::Mapping") [] [ K; V ].
  
  Parameter contains : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_contains :
    forall (K V : Ty.t),
    M.IsAssociatedFunction.C (Self K V) "contains" (contains K V).
  Admitted.
  
  Parameter get : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_get :
    forall (K V : Ty.t),
    M.IsAssociatedFunction.C (Self K V) "get" (get K V).
  Admitted.
  
  Parameter insert : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_insert :
    forall (K V : Ty.t),
    M.IsAssociatedFunction.C (Self K V) "insert" (insert K V).
  Admitted.
  
  Parameter remove : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_remove :
    forall (K V : Ty.t),
    M.IsAssociatedFunction.C (Self K V) "remove" (remove K V).
  Admitted.
  
  Parameter size : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_size :
    forall (K V : Ty.t),
    M.IsAssociatedFunction.C (Self K V) "size" (size K V).
  Admitted.
  
  Parameter take : forall (K V : Ty.t), (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_take :
    forall (K V : Ty.t),
    M.IsAssociatedFunction.C (Self K V) "take" (take K V).
  Admitted.
End Impl_erc1155_Mapping_K_V.

(* StructTuple
  {
    name := "AccountId";
    const_params := [];
    ty_params := [];
    fields := [ Ty.path "u128" ];
  } *)

Module Impl_core_default_Default_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter default : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("default", InstanceField.Method default) ].
End Impl_core_default_Default_for_erc1155_AccountId.

Module Impl_core_clone_Clone_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter clone : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("clone", InstanceField.Method clone) ].
End Impl_core_clone_Clone_for_erc1155_AccountId.

Module Impl_core_marker_Copy_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [].
End Impl_core_marker_Copy_for_erc1155_AccountId.

Module Impl_core_marker_StructuralPartialEq_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::StructuralPartialEq"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [].
End Impl_core_marker_StructuralPartialEq_for_erc1155_AccountId.

Module Impl_core_cmp_PartialEq_erc1155_AccountId_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter eq : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::PartialEq"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) [ Ty.path "erc1155::AccountId" ]
      Self
      (* Instance *) [ ("eq", InstanceField.Method eq) ].
End Impl_core_cmp_PartialEq_erc1155_AccountId_for_erc1155_AccountId.

Module Impl_core_convert_From_array_Usize_32_u8_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter from : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::convert::From"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *)
      [ Ty.apply (Ty.path "array") [ Value.Integer IntegerKind.Usize 32 ] [ Ty.path "u8" ] ]
      Self
      (* Instance *) [ ("from", InstanceField.Method from) ].
End Impl_core_convert_From_array_Usize_32_u8_for_erc1155_AccountId.

Axiom Balance : (Ty.path "erc1155::Balance") = (Ty.path "u128").

(* StructRecord
  {
    name := "Env";
    const_params := [];
    ty_params := [];
    fields := [ ("caller", Ty.path "erc1155::AccountId") ];
  } *)

Parameter zero_address : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_zero_address :
  M.IsFunction.C "erc1155::zero_address" zero_address.
Admitted.

Parameter value_ON_ERC_1155_RECEIVED_SELECTOR : PolymorphicFunction.t.

Global Instance Instance_IsConstant_value_ON_ERC_1155_RECEIVED_SELECTOR :
  M.IsFunction.C "erc1155::ON_ERC_1155_RECEIVED_SELECTOR" value_ON_ERC_1155_RECEIVED_SELECTOR.
Admitted.

Parameter _ON_ERC_1155_BATCH_RECEIVED_SELECTOR : PolymorphicFunction.t.

Global Instance Instance_IsConstant__ON_ERC_1155_BATCH_RECEIVED_SELECTOR :
  M.IsFunction.C
    "erc1155::_ON_ERC_1155_BATCH_RECEIVED_SELECTOR"
    _ON_ERC_1155_BATCH_RECEIVED_SELECTOR.
Admitted.

Axiom TokenId : (Ty.path "erc1155::TokenId") = (Ty.path "u128").

(*
Enum Error
{
  const_params := [];
  ty_params := [];
  variants :=
    [
      {
        name := "UnexistentToken";
        item := StructTuple [];
      };
      {
        name := "ZeroAddressTransfer";
        item := StructTuple [];
      };
      {
        name := "NotApproved";
        item := StructTuple [];
      };
      {
        name := "InsufficientBalance";
        item := StructTuple [];
      };
      {
        name := "SelfApproval";
        item := StructTuple [];
      };
      {
        name := "BatchTransferMismatch";
        item := StructTuple [];
      }
    ];
}
*)

Axiom IsDiscriminant_Error_UnexistentToken : M.IsDiscriminant "erc1155::Error::UnexistentToken" 0.
Axiom IsDiscriminant_Error_ZeroAddressTransfer :
  M.IsDiscriminant "erc1155::Error::ZeroAddressTransfer" 1.
Axiom IsDiscriminant_Error_NotApproved : M.IsDiscriminant "erc1155::Error::NotApproved" 2.
Axiom IsDiscriminant_Error_InsufficientBalance :
  M.IsDiscriminant "erc1155::Error::InsufficientBalance" 3.
Axiom IsDiscriminant_Error_SelfApproval : M.IsDiscriminant "erc1155::Error::SelfApproval" 4.
Axiom IsDiscriminant_Error_BatchTransferMismatch :
  M.IsDiscriminant "erc1155::Error::BatchTransferMismatch" 5.

Module Impl_core_marker_StructuralPartialEq_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::StructuralPartialEq"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [].
End Impl_core_marker_StructuralPartialEq_for_erc1155_Error.

Module Impl_core_cmp_PartialEq_erc1155_Error_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Parameter eq : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::PartialEq"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) [ Ty.path "erc1155::Error" ]
      Self
      (* Instance *) [ ("eq", InstanceField.Method eq) ].
End Impl_core_cmp_PartialEq_erc1155_Error_for_erc1155_Error.

Module Impl_core_cmp_Eq_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Parameter assert_receiver_is_total_eq : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::Eq"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *)
      [ ("assert_receiver_is_total_eq", InstanceField.Method assert_receiver_is_total_eq) ].
End Impl_core_cmp_Eq_for_erc1155_Error.

Axiom Result :
  forall (T : Ty.t),
  (Ty.apply (Ty.path "erc1155::Result") [] [ T ]) =
    (Ty.apply (Ty.path "core::result::Result") [] [ T; Ty.path "erc1155::Error" ]).

(* Trait *)
(* Empty module 'Erc1155' *)

(* Trait *)
(* Empty module 'Erc1155TokenReceiver' *)

Axiom Owner : (Ty.path "erc1155::Owner") = (Ty.path "erc1155::AccountId").

Axiom Operator : (Ty.path "erc1155::Operator") = (Ty.path "erc1155::AccountId").

(* StructRecord
  {
    name := "TransferSingle";
    const_params := [];
    ty_params := [];
    fields :=
      [
        ("operator", Ty.apply (Ty.path "core::option::Option") [] [ Ty.path "erc1155::AccountId" ]);
        ("from", Ty.apply (Ty.path "core::option::Option") [] [ Ty.path "erc1155::AccountId" ]);
        ("to", Ty.apply (Ty.path "core::option::Option") [] [ Ty.path "erc1155::AccountId" ]);
        ("token_id", Ty.path "u128");
        ("value", Ty.path "u128")
      ];
  } *)

(* StructRecord
  {
    name := "ApprovalForAll";
    const_params := [];
    ty_params := [];
    fields :=
      [
        ("owner", Ty.path "erc1155::AccountId");
        ("operator", Ty.path "erc1155::AccountId");
        ("approved", Ty.path "bool")
      ];
  } *)

(* StructRecord
  {
    name := "Uri";
    const_params := [];
    ty_params := [];
    fields := [ ("value", Ty.path "alloc::string::String"); ("token_id", Ty.path "u128") ];
  } *)

(*
Enum Event
{
  const_params := [];
  ty_params := [];
  variants :=
    [
      {
        name := "TransferSingle";
        item := StructTuple [ Ty.path "erc1155::TransferSingle" ];
      };
      {
        name := "ApprovalForAll";
        item := StructTuple [ Ty.path "erc1155::ApprovalForAll" ];
      };
      {
        name := "Uri";
        item := StructTuple [ Ty.path "erc1155::Uri" ];
      }
    ];
}
*)

Axiom IsDiscriminant_Event_TransferSingle : M.IsDiscriminant "erc1155::Event::TransferSingle" 0.
Axiom IsDiscriminant_Event_ApprovalForAll : M.IsDiscriminant "erc1155::Event::ApprovalForAll" 1.
Axiom IsDiscriminant_Event_Uri : M.IsDiscriminant "erc1155::Event::Uri" 2.

Module Impl_erc1155_Env.
  Definition Self : Ty.t := Ty.path "erc1155::Env".
  
  Parameter caller : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_caller : M.IsAssociatedFunction.C Self "caller" caller.
  Admitted.
  
  Parameter emit_event : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_emit_event :
    M.IsAssociatedFunction.C Self "emit_event" emit_event.
  Admitted.
End Impl_erc1155_Env.

(* StructRecord
  {
    name := "Contract";
    const_params := [];
    ty_params := [];
    fields :=
      [
        ("balances",
          Ty.apply
            (Ty.path "erc1155::Mapping")
            []
            [ Ty.tuple [ Ty.path "erc1155::AccountId"; Ty.path "u128" ]; Ty.path "u128" ]);
        ("approvals",
          Ty.apply
            (Ty.path "erc1155::Mapping")
            []
            [ Ty.tuple [ Ty.path "erc1155::AccountId"; Ty.path "erc1155::AccountId" ]; Ty.tuple []
            ]);
        ("token_id_nonce", Ty.path "u128")
      ];
  } *)

Module Impl_core_default_Default_for_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter default : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("default", InstanceField.Method default) ].
End Impl_core_default_Default_for_erc1155_Contract.

Module Impl_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter init_env : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_init_env : M.IsAssociatedFunction.C Self "init_env" init_env.
  Admitted.
  
  Parameter env : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_env : M.IsAssociatedFunction.C Self "env" env.
  Admitted.
  
  Parameter new : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_new : M.IsAssociatedFunction.C Self "new" new.
  Admitted.
  
  Parameter create : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_create : M.IsAssociatedFunction.C Self "create" create.
  Admitted.
  
  Parameter mint : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_mint : M.IsAssociatedFunction.C Self "mint" mint.
  Admitted.
  
  Parameter perform_transfer : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_perform_transfer :
    M.IsAssociatedFunction.C Self "perform_transfer" perform_transfer.
  Admitted.
  
  Parameter transfer_acceptance_check : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Global Instance AssociatedFunction_transfer_acceptance_check :
    M.IsAssociatedFunction.C Self "transfer_acceptance_check" transfer_acceptance_check.
  Admitted.
End Impl_erc1155_Contract.

Module Impl_erc1155_Erc1155_for_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter is_approved_for_all : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance_of : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Parameter safe_transfer_from : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Parameter safe_batch_transfer_from : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance_of_batch : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Parameter set_approval_for_all : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "erc1155::Erc1155"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *)
      [
        ("is_approved_for_all", InstanceField.Method is_approved_for_all);
        ("balance_of", InstanceField.Method balance_of);
        ("safe_transfer_from", InstanceField.Method safe_transfer_from);
        ("safe_batch_transfer_from", InstanceField.Method safe_batch_transfer_from);
        ("balance_of_batch", InstanceField.Method balance_of_batch);
        ("set_approval_for_all", InstanceField.Method set_approval_for_all)
      ].
End Impl_erc1155_Erc1155_for_erc1155_Contract.

Module Impl_erc1155_Erc1155TokenReceiver_for_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter on_received : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Parameter on_batch_received : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "erc1155::Erc1155TokenReceiver"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *)
      [
        ("on_received", InstanceField.Method on_received);
        ("on_batch_received", InstanceField.Method on_batch_received)
      ].
End Impl_erc1155_Erc1155TokenReceiver_for_erc1155_Contract.
