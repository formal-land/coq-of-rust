(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
Enum Foo
{
  const_params := [];
  ty_params := [];
  variants :=
    [
      {
        name := "Bar";
        item := StructTuple [];
      };
      {
        name := "Baz";
        item := StructTuple [];
      };
      {
        name := "Qux";
        item := StructTuple [ Ty.path "u32" ];
      }
    ];
}
*)

Axiom IsDiscriminant_Foo_Bar : M.IsDiscriminant "if_let_match_enum_values::Foo::Bar" 0.
Axiom IsDiscriminant_Foo_Baz : M.IsDiscriminant "if_let_match_enum_values::Foo::Baz" 1.
Axiom IsDiscriminant_Foo_Qux : M.IsDiscriminant "if_let_match_enum_values::Foo::Qux" 2.

Parameter main : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_main : M.IsFunction "if_let_match_enum_values::main" main.
Smpl Add apply Function_main : is_function.
