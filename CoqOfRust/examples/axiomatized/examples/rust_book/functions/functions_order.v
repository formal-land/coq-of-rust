(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* StructTuple
  {
    name := "SomeType";
    ty_params := [];
    fields := [ Ty.path "u32" ];
  } *)

(* StructTuple
  {
    name := "OtherType";
    ty_params := [];
    fields := [ Ty.path "bool" ];
  } *)

Module Impl_functions_order_SomeType.
  Definition Self : Ty.t := Ty.path "functions_order::SomeType".
  
  Parameter meth1 : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_meth1 : M.IsAssociatedFunction Self "meth1" meth1.
  
  Parameter meth2 : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_meth2 : M.IsAssociatedFunction Self "meth2" meth2.
End Impl_functions_order_SomeType.

Parameter depends_on_trait_impl : (list Ty.t) -> (list Value.t) -> M.

Axiom Function_depends_on_trait_impl :
  M.IsFunction "functions_order::depends_on_trait_impl" depends_on_trait_impl.

(* Trait *)
(* Empty module 'SomeTrait' *)

Module Impl_functions_order_SomeTrait_for_functions_order_SomeType.
  Definition Self : Ty.t := Ty.path "functions_order::SomeType".
  
  Parameter some_trait_foo : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter some_trait_bar : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "functions_order::SomeTrait"
      Self
      (* Trait polymorphic types *) []
      (* Instance *)
      [
        ("some_trait_foo", InstanceField.Method some_trait_foo);
        ("some_trait_bar", InstanceField.Method some_trait_bar)
      ].
End Impl_functions_order_SomeTrait_for_functions_order_SomeType.

Module Impl_functions_order_SomeTrait_for_functions_order_OtherType.
  Definition Self : Ty.t := Ty.path "functions_order::OtherType".
  
  Parameter some_trait_foo : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter some_trait_bar : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "functions_order::SomeTrait"
      Self
      (* Trait polymorphic types *) []
      (* Instance *)
      [
        ("some_trait_foo", InstanceField.Method some_trait_foo);
        ("some_trait_bar", InstanceField.Method some_trait_bar)
      ].
End Impl_functions_order_SomeTrait_for_functions_order_OtherType.

Module inner_mod.
  Parameter bar : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Function_bar : M.IsFunction "functions_order::inner_mod::bar" bar.
  
  Parameter tar : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Function_tar : M.IsFunction "functions_order::inner_mod::tar" tar.
  
  Module nested_mod.
    Parameter tick : (list Ty.t) -> (list Value.t) -> M.
    
    Axiom Function_tick : M.IsFunction "functions_order::inner_mod::nested_mod::tick" tick.
    
    Parameter tack : (list Ty.t) -> (list Value.t) -> M.
    
    Axiom Function_tack : M.IsFunction "functions_order::inner_mod::nested_mod::tack" tack.
  End nested_mod.
End inner_mod.

Parameter main : (list Ty.t) -> (list Value.t) -> M.

Axiom Function_main : M.IsFunction "functions_order::main" main.

Parameter foo : (list Ty.t) -> (list Value.t) -> M.

Axiom Function_foo : M.IsFunction "functions_order::foo" foo.
