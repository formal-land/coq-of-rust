(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* StructTuple
  {
    name := "Borrowed";
    const_params := [];
    ty_params := [];
    fields := [ Ty.apply (Ty.path "&") [] [ Ty.path "i32" ] ];
  } *)

Module Impl_core_fmt_Debug_for_scoping_rules_lifetimes_structs_Borrowed.
  Definition Self : Ty.t := Ty.path "scoping_rules_lifetimes_structs::Borrowed".
  
  Parameter fmt : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_scoping_rules_lifetimes_structs_Borrowed.

(* StructRecord
  {
    name := "NamedBorrowed";
    const_params := [];
    ty_params := [];
    fields :=
      [
        ("x", Ty.apply (Ty.path "&") [] [ Ty.path "i32" ]);
        ("y", Ty.apply (Ty.path "&") [] [ Ty.path "i32" ])
      ];
  } *)

Module Impl_core_fmt_Debug_for_scoping_rules_lifetimes_structs_NamedBorrowed.
  Definition Self : Ty.t := Ty.path "scoping_rules_lifetimes_structs::NamedBorrowed".
  
  Parameter fmt : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_scoping_rules_lifetimes_structs_NamedBorrowed.

(*
Enum Either
{
  const_params := [];
  ty_params := [];
  variants :=
    [
      {
        name := "Num";
        item := StructTuple [ Ty.path "i32" ];
      };
      {
        name := "Ref";
        item := StructTuple [ Ty.apply (Ty.path "&") [] [ Ty.path "i32" ] ];
      }
    ];
}
*)

Axiom IsDiscriminant_Either_Num : M.IsDiscriminant "scoping_rules_lifetimes_structs::Either::Num" 0.
Axiom IsDiscriminant_Either_Ref : M.IsDiscriminant "scoping_rules_lifetimes_structs::Either::Ref" 1.

Module Impl_core_fmt_Debug_for_scoping_rules_lifetimes_structs_Either.
  Definition Self : Ty.t := Ty.path "scoping_rules_lifetimes_structs::Either".
  
  Parameter fmt : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Trait polymorphic consts *) []
      (* Trait polymorphic types *) []
      Self
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_scoping_rules_lifetimes_structs_Either.

Parameter main : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Global Instance Instance_IsFunction_main :
  M.IsFunction.C "scoping_rules_lifetimes_structs::main" main.
Admitted.
