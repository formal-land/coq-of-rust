(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* StructRecord
  {
    name := "Point";
    ty_params := [];
    fields := [ ("x", Ty.path "f64"); ("y", Ty.path "f64") ];
  } *)

Module Impl_core_fmt_Debug_for_box_stack_heap_Point.
  Definition Self : Ty.t := Ty.path "box_stack_heap::Point".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      Self
      (* Trait polymorphic types *) []
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_box_stack_heap_Point.

Module Impl_core_clone_Clone_for_box_stack_heap_Point.
  Definition Self : Ty.t := Ty.path "box_stack_heap::Point".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      Self
      (* Trait polymorphic types *) []
      (* Instance *) [ ("clone", InstanceField.Method clone) ].
End Impl_core_clone_Clone_for_box_stack_heap_Point.

Module Impl_core_marker_Copy_for_box_stack_heap_Point.
  Definition Self : Ty.t := Ty.path "box_stack_heap::Point".
  
  Axiom Implements :
    M.IsTraitInstance "core::marker::Copy" Self (* Trait polymorphic types *) [] (* Instance *) [].
End Impl_core_marker_Copy_for_box_stack_heap_Point.

(* StructRecord
  {
    name := "Rectangle";
    ty_params := [];
    fields :=
      [
        ("top_left", Ty.path "box_stack_heap::Point");
        ("bottom_right", Ty.path "box_stack_heap::Point")
      ];
  } *)

Parameter origin : (list Ty.t) -> (list Value.t) -> M.

Axiom Function_origin : M.IsFunction "box_stack_heap::origin" origin.

Parameter boxed_origin : (list Ty.t) -> (list Value.t) -> M.

Axiom Function_boxed_origin : M.IsFunction "box_stack_heap::boxed_origin" boxed_origin.

Parameter main : (list Ty.t) -> (list Value.t) -> M.

Axiom Function_main : M.IsFunction "box_stack_heap::main" main.
