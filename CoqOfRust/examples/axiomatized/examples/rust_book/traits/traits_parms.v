(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Trait *)
(* Empty module 'Foo' *)

(* Trait *)
(* Empty module 'Bar' *)

(* Trait *)
(* Empty module 'Tar' *)

(* Trait *)
(* Empty module 'SomeTrait' *)

(* StructTuple
  {
    name := "SomeOtherType";
    ty_params := [];
    fields := [ Ty.path "u32" ];
  } *)

Module Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.path "traits_parms::SomeOtherType".
  
  Axiom Implements :
    M.IsTraitInstance "traits_parms::Foo" Self (* Trait polymorphic types *) [] (* Instance *) [].
End Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.

Module Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.path "traits_parms::SomeOtherType".
  
  Axiom Implements :
    M.IsTraitInstance "traits_parms::Bar" Self (* Trait polymorphic types *) [] (* Instance *) [].
End Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.

Module Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.path "traits_parms::SomeOtherType".
  
  Axiom Implements :
    M.IsTraitInstance "traits_parms::Tar" Self (* Trait polymorphic types *) [] (* Instance *) [].
End Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.

Module Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.path "traits_parms::SomeOtherType".
  
  Definition _SomeType : Ty.t := Ty.path "traits_parms::SomeOtherType".
  
  Parameter some_fn : (list Ty.t) -> (list A.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "traits_parms::SomeTrait"
      Self
      (* Trait polymorphic types *) []
      (* Instance *)
      [ ("SomeType", InstanceField.Ty _SomeType); ("some_fn", InstanceField.Method some_fn) ].
End Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
