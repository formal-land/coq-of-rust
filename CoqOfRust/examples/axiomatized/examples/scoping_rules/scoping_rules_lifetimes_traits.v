(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Borrowed.
Section Borrowed.
  Record t : Set := {
    x : ref i32.t;
  }.
  
  Definition Get_x :=
    Ref.map (fun α => Some α.(x)) (fun β α => Some (α <| x := β |>)).
End Borrowed.
End Borrowed.

Module  Impl_core_fmt_Debug_for_scoping_rules_lifetimes_traits_Borrowed_t.
Section Impl_core_fmt_Debug_for_scoping_rules_lifetimes_traits_Borrowed_t.
  Definition Self : Set := scoping_rules_lifetimes_traits.Borrowed.t.
  
  (*
  Debug
  *)
  Parameter fmt :
      (ref Self) -> (mut_ref core.fmt.Formatter.t) -> M ltac:(core.fmt.Result).
  
  Axiom fmt_is_impl : impl Self "fmt" = fmt.
  
  Global Instance ℐ : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt := fmt;
  }.
End Impl_core_fmt_Debug_for_scoping_rules_lifetimes_traits_Borrowed_t.
End Impl_core_fmt_Debug_for_scoping_rules_lifetimes_traits_Borrowed_t.

Module  Impl_core_default_Default_for_scoping_rules_lifetimes_traits_Borrowed_t.
Section Impl_core_default_Default_for_scoping_rules_lifetimes_traits_Borrowed_t.
  Definition Self : Set := scoping_rules_lifetimes_traits.Borrowed.t.
  
  (*
      fn default() -> Self {
          Self { x: &10 }
      }
  *)
  Parameter default : M Self.
  
  Axiom default_is_impl : impl Self "default" = default.
  
  Global Instance ℐ : core.default.Default.Trait Self := {
    core.default.Default.default := default;
  }.
End Impl_core_default_Default_for_scoping_rules_lifetimes_traits_Borrowed_t.
End Impl_core_default_Default_for_scoping_rules_lifetimes_traits_Borrowed_t.

(*
fn main() {
    let b: Borrowed = Default::default();
    println!("b is {:?}", b);
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
