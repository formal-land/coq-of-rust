(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module foo.
  Module gre.
    (*
            pub fn f_foo_gre() {
                println!("foo::gre::bar");
            }
    *)
    Definition f_foo_gre : M unit :=
      ltac:(M.monadic (
        M.read (|
          let _ : M.Val unit :=
            let _ : M.Val unit :=
              M.alloc (|
                M.call (|(std.io.stdio._print
                  (M.call (|(core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion
                      "Unsize"
                      (borrow
                        (M.alloc (| [ M.read (| mk_str "foo::gre::bar
" |) ]
                        |)))))
                  |)))
                |)
              |) in
            M.alloc (| tt |) in
          M.alloc (| tt |)
        |)
      )).
  End gre.
  
  (*
      pub fn f_foo() {
          println!("foo::bar");
          gre::f_foo_gre();
      }
  *)
  Definition f_foo : M unit :=
    ltac:(M.monadic (
      M.read (|
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_const"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (| [ M.read (| mk_str "foo::bar
" |) ] |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let _ : M.Val unit :=
          M.alloc (| M.call (|module_duplicate.foo.gre.f_foo_gre |) |) in
        M.alloc (| tt |)
      |)
    )).
End foo.

(*
fn f() {
    foo::f_foo();
}
*)
Definition f : M unit :=
  ltac:(M.monadic (
    M.read (|
      let _ : M.Val unit :=
        M.alloc (| M.call (|module_duplicate.foo.f_foo |) |) in
      M.alloc (| tt |)
    |)
  )).
