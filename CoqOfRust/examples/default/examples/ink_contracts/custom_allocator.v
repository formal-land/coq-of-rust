(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  CustomAllocator.
Section CustomAllocator.
  Record t : Set := {
    value : alloc.vec.Vec.t bool.t alloc.vec.Vec.Default.A;
  }.
  
  Definition Get_value :=
    Ref.map (fun α => Some α.(value)) (fun β α => Some (α <| value := β |>)).
End CustomAllocator.
End CustomAllocator.

Module  Impl_custom_allocator_CustomAllocator_t.
Section Impl_custom_allocator_CustomAllocator_t.
  Definition Self : Set := custom_allocator.CustomAllocator.t.
  
  (*
      pub fn new(init_value: bool) -> Self {
          Self {
              value: vec![init_value],
          }
      }
  *)
  Definition new (init_value : bool.t) : M Self :=
    ltac:(M.monadic (
      let init_value := M.alloc (| init_value |) in
      {|
        custom_allocator.CustomAllocator.value :=
          M.call (|((slice bool.t)::["into_vec"]
            (pointer_coercion
              "Unsize"
              (M.read (|
                M.call (|((alloc.boxed.Box.t _ alloc.boxed.Box.Default.A)::["new"]
                  (M.alloc (| [ M.read (| init_value |) ] |)))
                |)
              |))))
          |);
      |} : custom_allocator.CustomAllocator.t
    )).
  
  Global Instance AssociatedFunction_new : Notations.DoubleColon Self "new" := {
    Notations.double_colon := new;
  }.
  
  (*
      pub fn default() -> Self {
          Self::new(Default::default())
      }
  *)
  Definition default : M Self :=
    ltac:(M.monadic (
      M.call (|(custom_allocator.CustomAllocator.t::["new"]
        (M.call (|ltac:(M.get_method (fun ℐ =>
          core.default.Default.default (Self := bool.t) (Trait := ℐ)))
        |)))
      |)
    )).
  
  Global Instance AssociatedFunction_default :
    Notations.DoubleColon Self "default" := {
    Notations.double_colon := default;
  }.
  
  (*
      pub fn flip(&mut self) {
          self.value[0] = !self.value[0];
      }
  *)
  Definition flip (self : mut_ref Self) : M unit :=
    ltac:(M.monadic (
      let self := M.alloc (| self |) in
      M.read (|
        let _ : M.Val unit :=
          assign (|
            deref
              (M.call (|(ltac:(M.get_method (fun ℐ =>
                  core.ops.index.IndexMut.index_mut
                    (Self := alloc.vec.Vec.t bool.t alloc.alloc.Global.t)
                    (Idx := usize.t)
                    (Trait := ℐ)))
                (borrow_mut
                  (custom_allocator.CustomAllocator.Get_value
                    (deref (M.read (| self |)))))
                ((Integer.of_Z 0) : usize.t))
              |)),
            UnOp.not
              (M.read (|
                deref
                  (M.call (|(ltac:(M.get_method (fun ℐ =>
                      core.ops.index.Index.index
                        (Self := alloc.vec.Vec.t bool.t alloc.alloc.Global.t)
                        (Idx := usize.t)
                        (Trait := ℐ)))
                    (borrow
                      (custom_allocator.CustomAllocator.Get_value
                        (deref (M.read (| self |)))))
                    ((Integer.of_Z 0) : usize.t))
                  |))
              |))
          |) in
        M.alloc (| tt |)
      |)
    )).
  
  Global Instance AssociatedFunction_flip :
    Notations.DoubleColon Self "flip" := {
    Notations.double_colon := flip;
  }.
  
  (*
      pub fn get(&self) -> bool {
          self.value[0]
      }
  *)
  Definition get (self : ref Self) : M bool.t :=
    ltac:(M.monadic (
      let self := M.alloc (| self |) in
      M.read (|
        deref
          (M.call (|(ltac:(M.get_method (fun ℐ =>
              core.ops.index.Index.index
                (Self := alloc.vec.Vec.t bool.t alloc.alloc.Global.t)
                (Idx := usize.t)
                (Trait := ℐ)))
            (borrow
              (custom_allocator.CustomAllocator.Get_value
                (deref (M.read (| self |)))))
            ((Integer.of_Z 0) : usize.t))
          |))
      |)
    )).
  
  Global Instance AssociatedFunction_get : Notations.DoubleColon Self "get" := {
    Notations.double_colon := get;
  }.
End Impl_custom_allocator_CustomAllocator_t.
End Impl_custom_allocator_CustomAllocator_t.
