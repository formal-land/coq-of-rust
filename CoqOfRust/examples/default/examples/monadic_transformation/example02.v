(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    match 1 {
        0 => false,
        _ => true,
    };
    if true {
        0
    } else {
        1
    };
    if false {
        2
    } else if false {
        3
    } else if false {
        4
    } else {
        5
    };
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let _ : M.Val bool.t :=
        ltac:
          (M.monadic_match_operator
            (M.alloc (| (Integer.of_Z 1) : i32.t |))
            [
              fun (γ : M.Val i32.t) => (M.alloc (| false |)) : M.Val bool.t;
              fun (γ : M.Val i32.t) => (M.alloc (| true |)) : M.Val bool.t
            ]) in
      let _ : M.Val i32.t :=
        if M.read (| use (M.alloc (| true |)) |) then
          M.alloc (| (Integer.of_Z 0) : i32.t |)
        else
          M.alloc (| (Integer.of_Z 1) : i32.t |) in
      let _ : M.Val i32.t :=
        if M.read (| use (M.alloc (| false |)) |) then
          M.alloc (| (Integer.of_Z 2) : i32.t |)
        else
          if M.read (| use (M.alloc (| false |)) |) then
            M.alloc (| (Integer.of_Z 3) : i32.t |)
          else
            if M.read (| use (M.alloc (| false |)) |) then
              M.alloc (| (Integer.of_Z 4) : i32.t |)
            else
              M.alloc (| (Integer.of_Z 5) : i32.t |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
