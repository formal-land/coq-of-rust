(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let x = &1;
}
*)
Definition main (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
  match ε, τ, α with
  | [], [], [] =>
    ltac:(M.monadic
      (M.read (|
        let~ x : Ty.apply (Ty.path "&") [] [ Ty.path "i32" ] :=
          M.alloc (|
            M.borrow (| Pointer.Kind.Ref, M.alloc (| Value.Integer IntegerKind.I32 1 |) |)
          |) in
        M.alloc (| Value.Tuple [] |)
      |)))
  | _, _, _ => M.impossible "wrong number of arguments"
  end.

Global Instance Instance_IsFunction_main : M.IsFunction.C "example04::main" main.
Admitted.
Global Typeclasses Opaque main.
