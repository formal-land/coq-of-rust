(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn used_function() {}
*)
Definition used_function (τ : list Ty.t) (α : list Value.t) : M :=
  match τ, α with | [], [] => M.pure (Value.Tuple []) | _, _ => M.impossible end.

(*
fn unused_function() {}
*)
Definition unused_function (τ : list Ty.t) (α : list Value.t) : M :=
  match τ, α with | [], [] => M.pure (Value.Tuple []) | _, _ => M.impossible end.

(*
fn noisy_unused_function() {}
*)
Definition noisy_unused_function (τ : list Ty.t) (α : list Value.t) : M :=
  match τ, α with | [], [] => M.pure (Value.Tuple []) | _, _ => M.impossible end.

(*
fn main() {
    used_function();
}
*)
Definition main (τ : list Ty.t) (α : list Value.t) : M :=
  match τ, α with
  | [], [] =>
    let* _ :=
      let* α0 := M.get_function "dead_code::used_function" [] [] in
      let* α1 := M.call_closure α0 [] in
      M.alloc α1 in
    let* α0 := M.alloc (Value.Tuple []) in
    M.read α0
  | _, _ => M.impossible
  end.
