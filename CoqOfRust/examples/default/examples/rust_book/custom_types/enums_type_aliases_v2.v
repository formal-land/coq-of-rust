(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module VeryVerboseEnumOfThingsToDoWithNumbers.
  Inductive t : Set :=
  | Add
  | Subtract.
End VeryVerboseEnumOfThingsToDoWithNumbers.

Module  Impl_enums_type_aliases_v2_VeryVerboseEnumOfThingsToDoWithNumbers_t.
Section Impl_enums_type_aliases_v2_VeryVerboseEnumOfThingsToDoWithNumbers_t.
  Definition Self : Set :=
    enums_type_aliases_v2.VeryVerboseEnumOfThingsToDoWithNumbers.t.
  
  (*
      fn run(&self, x: i32, y: i32) -> i32 {
          match self {
              Self::Add => x + y,
              Self::Subtract => x - y,
          }
      }
  *)
  Definition run (self : ref Self) (x : i32.t) (y : i32.t) : M i32.t :=
    ltac:(M.monadic ((
      let self := M.alloc (| self |) in
      let x := M.alloc (| x |) in
      let y := M.alloc (| y |) in
      M.read (|
        ltac:
          (M.monadic_match_operator
            self
            [
              fun
                  (γ :
                    M.Val
                      (ref
                        enums_type_aliases_v2.VeryVerboseEnumOfThingsToDoWithNumbers.t)) =>
                (let γ := deref (M.read (| γ |)) in
                match M.read (| γ |) with
                |
                    enums_type_aliases_v2.VeryVerboseEnumOfThingsToDoWithNumbers.Add
                    =>
                  M.alloc (|
                    BinOp.Panic.add (| M.read (| x |), M.read (| y |) |)
                  |)
                | _ => M.break_match(||)
                end) :
                M.Val i32.t;
              fun
                  (γ :
                    M.Val
                      (ref
                        enums_type_aliases_v2.VeryVerboseEnumOfThingsToDoWithNumbers.t)) =>
                (let γ := deref (M.read (| γ |)) in
                match M.read (| γ |) with
                |
                    enums_type_aliases_v2.VeryVerboseEnumOfThingsToDoWithNumbers.Subtract
                    =>
                  M.alloc (|
                    BinOp.Panic.sub (| M.read (| x |), M.read (| y |) |)
                  |)
                | _ => M.break_match(||)
                end) :
                M.Val i32.t
            ])
      |)
    ) : i32.t)).
  
  Global Instance AssociatedFunction_run : Notations.DoubleColon Self "run" := {
    Notations.double_colon := run;
  }.
End Impl_enums_type_aliases_v2_VeryVerboseEnumOfThingsToDoWithNumbers_t.
End Impl_enums_type_aliases_v2_VeryVerboseEnumOfThingsToDoWithNumbers_t.
