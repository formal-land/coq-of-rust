(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let strings = vec!["tofu", "93", "18"];
    let numbers: Vec<_> = strings.into_iter().map(|s| s.parse::<i32>()).collect();
    println!("Results: {:?}", numbers);
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let strings : M.Val (alloc.vec.Vec.t (ref str.t) alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|((slice (ref str.t))::["into_vec"]
            (pointer_coercion
              "Unsize"
              (M.read (|
                M.call (|((alloc.boxed.Box.t _ alloc.boxed.Box.Default.A)::["new"]
                  (M.alloc (|
                    [
                      M.read (| mk_str "tofu" |);
                      M.read (| mk_str "93" |);
                      M.read (| mk_str "18" |)
                    ]
                  |)))
                |)
              |))))
          |)
        |) in
      let numbers :
          M.Val
            (alloc.vec.Vec.t
              (core.result.Result.t i32.t core.num.error.ParseIntError.t)
              alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|(ltac:(M.get_method (fun ℐ =>
              core.iter.traits.iterator.Iterator.collect
                (Self :=
                  core.iter.adapters.map.Map.t
                    (alloc.vec.into_iter.IntoIter.t
                      (ref str.t)
                      alloc.alloc.Global.t)
                    ((ref str.t) ->
                      core.result.Result.t
                        i32.t
                        core.num.error.ParseIntError.t))
                (B :=
                  alloc.vec.Vec.t
                    (core.result.Result.t i32.t core.num.error.ParseIntError.t)
                    alloc.alloc.Global.t)
                (Trait := ℐ)))
            (M.call (|(ltac:(M.get_method (fun ℐ =>
                core.iter.traits.iterator.Iterator.map
                  (Self :=
                    alloc.vec.into_iter.IntoIter.t
                      (ref str.t)
                      alloc.alloc.Global.t)
                  (B :=
                    core.result.Result.t i32.t core.num.error.ParseIntError.t)
                  (F :=
                    (ref str.t) ->
                      core.result.Result.t i32.t core.num.error.ParseIntError.t)
                  (Trait := ℐ)))
              (M.call (|(ltac:(M.get_method (fun ℐ =>
                  core.iter.traits.collect.IntoIterator.into_iter
                    (Self := alloc.vec.Vec.t (ref str.t) alloc.alloc.Global.t)
                    (Trait := ℐ)))
                (M.read (| strings |)))
              |))
              (fun (α0 : ref str.t) =>
                (ltac:
                  (M.monadic_match_operator
                    (M.alloc (| α0 |))
                    [
                      fun γ =>
                        (let s := M.copy (| γ |) in
                        M.call (|(str.t::["parse"] (M.read (| s |))) |)) :
                        core.result.Result.t
                          i32.t
                          core.num.error.ParseIntError.t
                    ])) :
                core.result.Result.t i32.t core.num.error.ParseIntError.t))
            |)))
          |)
        |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [ M.read (| mk_str "Results: " |); M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_debug"]
                          (borrow numbers))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
