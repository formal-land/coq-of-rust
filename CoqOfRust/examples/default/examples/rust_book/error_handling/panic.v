(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn drink(beverage: &str) {
    // You shouldn't drink too much sugary beverages.
    if beverage == "lemonade" {
        panic!("AAAaaaaa!!!!");
    }

    println!("Some refreshing {} is all I need.", beverage);
}
*)
Definition drink (beverage : ref str.t) : M unit :=
  ltac:(M.monadic ((
    let beverage := M.alloc (| beverage |) in
    M.read (|
      let _ : M.Val unit :=
        if
          M.read (|
            use
              (M.alloc (|
                M.call (|(ltac:(M.get_method (fun ℐ =>
                    core.cmp.PartialEq.eq
                      (Self := ref str.t)
                      (Rhs := ref str.t)
                      (Trait := ℐ)))
                  (borrow beverage)
                  (borrow (mk_str "lemonade")))
                |)
              |))
          |)
        then
          M.alloc (|
            (never_to_any (B := unit)) (|
              M.call (|(std.panicking.begin_panic
                (M.read (| mk_str "AAAaaaaa!!!!" |)))
              |)
            |)
          |)
        else
          M.alloc (| tt |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Some refreshing " |);
                        M.read (| mk_str " is all I need.
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_display"]
                          (borrow beverage))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  ) : unit)).

(*
fn main() {
    drink("water");
    drink("lemonade");
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let _ : M.Val unit :=
        M.alloc (| M.call (|(panic.drink (M.read (| mk_str "water" |))) |) |) in
      let _ : M.Val unit :=
        M.alloc (| M.call (|(panic.drink (M.read (| mk_str "lemonade" |))) |)
        |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
