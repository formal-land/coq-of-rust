(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    'outer: loop {
        println!("Entered the outer loop");

        'inner: loop {
            println!("Entered the inner loop");

            // This would break only the inner loop
            //break;

            // This breaks the outer loop
            break 'outer;
        }

        println!("This point will never be reached");
    }

    println!("Exited the outer loop");
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let _ : M.Val unit :=
        ltac: (M.monadic_loop (
          let _ : M.Val unit :=
            let _ : M.Val unit :=
              M.alloc (|
                M.call (|(std.io.stdio._print
                  (M.call (|(core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion
                      "Unsize"
                      (borrow
                        (M.alloc (|
                          [ M.read (| mk_str "Entered the outer loop
" |) ]
                        |)))))
                  |)))
                |)
              |) in
            M.alloc (| tt |) in
          let _ : M.Val unit :=
            M.alloc (|
              (never_to_any (B := unit)) (|
                M.read (|
                  ltac: (M.monadic_loop (
                    let _ : M.Val unit :=
                      let _ : M.Val unit :=
                        M.alloc (|
                          M.call (|(std.io.stdio._print
                            (M.call (|(core.fmt.Arguments.t::["new_const"]
                              (pointer_coercion
                                "Unsize"
                                (borrow
                                  (M.alloc (|
                                    [
                                      M.read (| mk_str "Entered the inner loop
"
                                      |)
                                    ]
                                  |)))))
                            |)))
                          |)
                        |) in
                      M.alloc (| tt |) in
                    M.break (||)))
                |)
              |)
            |) in
          let _ : M.Val unit :=
            let _ : M.Val unit :=
              M.alloc (|
                M.call (|(std.io.stdio._print
                  (M.call (|(core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion
                      "Unsize"
                      (borrow
                        (M.alloc (|
                          [
                            M.read (| mk_str "This point will never be reached
"
                            |)
                          ]
                        |)))))
                  |)))
                |)
              |) in
            M.alloc (| tt |) in
          M.alloc (| tt |))) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_const"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (| [ M.read (| mk_str "Exited the outer loop
" |) ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
