(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let number = 13;
    // TODO ^ Try different values for `number`

    println!("Tell me about {}", number);
    match number {
        // Match a single value
        1 => println!("One!"),
        // Match several values
        2 | 3 | 5 | 7 | 11 => println!("This is a prime"),
        // TODO ^ Try adding 13 to the list of prime values
        // Match an inclusive range
        13..=19 => println!("A teen"),
        // Handle the rest of cases
        _ => println!("Ain't special"),
        // TODO ^ Try commenting out this catch-all arm
    }

    let boolean = true;
    // Match is an expression too
    let binary = match boolean {
        // The arms of a match must cover all the possible values
        false => 0,
        true => 1,
        // TODO ^ Try commenting out one of these arms
    };

    println!("{} -> {}", boolean, binary);
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let number : M.Val i32.t := M.alloc (| (Integer.of_Z 13) : i32.t |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Tell me about " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_display"]
                          (borrow number))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let _ : M.Val unit :=
        ltac:
          (M.monadic_match_operator
            number
            [
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (| [ M.read (| mk_str "One!
" |) ] |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [ M.read (| mk_str "This is a prime
" |) ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [ M.read (| mk_str "This is a prime
" |) ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [ M.read (| mk_str "This is a prime
" |) ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [ M.read (| mk_str "This is a prime
" |) ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [ M.read (| mk_str "This is a prime
" |) ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (| [ M.read (| mk_str "A teen
" |) ] |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit;
              fun (γ : M.Val i32.t) =>
                (let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_const"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (| [ M.read (| mk_str "Ain't special
" |) ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)) :
                M.Val unit
            ]) in
      let boolean : M.Val bool.t := M.alloc (| true |) in
      let binary : M.Val i32.t :=
        M.copy (|
          ltac:
            (M.monadic_match_operator
              boolean
              [
                fun (γ : M.Val bool.t) =>
                  (M.alloc (| (Integer.of_Z 0) : i32.t |)) : M.Val i32.t;
                fun (γ : M.Val bool.t) =>
                  (M.alloc (| (Integer.of_Z 1) : i32.t |)) : M.Val i32.t
              ])
        |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "" |);
                        M.read (| mk_str " -> " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_display"]
                          (borrow boolean))
                        |);
                        M.call (|(core.fmt.rt.Argument.t::["new_display"]
                          (borrow binary))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
