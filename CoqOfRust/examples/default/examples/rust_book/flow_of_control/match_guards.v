(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Temperature.
  Inductive t : Set :=
  | Celsius (_ : i32.t)
  | Fahrenheit (_ : i32.t).
  
  Definition Get_Celsius_0 :=
    Ref.map
      (fun α => match α with | Celsius α0 => Some α0 | _ => None end)
      (fun β α => match α with | Celsius _ => Some (Celsius β) | _ => None end).
  
  Definition Get_Fahrenheit_0 :=
    Ref.map
      (fun α => match α with | Fahrenheit α0 => Some α0 | _ => None end)
      (fun β α =>
        match α with | Fahrenheit _ => Some (Fahrenheit β) | _ => None end).
End Temperature.

(*
fn main() {
    let temperature = Temperature::Celsius(35);
    // ^ TODO try different values for `temperature`

    match temperature {
        Temperature::Celsius(t) if t > 30 => println!("{}C is above 30 Celsius", t),
        // The `if condition` part ^ is a guard
        Temperature::Celsius(t) => println!("{}C is below 30 Celsius", t),

        Temperature::Fahrenheit(t) if t > 86 => println!("{}F is above 86 Fahrenheit", t),
        Temperature::Fahrenheit(t) => println!("{}F is below 86 Fahrenheit", t),
    }
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let temperature : M.Val match_guards.Temperature.t :=
        M.alloc (| match_guards.Temperature.Celsius ((Integer.of_Z 35) : i32.t)
        |) in
      ltac:
        (M.monadic_match_operator
          temperature
          [
            fun (γ : M.Val match_guards.Temperature.t) =>
              match M.read (| γ |) with
              | match_guards.Temperature.Celsius _ =>
                let γ0_0 := match_guards.Temperature.Get_Celsius_0 γ in
                let t := M.copy (| γ0_0 |) in
                let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_v1"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.read (| mk_str "" |);
                                M.read (| mk_str "C is above 30 Celsius
" |)
                              ]
                            |))))
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.call (|(core.fmt.rt.Argument.t::["new_display"]
                                  (borrow t))
                                |)
                              ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)
              | _ => M.break_match(||)
              end :
              M.Val unit;
            fun (γ : M.Val match_guards.Temperature.t) =>
              match M.read (| γ |) with
              | match_guards.Temperature.Celsius _ =>
                let γ0_0 := match_guards.Temperature.Get_Celsius_0 γ in
                let t := M.copy (| γ0_0 |) in
                let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_v1"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.read (| mk_str "" |);
                                M.read (| mk_str "C is below 30 Celsius
" |)
                              ]
                            |))))
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.call (|(core.fmt.rt.Argument.t::["new_display"]
                                  (borrow t))
                                |)
                              ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)
              | _ => M.break_match(||)
              end :
              M.Val unit;
            fun (γ : M.Val match_guards.Temperature.t) =>
              match M.read (| γ |) with
              | match_guards.Temperature.Fahrenheit _ =>
                let γ0_0 := match_guards.Temperature.Get_Fahrenheit_0 γ in
                let t := M.copy (| γ0_0 |) in
                let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_v1"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.read (| mk_str "" |);
                                M.read (| mk_str "F is above 86 Fahrenheit
" |)
                              ]
                            |))))
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.call (|(core.fmt.rt.Argument.t::["new_display"]
                                  (borrow t))
                                |)
                              ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)
              | _ => M.break_match(||)
              end :
              M.Val unit;
            fun (γ : M.Val match_guards.Temperature.t) =>
              match M.read (| γ |) with
              | match_guards.Temperature.Fahrenheit _ =>
                let γ0_0 := match_guards.Temperature.Get_Fahrenheit_0 γ in
                let t := M.copy (| γ0_0 |) in
                let _ : M.Val unit :=
                  M.alloc (|
                    M.call (|(std.io.stdio._print
                      (M.call (|(core.fmt.Arguments.t::["new_v1"]
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.read (| mk_str "" |);
                                M.read (| mk_str "F is below 86 Fahrenheit
" |)
                              ]
                            |))))
                        (pointer_coercion
                          "Unsize"
                          (borrow
                            (M.alloc (|
                              [
                                M.call (|(core.fmt.rt.Argument.t::["new_display"]
                                  (borrow t))
                                |)
                              ]
                            |)))))
                      |)))
                    |)
                  |) in
                M.alloc (| tt |)
              | _ => M.break_match(||)
              end :
              M.Val unit
          ])
    |)
  ) : unit)).
