(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let vec1 = vec![1, 2, 3];
    let vec2 = vec![4, 5, 6];

    // `iter()` for vecs yields `&i32`.
    let mut iter = vec1.iter();
    // `into_iter()` for vecs yields `i32`.
    let mut into_iter = vec2.into_iter();

    // `iter()` for vecs yields `&i32`, and we want to reference one of its
    // items, so we have to destructure `&&i32` to `i32`
    println!("Find 2 in vec1: {:?}", iter.find(|&&x| x == 2));
    // `into_iter()` for vecs yields `i32`, and we want to reference one of
    // its items, so we have to destructure `&i32` to `i32`
    println!("Find 2 in vec2: {:?}", into_iter.find(|&x| x == 2));

    let array1 = [1, 2, 3];
    let array2 = [4, 5, 6];

    // `iter()` for arrays yields `&i32`
    println!("Find 2 in array1: {:?}", array1.iter().find(|&&x| x == 2));
    // `into_iter()` for arrays yields `i32`
    println!(
        "Find 2 in array2: {:?}",
        array2.into_iter().find(|&x| *x == 2)
    );
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic (
    M.read (|
      let vec1 : M.Val (alloc.vec.Vec.t i32.t alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|((slice i32.t)::["into_vec"]
            (pointer_coercion
              "Unsize"
              (M.read (|
                M.call (|((alloc.boxed.Box.t _ alloc.boxed.Box.Default.A)::["new"]
                  (M.alloc (|
                    [
                      (Integer.of_Z 1) : i32.t;
                      (Integer.of_Z 2) : i32.t;
                      (Integer.of_Z 3) : i32.t
                    ]
                  |)))
                |)
              |))))
          |)
        |) in
      let vec2 : M.Val (alloc.vec.Vec.t i32.t alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|((slice i32.t)::["into_vec"]
            (pointer_coercion
              "Unsize"
              (M.read (|
                M.call (|((alloc.boxed.Box.t _ alloc.boxed.Box.Default.A)::["new"]
                  (M.alloc (|
                    [
                      (Integer.of_Z 4) : i32.t;
                      (Integer.of_Z 5) : i32.t;
                      (Integer.of_Z 6) : i32.t
                    ]
                  |)))
                |)
              |))))
          |)
        |) in
      let iter : M.Val (core.slice.iter.Iter.t i32.t) :=
        M.alloc (|
          M.call (|((slice i32.t)::["iter"]
            (M.call (|(ltac:(M.get_method (fun ℐ =>
                core.ops.deref.Deref.deref
                  (Self := alloc.vec.Vec.t i32.t alloc.alloc.Global.t)
                  (Trait := ℐ)))
              (borrow vec1))
            |)))
          |)
        |) in
      let into_iter :
          M.Val (alloc.vec.into_iter.IntoIter.t i32.t alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|(ltac:(M.get_method (fun ℐ =>
              core.iter.traits.collect.IntoIterator.into_iter
                (Self := alloc.vec.Vec.t i32.t alloc.alloc.Global.t)
                (Trait := ℐ)))
            (M.read (| vec2 |)))
          |)
        |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Find 2 in vec1: " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_debug"]
                          (borrow
                            (M.alloc (|
                              M.call (|(ltac:(M.get_method (fun ℐ =>
                                  core.iter.traits.iterator.Iterator.find
                                    (Self := core.slice.iter.Iter.t i32.t)
                                    (P := (ref (ref i32.t)) -> bool.t)
                                    (Trait := ℐ)))
                                (borrow_mut iter)
                                (fun (α0 : ref (ref i32.t)) =>
                                  (ltac:
                                    (M.monadic_match_operator
                                      (M.alloc (| α0 |))
                                      [
                                        fun γ =>
                                          (let γ := deref (M.read (| γ |)) in
                                          let γ := deref (M.read (| γ |)) in
                                          let x := M.copy (| γ |) in
                                          BinOp.Pure.eq
                                            (M.read (| x |))
                                            ((Integer.of_Z 2) : i32.t)) :
                                          bool.t
                                      ])) :
                                  bool.t))
                              |)
                            |))))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Find 2 in vec2: " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_debug"]
                          (borrow
                            (M.alloc (|
                              M.call (|(ltac:(M.get_method (fun ℐ =>
                                  core.iter.traits.iterator.Iterator.find
                                    (Self :=
                                      alloc.vec.into_iter.IntoIter.t
                                        i32.t
                                        alloc.alloc.Global.t)
                                    (P := (ref i32.t) -> bool.t)
                                    (Trait := ℐ)))
                                (borrow_mut into_iter)
                                (fun (α0 : ref i32.t) =>
                                  (ltac:
                                    (M.monadic_match_operator
                                      (M.alloc (| α0 |))
                                      [
                                        fun γ =>
                                          (let γ := deref (M.read (| γ |)) in
                                          let x := M.copy (| γ |) in
                                          BinOp.Pure.eq
                                            (M.read (| x |))
                                            ((Integer.of_Z 2) : i32.t)) :
                                          bool.t
                                      ])) :
                                  bool.t))
                              |)
                            |))))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let array1 : M.Val (array i32.t) :=
        M.alloc (|
          [
            (Integer.of_Z 1) : i32.t;
            (Integer.of_Z 2) : i32.t;
            (Integer.of_Z 3) : i32.t
          ]
        |) in
      let array2 : M.Val (array i32.t) :=
        M.alloc (|
          [
            (Integer.of_Z 4) : i32.t;
            (Integer.of_Z 5) : i32.t;
            (Integer.of_Z 6) : i32.t
          ]
        |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Find 2 in array1: " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_debug"]
                          (borrow
                            (M.alloc (|
                              M.call (|(ltac:(M.get_method (fun ℐ =>
                                  core.iter.traits.iterator.Iterator.find
                                    (Self := core.slice.iter.Iter.t i32.t)
                                    (P := (ref (ref i32.t)) -> bool.t)
                                    (Trait := ℐ)))
                                (borrow_mut
                                  (M.alloc (|
                                    M.call (|((slice i32.t)::["iter"]
                                      (pointer_coercion
                                        "Unsize"
                                        (borrow array1)))
                                    |)
                                  |)))
                                (fun (α0 : ref (ref i32.t)) =>
                                  (ltac:
                                    (M.monadic_match_operator
                                      (M.alloc (| α0 |))
                                      [
                                        fun γ =>
                                          (let γ := deref (M.read (| γ |)) in
                                          let γ := deref (M.read (| γ |)) in
                                          let x := M.copy (| γ |) in
                                          BinOp.Pure.eq
                                            (M.read (| x |))
                                            ((Integer.of_Z 2) : i32.t)) :
                                          bool.t
                                      ])) :
                                  bool.t))
                              |)
                            |))))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Find 2 in array2: " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_debug"]
                          (borrow
                            (M.alloc (|
                              M.call (|(ltac:(M.get_method (fun ℐ =>
                                  core.iter.traits.iterator.Iterator.find
                                    (Self := core.slice.iter.Iter.t i32.t)
                                    (P := (ref (ref i32.t)) -> bool.t)
                                    (Trait := ℐ)))
                                (borrow_mut
                                  (M.alloc (|
                                    M.call (|(ltac:(M.get_method (fun ℐ =>
                                        core.iter.traits.collect.IntoIterator.into_iter
                                          (Self := ref (array i32.t))
                                          (Trait := ℐ)))
                                      (borrow array2))
                                    |)
                                  |)))
                                (fun (α0 : ref (ref i32.t)) =>
                                  (ltac:
                                    (M.monadic_match_operator
                                      (M.alloc (| α0 |))
                                      [
                                        fun γ =>
                                          (let γ := deref (M.read (| γ |)) in
                                          let x := M.copy (| γ |) in
                                          BinOp.Pure.eq
                                            (M.read (| deref (M.read (| x |))
                                            |))
                                            ((Integer.of_Z 2) : i32.t)) :
                                          bool.t
                                      ])) :
                                  bool.t))
                              |)
                            |))))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  )).
