(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    // `F` must be generic.
    fn apply<F>(f: F)
    where
        F: FnOnce(),
    {
        f();
    }
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit := ltac:(M.monadic (( tt ) : unit)).

(*
    fn apply<F>(f: F)
    where
        F: FnOnce(),
    {
        f();
    }
*)
Definition apply {F : Set} (f : F) : M unit :=
  ltac:(M.monadic ((
    let f := M.alloc (| f |) in
    M.read (|
      let _ : M.Val unit :=
        M.alloc (|
          M.call (|(ltac:(M.get_method (fun ℐ =>
              core.ops.function.FnOnce.call_once
                (Self := F)
                (Args := unit)
                (Trait := ℐ)))
            (M.read (| f |))
            tt)
          |)
        |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
