(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  PrintInOption.
Section PrintInOption.
  Class Trait (Self : Set) : Type := {
    print_in_option : Self -> M unit;
  }.
  
End PrintInOption.
End PrintInOption.

Module  Impl_generics_where_clauses_PrintInOption_for_T.
Section Impl_generics_where_clauses_PrintInOption_for_T.
  Context {T : Set}.
  
  Definition Self : Set := T.
  
  (*
      fn print_in_option(self) {
          println!("{:?}", Some(self));
      }
  *)
  Definition print_in_option (self : Self) : M unit :=
    ltac:(M.monadic ((
      let self := M.alloc (| self |) in
      M.read (|
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [ M.read (| mk_str "" |); M.read (| mk_str "
" |) ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_debug"]
                            (borrow
                              (M.alloc (|
                                core.option.Option.Some (M.read (| self |))
                              |))))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        M.alloc (| tt |)
      |)
    ) : unit)).
  
  Global Instance AssociatedFunction_print_in_option :
    Notations.DoubleColon Self "print_in_option" := {
    Notations.double_colon := print_in_option;
  }.
  
  Global Instance ℐ : generics_where_clauses.PrintInOption.Trait Self := {
    generics_where_clauses.PrintInOption.print_in_option := print_in_option;
  }.
End Impl_generics_where_clauses_PrintInOption_for_T.
End Impl_generics_where_clauses_PrintInOption_for_T.

(*
fn main() {
    let vec = vec![1, 2, 3];

    vec.print_in_option();
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let vec : M.Val (alloc.vec.Vec.t i32.t alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|((slice i32.t)::["into_vec"]
            (pointer_coercion
              "Unsize"
              (M.read (|
                M.call (|((alloc.boxed.Box.t _ alloc.boxed.Box.Default.A)::["new"]
                  (M.alloc (|
                    [
                      (Integer.of_Z 1) : i32.t;
                      (Integer.of_Z 2) : i32.t;
                      (Integer.of_Z 3) : i32.t
                    ]
                  |)))
                |)
              |))))
          |)
        |) in
      let _ : M.Val unit :=
        M.alloc (|
          M.call (|(ltac:(M.get_method (fun ℐ =>
              generics_where_clauses.PrintInOption.print_in_option
                (Self := alloc.vec.Vec.t i32.t alloc.alloc.Global.t)
                (Trait := ℐ)))
            (M.read (| vec |)))
          |)
        |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
