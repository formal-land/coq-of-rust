(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  ToDrop.
Section ToDrop.
  Inductive t : Set := Build.
End ToDrop.
End ToDrop.

Module  Impl_core_ops_drop_Drop_for_scoping_rules_raii_desctructor_ToDrop_t.
Section Impl_core_ops_drop_Drop_for_scoping_rules_raii_desctructor_ToDrop_t.
  Definition Self : Set := scoping_rules_raii_desctructor.ToDrop.t.
  
  (*
      fn drop(&mut self) {
          println!("ToDrop is being dropped");
      }
  *)
  Definition drop (self : mut_ref Self) : M unit :=
    ltac:(M.monadic (
      let self := M.alloc (| self |) in
      M.read (|
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_const"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [ M.read (| mk_str "ToDrop is being dropped
" |) ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        M.alloc (| tt |)
      |)
    )).
  
  Global Instance AssociatedFunction_drop :
    Notations.DoubleColon Self "drop" := {
    Notations.double_colon := drop;
  }.
  
  Global Instance ‚Ñê : core.ops.drop.Drop.Trait Self := {
    core.ops.drop.Drop.drop := drop;
  }.
End Impl_core_ops_drop_Drop_for_scoping_rules_raii_desctructor_ToDrop_t.
End Impl_core_ops_drop_Drop_for_scoping_rules_raii_desctructor_ToDrop_t.

(*
fn main() {
    let x = ToDrop;
    println!("Made a ToDrop!");
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic (
    M.read (|
      let x : M.Val scoping_rules_raii_desctructor.ToDrop.t :=
        M.alloc (| scoping_rules_raii_desctructor.ToDrop.Build |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_const"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (| [ M.read (| mk_str "Made a ToDrop!
" |) ] |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  )).
