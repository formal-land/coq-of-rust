(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let rc_examples = "Rc examples".to_string();
    {
        println!("--- rc_a is created ---");

        let rc_a: Rc<String> = Rc::new(rc_examples);
        println!("Reference Count of rc_a: {}", Rc::strong_count(&rc_a));

        {
            println!("--- rc_a is cloned to rc_b ---");

            let rc_b: Rc<String> = Rc::clone(&rc_a);
            println!("Reference Count of rc_b: {}", Rc::strong_count(&rc_b));
            println!("Reference Count of rc_a: {}", Rc::strong_count(&rc_a));

            // Two `Rc`s are equal if their inner values are equal
            println!("rc_a and rc_b are equal: {}", rc_a.eq(&rc_b));

            // We can use methods of a value directly
            println!("Length of the value inside rc_a: {}", rc_a.len());
            println!("Value of rc_b: {}", rc_b);

            println!("--- rc_b is dropped out of scope ---");
        }

        println!("Reference Count of rc_a: {}", Rc::strong_count(&rc_a));

        println!("--- rc_a is dropped out of scope ---");
    }

    // Error! `rc_examples` already moved into `rc_a`
    // And when `rc_a` is dropped, `rc_examples` is dropped together
    // println!("rc_examples: {}", rc_examples);
    // TODO ^ Try uncommenting this line
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let rc_examples : M.Val alloc.string.String.t :=
        M.alloc (|
          M.call (|(ltac:(M.get_method (fun ℐ =>
              alloc.string.ToString.to_string (Self := str.t) (Trait := ℐ)))
            (M.read (| mk_str "Rc examples" |)))
          |)
        |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_const"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [ M.read (| mk_str "--- rc_a is created ---
" |) ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let rc_a :
          M.Val (alloc.rc.Rc.t alloc.string.String.t alloc.alloc.Global.t) :=
        M.alloc (|
          M.call (|((alloc.rc.Rc.t
                alloc.string.String.t
                alloc.alloc.Global.t)::["new"]
            (M.read (| rc_examples |)))
          |)
        |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Reference Count of rc_a: " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_display"]
                          (borrow
                            (M.alloc (|
                              M.call (|((alloc.rc.Rc.t
                                    alloc.string.String.t
                                    alloc.alloc.Global.t)::["strong_count"]
                                (borrow rc_a))
                              |)
                            |))))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_const"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [ M.read (| mk_str "--- rc_a is cloned to rc_b ---
" |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let rc_b :
            M.Val (alloc.rc.Rc.t alloc.string.String.t alloc.alloc.Global.t) :=
          M.alloc (|
            M.call (|(ltac:(M.get_method (fun ℐ =>
                core.clone.Clone.clone
                  (Self :=
                    alloc.rc.Rc.t alloc.string.String.t alloc.alloc.Global.t)
                  (Trait := ℐ)))
              (borrow rc_a))
            |)
          |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.read (| mk_str "Reference Count of rc_b: " |);
                          M.read (| mk_str "
" |)
                        ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow
                              (M.alloc (|
                                M.call (|((alloc.rc.Rc.t
                                      alloc.string.String.t
                                      alloc.alloc.Global.t)::["strong_count"]
                                  (borrow rc_b))
                                |)
                              |))))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.read (| mk_str "Reference Count of rc_a: " |);
                          M.read (| mk_str "
" |)
                        ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow
                              (M.alloc (|
                                M.call (|((alloc.rc.Rc.t
                                      alloc.string.String.t
                                      alloc.alloc.Global.t)::["strong_count"]
                                  (borrow rc_a))
                                |)
                              |))))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.read (| mk_str "rc_a and rc_b are equal: " |);
                          M.read (| mk_str "
" |)
                        ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow
                              (M.alloc (|
                                M.call (|(ltac:(M.get_method (fun ℐ =>
                                    core.cmp.PartialEq.eq
                                      (Self :=
                                        alloc.rc.Rc.t
                                          alloc.string.String.t
                                          alloc.alloc.Global.t)
                                      (Rhs :=
                                        alloc.rc.Rc.t
                                          alloc.string.String.t
                                          alloc.alloc.Global.t)
                                      (Trait := ℐ)))
                                  (borrow rc_a)
                                  (borrow rc_b))
                                |)
                              |))))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.read (| mk_str "Length of the value inside rc_a: "
                          |);
                          M.read (| mk_str "
" |)
                        ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow
                              (M.alloc (|
                                M.call (|(alloc.string.String.t::["len"]
                                  (M.call (|(ltac:(M.get_method (fun ℐ =>
                                      core.ops.deref.Deref.deref
                                        (Self :=
                                          alloc.rc.Rc.t
                                            alloc.string.String.t
                                            alloc.alloc.Global.t)
                                        (Trait := ℐ)))
                                    (borrow rc_a))
                                  |)))
                                |)
                              |))))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.read (| mk_str "Value of rc_b: " |);
                          M.read (| mk_str "
" |)
                        ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow rc_b))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_const"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.read (|
                            mk_str "--- rc_b is dropped out of scope ---
"
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        M.alloc (| tt |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_v1"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "Reference Count of rc_a: " |);
                        M.read (| mk_str "
" |)
                      ]
                    |))))
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.call (|(core.fmt.rt.Argument.t::["new_display"]
                          (borrow
                            (M.alloc (|
                              M.call (|((alloc.rc.Rc.t
                                    alloc.string.String.t
                                    alloc.alloc.Global.t)::["strong_count"]
                                (borrow rc_a))
                              |)
                            |))))
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      let _ : M.Val unit :=
        let _ : M.Val unit :=
          M.alloc (|
            M.call (|(std.io.stdio._print
              (M.call (|(core.fmt.Arguments.t::["new_const"]
                (pointer_coercion
                  "Unsize"
                  (borrow
                    (M.alloc (|
                      [
                        M.read (| mk_str "--- rc_a is dropped out of scope ---
"
                        |)
                      ]
                    |)))))
              |)))
            |)
          |) in
        M.alloc (| tt |) in
      M.alloc (| tt |)
    |)
  ) : unit)).
