(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let output = Command::new("rustc")
        .arg("--version")
        .output()
        .unwrap_or_else(|e| panic!("failed to execute process: {}", e));

    if output.status.success() {
        let s = String::from_utf8_lossy(&output.stdout);

        print!("rustc succeeded and stdout was:\n{}", s);
    } else {
        let s = String::from_utf8_lossy(&output.stderr);

        print!("rustc failed and stderr was:\n{}", s);
    }
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  ltac:(M.monadic ((
    M.read (|
      let output : M.Val std.process.Output.t :=
        M.alloc (|
          M.call (|((core.result.Result.t
                std.process.Output.t
                std.io.error.Error.t)::["unwrap_or_else"]
            (M.call (|(std.process.Command.t::["output"]
              (M.call (|(std.process.Command.t::["arg"]
                (borrow_mut
                  (M.alloc (|
                    M.call (|(std.process.Command.t::["new"]
                      (M.read (| mk_str "rustc" |)))
                    |)
                  |)))
                (M.read (| mk_str "--version" |)))
              |)))
            |))
            (fun (α0 : std.io.error.Error.t) =>
              (ltac:
                (M.monadic_match_operator
                  (M.alloc (| α0 |))
                  [
                    fun γ =>
                      (let e := M.copy (| γ |) in
                      (never_to_any (B := std.process.Output.t)) (|
                        M.call (|(core.panicking.panic_fmt
                          (M.call (|(core.fmt.Arguments.t::["new_v1"]
                            (pointer_coercion
                              "Unsize"
                              (borrow
                                (M.alloc (|
                                  [
                                    M.read (|
                                      mk_str "failed to execute process: "
                                    |)
                                  ]
                                |))))
                            (pointer_coercion
                              "Unsize"
                              (borrow
                                (M.alloc (|
                                  [
                                    M.call (|(core.fmt.rt.Argument.t::["new_display"]
                                      (borrow e))
                                    |)
                                  ]
                                |)))))
                          |)))
                        |)
                      |)) :
                      std.process.Output.t
                  ])) :
              std.process.Output.t))
          |)
        |) in
      if
        M.read (|
          use
            (M.alloc (|
              M.call (|(std.process.ExitStatus.t::["success"]
                (borrow (std.process.Output.Get_status output)))
              |)
            |))
        |)
      then
        let s : M.Val (alloc.borrow.Cow.t str.t) :=
          M.alloc (|
            M.call (|(alloc.string.String.t::["from_utf8_lossy"]
              (M.call (|(ltac:(M.get_method (fun ℐ =>
                  core.ops.deref.Deref.deref
                    (Self := alloc.vec.Vec.t u8.t alloc.alloc.Global.t)
                    (Trait := ℐ)))
                (borrow (std.process.Output.Get_stdout output)))
              |)))
            |)
          |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [ M.read (| mk_str "rustc succeeded and stdout was:
" |)
                        ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow s))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        M.alloc (| tt |)
      else
        let s : M.Val (alloc.borrow.Cow.t str.t) :=
          M.alloc (|
            M.call (|(alloc.string.String.t::["from_utf8_lossy"]
              (M.call (|(ltac:(M.get_method (fun ℐ =>
                  core.ops.deref.Deref.deref
                    (Self := alloc.vec.Vec.t u8.t alloc.alloc.Global.t)
                    (Trait := ℐ)))
                (borrow (std.process.Output.Get_stderr output)))
              |)))
            |)
          |) in
        let _ : M.Val unit :=
          let _ : M.Val unit :=
            M.alloc (|
              M.call (|(std.io.stdio._print
                (M.call (|(core.fmt.Arguments.t::["new_v1"]
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [ M.read (| mk_str "rustc failed and stderr was:
" |) ]
                      |))))
                  (pointer_coercion
                    "Unsize"
                    (borrow
                      (M.alloc (|
                        [
                          M.call (|(core.fmt.rt.Argument.t::["new_display"]
                            (borrow s))
                          |)
                        ]
                      |)))))
                |)))
              |)
            |) in
          M.alloc (| tt |) in
        M.alloc (| tt |)
    |)
  ) : unit)).
