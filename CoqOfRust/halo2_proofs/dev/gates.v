(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module dev.
  Module gates.
    (* StructRecord
      {
        name := "Constraint";
        ty_params := [];
        fields :=
          [
            ("name", Ty.apply (Ty.path "&") [ Ty.path "str" ]);
            ("expression", Ty.path "alloc::string::String");
            ("queries",
              Ty.apply
                (Ty.path "alloc::collections::btree::set::BTreeSet")
                [ Ty.path "alloc::string::String"; Ty.path "alloc::alloc::Global" ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_halo2_proofs_dev_gates_Constraint.
      Definition Self : Ty.t := Ty.path "halo2_proofs::dev::gates::Constraint".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field3_finish",
                []
              |),
              [
                M.read (| f |);
                M.read (| Value.String "Constraint" |);
                M.read (| Value.String "name" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "halo2_proofs::dev::gates::Constraint",
                    "name"
                  |));
                M.read (| Value.String "expression" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "halo2_proofs::dev::gates::Constraint",
                    "expression"
                  |));
                M.read (| Value.String "queries" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.alloc (|
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "halo2_proofs::dev::gates::Constraint",
                      "queries"
                    |)
                  |))
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_halo2_proofs_dev_gates_Constraint.
    
    (* StructRecord
      {
        name := "Gate";
        ty_params := [];
        fields :=
          [
            ("name", Ty.apply (Ty.path "&") [ Ty.path "str" ]);
            ("constraints",
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                [ Ty.path "halo2_proofs::dev::gates::Constraint"; Ty.path "alloc::alloc::Global" ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_halo2_proofs_dev_gates_Gate.
      Definition Self : Ty.t := Ty.path "halo2_proofs::dev::gates::Gate".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field2_finish",
                []
              |),
              [
                M.read (| f |);
                M.read (| Value.String "Gate" |);
                M.read (| Value.String "name" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "halo2_proofs::dev::gates::Gate",
                    "name"
                  |));
                M.read (| Value.String "constraints" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.alloc (|
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "halo2_proofs::dev::gates::Gate",
                      "constraints"
                    |)
                  |))
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_halo2_proofs_dev_gates_Gate.
    
    (* StructRecord
      {
        name := "CircuitGates";
        ty_params := [];
        fields :=
          [
            ("gates",
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                [ Ty.path "halo2_proofs::dev::gates::Gate"; Ty.path "alloc::alloc::Global" ]);
            ("total_negations", Ty.path "usize");
            ("total_additions", Ty.path "usize");
            ("total_multiplications", Ty.path "usize")
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_halo2_proofs_dev_gates_CircuitGates.
      Definition Self : Ty.t := Ty.path "halo2_proofs::dev::gates::CircuitGates".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field4_finish",
                []
              |),
              [
                M.read (| f |);
                M.read (| Value.String "CircuitGates" |);
                M.read (| Value.String "gates" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "halo2_proofs::dev::gates::CircuitGates",
                    "gates"
                  |));
                M.read (| Value.String "total_negations" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "halo2_proofs::dev::gates::CircuitGates",
                    "total_negations"
                  |));
                M.read (| Value.String "total_additions" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "halo2_proofs::dev::gates::CircuitGates",
                    "total_additions"
                  |));
                M.read (| Value.String "total_multiplications" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.alloc (|
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "halo2_proofs::dev::gates::CircuitGates",
                      "total_multiplications"
                    |)
                  |))
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_halo2_proofs_dev_gates_CircuitGates.
    
    Module Impl_halo2_proofs_dev_gates_CircuitGates.
      Definition Self : Ty.t := Ty.path "halo2_proofs::dev::gates::CircuitGates".
      
      (*
          pub fn collect<F: PrimeField, C: Circuit<F>>() -> Self {
              // Collect the graph details.
              let mut cs = ConstraintSystem::default();
              let _ = C::configure(&mut cs);
      
              let gates = cs
                  .gates
                  .iter()
                  .map(|gate| Gate {
                      name: gate.name(),
                      constraints: gate
                          .polynomials()
                          .iter()
                          .enumerate()
                          .map(|(i, constraint)| Constraint {
                              name: gate.constraint_name(i),
                              expression: constraint.evaluate(
                                  &util::format_value,
                                  &|selector| format!("S{}", selector.0),
                                  &|_, column, rotation| format!("F{}@{}", column, rotation.0),
                                  &|_, column, rotation| format!("A{}@{}", column, rotation.0),
                                  &|_, column, rotation| format!("I{}@{}", column, rotation.0),
                                  &|a| {
                                      if a.contains(' ') {
                                          format!("-({})", a)
                                      } else {
                                          format!("-{}", a)
                                      }
                                  },
                                  &|a, b| {
                                      if let Some(b) = b.strip_prefix('-') {
                                          format!("{} - {}", a, b)
                                      } else {
                                          format!("{} + {}", a, b)
                                      }
                                  },
                                  &|a, b| {
                                      let a = a();
                                      let b = b();
                                      match (a.contains(' '), b.contains(' ')) {
                                          (false, false) => format!("{} * {}", a, b),
                                          (false, true) => format!("{} * ({})", a, b),
                                          (true, false) => format!("({}) * {}", a, b),
                                          (true, true) => format!("({}) * ({})", a, b),
                                      }
                                  },
                                  &|a, s| {
                                      if a.contains(' ') {
                                          format!("({}) * {}", a, util::format_value(s))
                                      } else {
                                          format!("{} * {}", a, util::format_value(s))
                                      }
                                  },
                              ),
                              queries: constraint.evaluate(
                                  &|_| BTreeSet::default(),
                                  &|selector| vec![format!("S{}", selector.0)].into_iter().collect(),
                                  &|_, column, rotation| {
                                      vec![format!("F{}@{}", column, rotation.0)]
                                          .into_iter()
                                          .collect()
                                  },
                                  &|_, column, rotation| {
                                      vec![format!("A{}@{}", column, rotation.0)]
                                          .into_iter()
                                          .collect()
                                  },
                                  &|_, column, rotation| {
                                      vec![format!("I{}@{}", column, rotation.0)]
                                          .into_iter()
                                          .collect()
                                  },
                                  &|a| a,
                                  &|mut a, mut b| {
                                      a.append(&mut b);
                                      a
                                  },
                                  &|a, b| {
                                      let mut a = a();
                                      let mut b = b();
                                      a.append(&mut b);
                                      a
                                  },
                                  &|a, _| a,
                              ),
                          })
                          .collect(),
                  })
                  .collect();
      
              let (total_negations, total_additions, total_multiplications) = cs
                  .gates
                  .iter()
                  .flat_map(|gate| {
                      gate.polynomials().iter().map(|poly| {
                          poly.evaluate(
                              &|_| (0, 0, 0),
                              &|_| (0, 0, 0),
                              &|_, _, _| (0, 0, 0),
                              &|_, _, _| (0, 0, 0),
                              &|_, _, _| (0, 0, 0),
                              &|(a_n, a_a, a_m)| (a_n + 1, a_a, a_m),
                              &|(a_n, a_a, a_m), (b_n, b_a, b_m)| (a_n + b_n, a_a + b_a + 1, a_m + b_m),
                              &|a, b| {
                                  let (a_n, a_a, a_m) = a();
                                  let (b_n, b_a, b_m) = b();
                                  (a_n + b_n, a_a + b_a, a_m + b_m + 1)
                              },
                              &|(a_n, a_a, a_m), _| (a_n, a_a, a_m + 1),
                          )
                      })
                  })
                  .fold((0, 0, 0), |(acc_n, acc_a, acc_m), (n, a, m)| {
                      (acc_n + n, acc_a + a, acc_m + m)
                  });
      
              CircuitGates {
                  gates,
                  total_negations,
                  total_additions,
                  total_multiplications,
              }
          }
      *)
      Definition collect (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [ F; C ], [] =>
          ltac:(M.monadic
            (M.read (|
              let cs :=
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |)
                |) in
              M.match_operator (|
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "halo2_proofs::plonk::circuit::Circuit",
                      C,
                      [ F ],
                      "configure",
                      []
                    |),
                    [ cs ]
                  |)
                |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let gates :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::iter::traits::iterator::Iterator",
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    [ Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Gate") [ F ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                                [ F ]
                                            ]
                                        ]
                                    ]
                                    (Ty.path "halo2_proofs::dev::gates::Gate")
                                ],
                              [],
                              "collect",
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  [
                                    Ty.path "halo2_proofs::dev::gates::Gate";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::iter::traits::iterator::Iterator",
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    [ Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Gate") [ F ]
                                    ],
                                  [],
                                  "map",
                                  [
                                    Ty.path "halo2_proofs::dev::gates::Gate";
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              [
                                                Ty.apply
                                                  (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                                  [ F ]
                                              ]
                                          ]
                                      ]
                                      (Ty.path "halo2_proofs::dev::gates::Gate")
                                  ]
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "slice")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                            [ F ]
                                        ],
                                      "iter",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_trait_method (|
                                          "core::ops::deref::Deref",
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                                [ F ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          [],
                                          "deref",
                                          []
                                        |),
                                        [
                                          M.SubPointer.get_struct_record_field (|
                                            cs,
                                            "halo2_proofs::plonk::circuit::ConstraintSystem",
                                            "gates"
                                          |)
                                        ]
                                      |)
                                    ]
                                  |);
                                  M.closure
                                    (fun γ =>
                                      ltac:(M.monadic
                                        match γ with
                                        | [ α0 ] =>
                                          M.match_operator (|
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let gate := M.copy (| γ |) in
                                                  Value.StructRecord
                                                    "halo2_proofs::dev::gates::Gate"
                                                    [
                                                      ("name",
                                                        M.call_closure (|
                                                          M.get_associated_function (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "halo2_proofs::plonk::circuit::Gate")
                                                              [ F ],
                                                            "name",
                                                            []
                                                          |),
                                                          [ M.read (| gate |) ]
                                                        |));
                                                      ("constraints",
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::iter::traits::iterator::Iterator",
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::map::Map")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::enumerate::Enumerate")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ]
                                                                      ]
                                                                  ];
                                                                Ty.function
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                  [ F ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                                  (Ty.path
                                                                    "halo2_proofs::dev::gates::Constraint")
                                                              ],
                                                            [],
                                                            "collect",
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                [
                                                                  Ty.path
                                                                    "halo2_proofs::dev::gates::Constraint";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::enumerate::Enumerate")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ]
                                                                      ]
                                                                  ],
                                                                [],
                                                                "map",
                                                                [
                                                                  Ty.path
                                                                    "halo2_proofs::dev::gates::Constraint";
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                    [ F ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.path
                                                                      "halo2_proofs::dev::gates::Constraint")
                                                                ]
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ]
                                                                      ],
                                                                    [],
                                                                    "enumerate",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ]
                                                                          ],
                                                                        "iter",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Gate")
                                                                              [ F ],
                                                                            "polynomials",
                                                                            []
                                                                          |),
                                                                          [ M.read (| gate |) ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.closure
                                                                  (fun γ =>
                                                                    ltac:(M.monadic
                                                                      match γ with
                                                                      | [ α0 ] =>
                                                                        M.match_operator (|
                                                                          M.alloc (| α0 |),
                                                                          [
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let γ0_0 :=
                                                                                  M.SubPointer.get_tuple_field (|
                                                                                    γ,
                                                                                    0
                                                                                  |) in
                                                                                let γ0_1 :=
                                                                                  M.SubPointer.get_tuple_field (|
                                                                                    γ,
                                                                                    1
                                                                                  |) in
                                                                                let i :=
                                                                                  M.copy (|
                                                                                    γ0_0
                                                                                  |) in
                                                                                let constraint :=
                                                                                  M.copy (|
                                                                                    γ0_1
                                                                                  |) in
                                                                                Value.StructRecord
                                                                                  "halo2_proofs::dev::gates::Constraint"
                                                                                  [
                                                                                    ("name",
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Gate")
                                                                                            [ F ],
                                                                                          "constraint_name",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            gate
                                                                                          |);
                                                                                          M.read (|
                                                                                            i
                                                                                          |)
                                                                                        ]
                                                                                      |));
                                                                                    ("expression",
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                            [ F ],
                                                                                          "evaluate",
                                                                                          [
                                                                                            Ty.path
                                                                                              "alloc::string::String";
                                                                                            Ty.function
                                                                                              [ F ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::plonk::circuit::Selector"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "alloc::string::String"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "alloc::string::String";
                                                                                                    Ty.path
                                                                                                      "alloc::string::String"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      [
                                                                                                        Ty.dyn
                                                                                                          [
                                                                                                            ("core::ops::function::Fn::Trait",
                                                                                                              [])
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      [
                                                                                                        Ty.dyn
                                                                                                          [
                                                                                                            ("core::ops::function::Fn::Trait",
                                                                                                              [])
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String");
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "alloc::string::String";
                                                                                                    F
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "alloc::string::String")
                                                                                          ]
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            constraint
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.get_function (|
                                                                                              "halo2_proofs::dev::util::format_value",
                                                                                              [ F ]
                                                                                            |)
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  selector :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.read (|
                                                                                                              let
                                                                                                                    res :=
                                                                                                                M.alloc (|
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_function (|
                                                                                                                      "alloc::fmt::format",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::Arguments",
                                                                                                                          "new_v1",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          (* Unsize *)
                                                                                                                          M.pointer_coercion
                                                                                                                            (M.alloc (|
                                                                                                                              Value.Array
                                                                                                                                [
                                                                                                                                  M.read (|
                                                                                                                                    Value.String
                                                                                                                                      "S"
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                            |));
                                                                                                                          (* Unsize *)
                                                                                                                          M.pointer_coercion
                                                                                                                            (M.alloc (|
                                                                                                                              Value.Array
                                                                                                                                [
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_associated_function (|
                                                                                                                                      Ty.path
                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                      "new_display",
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "usize"
                                                                                                                                      ]
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                                                        selector,
                                                                                                                                        "halo2_proofs::plonk::circuit::Selector",
                                                                                                                                        0
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                            |))
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |) in
                                                                                                              res
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1;
                                                                                                        α2
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          column :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.match_operator (|
                                                                                                                      M.alloc (|
                                                                                                                        α2
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        fun
                                                                                                                            γ =>
                                                                                                                          ltac:(M.monadic
                                                                                                                            (let
                                                                                                                                  rotation :=
                                                                                                                              M.copy (|
                                                                                                                                γ
                                                                                                                              |) in
                                                                                                                            M.read (|
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "F"
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "@"
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "usize"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      column
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "i32"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                        rotation,
                                                                                                                                                        "halo2_proofs::poly::Rotation",
                                                                                                                                                        0
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res
                                                                                                                            |)))
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1;
                                                                                                        α2
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          column :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.match_operator (|
                                                                                                                      M.alloc (|
                                                                                                                        α2
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        fun
                                                                                                                            γ =>
                                                                                                                          ltac:(M.monadic
                                                                                                                            (let
                                                                                                                                  rotation :=
                                                                                                                              M.copy (|
                                                                                                                                γ
                                                                                                                              |) in
                                                                                                                            M.read (|
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "A"
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "@"
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "usize"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      column
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "i32"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                        rotation,
                                                                                                                                                        "halo2_proofs::poly::Rotation",
                                                                                                                                                        0
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res
                                                                                                                            |)))
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1;
                                                                                                        α2
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          column :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.match_operator (|
                                                                                                                      M.alloc (|
                                                                                                                        α2
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        fun
                                                                                                                            γ =>
                                                                                                                          ltac:(M.monadic
                                                                                                                            (let
                                                                                                                                  rotation :=
                                                                                                                              M.copy (|
                                                                                                                                γ
                                                                                                                              |) in
                                                                                                                            M.read (|
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "I"
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "@"
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "usize"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      column
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "i32"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                        rotation,
                                                                                                                                                        "halo2_proofs::poly::Rotation",
                                                                                                                                                        0
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res
                                                                                                                            |)))
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.read (|
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  Value.Tuple
                                                                                                                    []
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (let
                                                                                                                            γ :=
                                                                                                                        M.use
                                                                                                                          (M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.path
                                                                                                                                  "str",
                                                                                                                                "contains",
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "char"
                                                                                                                                ]
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::ops::deref::Deref",
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::string::String",
                                                                                                                                    [],
                                                                                                                                    "deref",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    a
                                                                                                                                  ]
                                                                                                                                |);
                                                                                                                                Value.UnicodeChar
                                                                                                                                  32
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)) in
                                                                                                                      let
                                                                                                                            _ :=
                                                                                                                        M.is_constant_or_break_match (|
                                                                                                                          M.read (|
                                                                                                                            γ
                                                                                                                          |),
                                                                                                                          Value.Bool
                                                                                                                            true
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            res :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_function (|
                                                                                                                              "alloc::fmt::format",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments",
                                                                                                                                  "new_v1",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  (* Unsize *)
                                                                                                                                  M.pointer_coercion
                                                                                                                                    (M.alloc (|
                                                                                                                                      Value.Array
                                                                                                                                        [
                                                                                                                                          M.read (|
                                                                                                                                            Value.String
                                                                                                                                              "-("
                                                                                                                                          |);
                                                                                                                                          M.read (|
                                                                                                                                            Value.String
                                                                                                                                              ")"
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                    |));
                                                                                                                                  (* Unsize *)
                                                                                                                                  M.pointer_coercion
                                                                                                                                    (M.alloc (|
                                                                                                                                      Value.Array
                                                                                                                                        [
                                                                                                                                          M.call_closure (|
                                                                                                                                            M.get_associated_function (|
                                                                                                                                              Ty.path
                                                                                                                                                "core::fmt::rt::Argument",
                                                                                                                                              "new_display",
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "alloc::string::String"
                                                                                                                                              ]
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              a
                                                                                                                                            ]
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                    |))
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      res));
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (let
                                                                                                                            res :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_function (|
                                                                                                                              "alloc::fmt::format",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments",
                                                                                                                                  "new_v1",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  (* Unsize *)
                                                                                                                                  M.pointer_coercion
                                                                                                                                    (M.alloc (|
                                                                                                                                      Value.Array
                                                                                                                                        [
                                                                                                                                          M.read (|
                                                                                                                                            Value.String
                                                                                                                                              "-"
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                    |));
                                                                                                                                  (* Unsize *)
                                                                                                                                  M.pointer_coercion
                                                                                                                                    (M.alloc (|
                                                                                                                                      Value.Array
                                                                                                                                        [
                                                                                                                                          M.call_closure (|
                                                                                                                                            M.get_associated_function (|
                                                                                                                                              Ty.path
                                                                                                                                                "core::fmt::rt::Argument",
                                                                                                                                              "new_display",
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "alloc::string::String"
                                                                                                                                              ]
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              a
                                                                                                                                            ]
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                    |))
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      res))
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          b :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.read (|
                                                                                                                      M.match_operator (|
                                                                                                                        M.alloc (|
                                                                                                                          Value.Tuple
                                                                                                                            []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    γ :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_associated_function (|
                                                                                                                                      Ty.path
                                                                                                                                        "str",
                                                                                                                                      "strip_prefix",
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "char"
                                                                                                                                      ]
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "core::ops::deref::Deref",
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::string::String",
                                                                                                                                          [],
                                                                                                                                          "deref",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          b
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      Value.UnicodeChar
                                                                                                                                        45
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    γ0_0 :=
                                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  "core::option::Option::Some",
                                                                                                                                  0
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    b :=
                                                                                                                                M.copy (|
                                                                                                                                  γ0_0
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ""
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      " - "
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "&")
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "str"
                                                                                                                                                          ]
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      b
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res));
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ""
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      " + "
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      b
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res))
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          b :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.read (|
                                                                                                                      let
                                                                                                                            a :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_trait_method (|
                                                                                                                              "core::ops::function::Fn",
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("core::ops::function::Fn::Trait",
                                                                                                                                    [])
                                                                                                                                ],
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  []
                                                                                                                              ],
                                                                                                                              "call",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                a
                                                                                                                              |);
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            b :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_trait_method (|
                                                                                                                              "core::ops::function::Fn",
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("core::ops::function::Fn::Trait",
                                                                                                                                    [])
                                                                                                                                ],
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  []
                                                                                                                              ],
                                                                                                                              "call",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                b
                                                                                                                              |);
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      M.match_operator (|
                                                                                                                        M.alloc (|
                                                                                                                          Value.Tuple
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "str",
                                                                                                                                  "contains",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "char"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_trait_method (|
                                                                                                                                      "core::ops::deref::Deref",
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::string::String",
                                                                                                                                      [],
                                                                                                                                      "deref",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      a
                                                                                                                                    ]
                                                                                                                                  |);
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "str",
                                                                                                                                  "contains",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "char"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_trait_method (|
                                                                                                                                      "core::ops::deref::Deref",
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::string::String",
                                                                                                                                      [],
                                                                                                                                      "deref",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      b
                                                                                                                                    ]
                                                                                                                                  |);
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    γ0_0 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  0
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    γ0_1 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  1
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_0
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    false
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_1
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    false
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ""
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      " * "
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      b
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res));
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    γ0_0 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  0
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    γ0_1 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  1
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_0
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    false
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_1
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    true
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ""
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      " * ("
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ")"
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      b
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res));
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    γ0_0 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  0
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    γ0_1 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  1
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_0
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    true
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_1
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    false
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "("
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ") * "
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      b
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res));
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    γ0_0 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  0
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    γ0_1 :=
                                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                                  γ,
                                                                                                                                  1
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_0
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    true
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ0_1
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    true
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "("
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ") * ("
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ")"
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      b
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res))
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          s :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.read (|
                                                                                                                      M.match_operator (|
                                                                                                                        M.alloc (|
                                                                                                                          Value.Tuple
                                                                                                                            []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    γ :=
                                                                                                                                M.use
                                                                                                                                  (M.alloc (|
                                                                                                                                    M.call_closure (|
                                                                                                                                      M.get_associated_function (|
                                                                                                                                        Ty.path
                                                                                                                                          "str",
                                                                                                                                        "contains",
                                                                                                                                        [
                                                                                                                                          Ty.path
                                                                                                                                            "char"
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        M.call_closure (|
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "core::ops::deref::Deref",
                                                                                                                                            Ty.path
                                                                                                                                              "alloc::string::String",
                                                                                                                                            [],
                                                                                                                                            "deref",
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            a
                                                                                                                                          ]
                                                                                                                                        |);
                                                                                                                                        Value.UnicodeChar
                                                                                                                                          32
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  |)) in
                                                                                                                              let
                                                                                                                                    _ :=
                                                                                                                                M.is_constant_or_break_match (|
                                                                                                                                  M.read (|
                                                                                                                                    γ
                                                                                                                                  |),
                                                                                                                                  Value.Bool
                                                                                                                                    true
                                                                                                                                |) in
                                                                                                                              let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      "("
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ") * "
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.alloc (|
                                                                                                                                                        M.call_closure (|
                                                                                                                                                          M.get_function (|
                                                                                                                                                            "halo2_proofs::dev::util::format_value",
                                                                                                                                                            [
                                                                                                                                                              F
                                                                                                                                                            ]
                                                                                                                                                          |),
                                                                                                                                                          [
                                                                                                                                                            M.read (|
                                                                                                                                                              s
                                                                                                                                                            |)
                                                                                                                                                          ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res));
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    res :=
                                                                                                                                M.alloc (|
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_function (|
                                                                                                                                      "alloc::fmt::format",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      ""
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    Value.String
                                                                                                                                                      " * "
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |));
                                                                                                                                          (* Unsize *)
                                                                                                                                          M.pointer_coercion
                                                                                                                                            (M.alloc (|
                                                                                                                                              Value.Array
                                                                                                                                                [
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      a
                                                                                                                                                    ]
                                                                                                                                                  |);
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument",
                                                                                                                                                      "new_display",
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.alloc (|
                                                                                                                                                        M.call_closure (|
                                                                                                                                                          M.get_function (|
                                                                                                                                                            "halo2_proofs::dev::util::format_value",
                                                                                                                                                            [
                                                                                                                                                              F
                                                                                                                                                            ]
                                                                                                                                                          |),
                                                                                                                                                          [
                                                                                                                                                            M.read (|
                                                                                                                                                              s
                                                                                                                                                            |)
                                                                                                                                                          ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                            |))
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |) in
                                                                                                                              res))
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |)
                                                                                        ]
                                                                                      |));
                                                                                    ("queries",
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                            [ F ],
                                                                                          "evaluate",
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::collections::btree::set::BTreeSet")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "alloc::string::String";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ];
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    F
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::plonk::circuit::Selector"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::collections::btree::set::BTreeSet")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::collections::btree::set::BTreeSet")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::collections::btree::set::BTreeSet")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      [
                                                                                                        Ty.dyn
                                                                                                          [
                                                                                                            ("core::ops::function::Fn::Trait",
                                                                                                              [])
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      [
                                                                                                        Ty.dyn
                                                                                                          [
                                                                                                            ("core::ops::function::Fn::Trait",
                                                                                                              [])
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]);
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::collections::btree::set::BTreeSet")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ];
                                                                                                    F
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ])
                                                                                          ]
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            constraint
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::default::Default",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::collections::btree::set::BTreeSet")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "alloc::string::String";
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ],
                                                                                                                [],
                                                                                                                "default",
                                                                                                                []
                                                                                                              |),
                                                                                                              []
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  selector :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::into_iter::IntoIter")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "alloc::string::String";
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ],
                                                                                                                [],
                                                                                                                "collect",
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::collections::btree::set::BTreeSet")
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "alloc::string::String";
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::iter::traits::collect::IntoIterator",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "alloc::string::String";
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ],
                                                                                                                    [],
                                                                                                                    "into_iter",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "alloc::string::String"
                                                                                                                          ],
                                                                                                                        "into_vec",
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        (* Unsize *)
                                                                                                                        M.pointer_coercion
                                                                                                                          (M.read (|
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::boxed::Box")
                                                                                                                                  [
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "array")
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::string::String"
                                                                                                                                      ];
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ],
                                                                                                                                "new",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        let
                                                                                                                                              res :=
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_function (|
                                                                                                                                                "alloc::fmt::format",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.call_closure (|
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "core::fmt::Arguments",
                                                                                                                                                    "new_v1",
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    (* Unsize *)
                                                                                                                                                    M.pointer_coercion
                                                                                                                                                      (M.alloc (|
                                                                                                                                                        Value.Array
                                                                                                                                                          [
                                                                                                                                                            M.read (|
                                                                                                                                                              Value.String
                                                                                                                                                                "S"
                                                                                                                                                            |)
                                                                                                                                                          ]
                                                                                                                                                      |));
                                                                                                                                                    (* Unsize *)
                                                                                                                                                    M.pointer_coercion
                                                                                                                                                      (M.alloc (|
                                                                                                                                                        Value.Array
                                                                                                                                                          [
                                                                                                                                                            M.call_closure (|
                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                Ty.path
                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                "new_display",
                                                                                                                                                                [
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "usize"
                                                                                                                                                                ]
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                  selector,
                                                                                                                                                                  "halo2_proofs::plonk::circuit::Selector",
                                                                                                                                                                  0
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                            |)
                                                                                                                                                          ]
                                                                                                                                                      |))
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |) in
                                                                                                                                        res
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |))
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1;
                                                                                                        α2
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          column :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.match_operator (|
                                                                                                                      M.alloc (|
                                                                                                                        α2
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        fun
                                                                                                                            γ =>
                                                                                                                          ltac:(M.monadic
                                                                                                                            (let
                                                                                                                                  rotation :=
                                                                                                                              M.copy (|
                                                                                                                                γ
                                                                                                                              |) in
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::into_iter::IntoIter")
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::string::String";
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ],
                                                                                                                                [],
                                                                                                                                "collect",
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::collections::btree::set::BTreeSet")
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::string::String";
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::iter::traits::collect::IntoIterator",
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::string::String";
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ],
                                                                                                                                    [],
                                                                                                                                    "into_iter",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    M.call_closure (|
                                                                                                                                      M.get_associated_function (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "slice")
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "alloc::string::String"
                                                                                                                                          ],
                                                                                                                                        "into_vec",
                                                                                                                                        [
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        (* Unsize *)
                                                                                                                                        M.pointer_coercion
                                                                                                                                          (M.read (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "alloc::boxed::Box")
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "array")
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ];
                                                                                                                                                    Ty.path
                                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                                  ],
                                                                                                                                                "new",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.alloc (|
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      M.read (|
                                                                                                                                                        let
                                                                                                                                                              res :=
                                                                                                                                                          M.alloc (|
                                                                                                                                                            M.call_closure (|
                                                                                                                                                              M.get_function (|
                                                                                                                                                                "alloc::fmt::format",
                                                                                                                                                                []
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                                    Ty.path
                                                                                                                                                                      "core::fmt::Arguments",
                                                                                                                                                                    "new_v1",
                                                                                                                                                                    []
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    (* Unsize *)
                                                                                                                                                                    M.pointer_coercion
                                                                                                                                                                      (M.alloc (|
                                                                                                                                                                        Value.Array
                                                                                                                                                                          [
                                                                                                                                                                            M.read (|
                                                                                                                                                                              Value.String
                                                                                                                                                                                "F"
                                                                                                                                                                            |);
                                                                                                                                                                            M.read (|
                                                                                                                                                                              Value.String
                                                                                                                                                                                "@"
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                      |));
                                                                                                                                                                    (* Unsize *)
                                                                                                                                                                    M.pointer_coercion
                                                                                                                                                                      (M.alloc (|
                                                                                                                                                                        Value.Array
                                                                                                                                                                          [
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                                "new_display",
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "usize"
                                                                                                                                                                                ]
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                column
                                                                                                                                                                              ]
                                                                                                                                                                            |);
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                                "new_display",
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "i32"
                                                                                                                                                                                ]
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                                  rotation,
                                                                                                                                                                                  "halo2_proofs::poly::Rotation",
                                                                                                                                                                                  0
                                                                                                                                                                                |)
                                                                                                                                                                              ]
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                      |))
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                            |)
                                                                                                                                                          |) in
                                                                                                                                                        res
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |))
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)))
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1;
                                                                                                        α2
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          column :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.match_operator (|
                                                                                                                      M.alloc (|
                                                                                                                        α2
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        fun
                                                                                                                            γ =>
                                                                                                                          ltac:(M.monadic
                                                                                                                            (let
                                                                                                                                  rotation :=
                                                                                                                              M.copy (|
                                                                                                                                γ
                                                                                                                              |) in
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::into_iter::IntoIter")
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::string::String";
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ],
                                                                                                                                [],
                                                                                                                                "collect",
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::collections::btree::set::BTreeSet")
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::string::String";
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::iter::traits::collect::IntoIterator",
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::string::String";
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ],
                                                                                                                                    [],
                                                                                                                                    "into_iter",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    M.call_closure (|
                                                                                                                                      M.get_associated_function (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "slice")
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "alloc::string::String"
                                                                                                                                          ],
                                                                                                                                        "into_vec",
                                                                                                                                        [
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        (* Unsize *)
                                                                                                                                        M.pointer_coercion
                                                                                                                                          (M.read (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "alloc::boxed::Box")
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "array")
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ];
                                                                                                                                                    Ty.path
                                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                                  ],
                                                                                                                                                "new",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.alloc (|
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      M.read (|
                                                                                                                                                        let
                                                                                                                                                              res :=
                                                                                                                                                          M.alloc (|
                                                                                                                                                            M.call_closure (|
                                                                                                                                                              M.get_function (|
                                                                                                                                                                "alloc::fmt::format",
                                                                                                                                                                []
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                                    Ty.path
                                                                                                                                                                      "core::fmt::Arguments",
                                                                                                                                                                    "new_v1",
                                                                                                                                                                    []
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    (* Unsize *)
                                                                                                                                                                    M.pointer_coercion
                                                                                                                                                                      (M.alloc (|
                                                                                                                                                                        Value.Array
                                                                                                                                                                          [
                                                                                                                                                                            M.read (|
                                                                                                                                                                              Value.String
                                                                                                                                                                                "A"
                                                                                                                                                                            |);
                                                                                                                                                                            M.read (|
                                                                                                                                                                              Value.String
                                                                                                                                                                                "@"
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                      |));
                                                                                                                                                                    (* Unsize *)
                                                                                                                                                                    M.pointer_coercion
                                                                                                                                                                      (M.alloc (|
                                                                                                                                                                        Value.Array
                                                                                                                                                                          [
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                                "new_display",
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "usize"
                                                                                                                                                                                ]
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                column
                                                                                                                                                                              ]
                                                                                                                                                                            |);
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                                "new_display",
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "i32"
                                                                                                                                                                                ]
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                                  rotation,
                                                                                                                                                                                  "halo2_proofs::poly::Rotation",
                                                                                                                                                                                  0
                                                                                                                                                                                |)
                                                                                                                                                                              ]
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                      |))
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                            |)
                                                                                                                                                          |) in
                                                                                                                                                        res
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |))
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)))
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1;
                                                                                                        α2
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          column :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.match_operator (|
                                                                                                                      M.alloc (|
                                                                                                                        α2
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        fun
                                                                                                                            γ =>
                                                                                                                          ltac:(M.monadic
                                                                                                                            (let
                                                                                                                                  rotation :=
                                                                                                                              M.copy (|
                                                                                                                                γ
                                                                                                                              |) in
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::into_iter::IntoIter")
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::string::String";
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ],
                                                                                                                                [],
                                                                                                                                "collect",
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::collections::btree::set::BTreeSet")
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::string::String";
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::iter::traits::collect::IntoIterator",
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::string::String";
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ],
                                                                                                                                    [],
                                                                                                                                    "into_iter",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    M.call_closure (|
                                                                                                                                      M.get_associated_function (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "slice")
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "alloc::string::String"
                                                                                                                                          ],
                                                                                                                                        "into_vec",
                                                                                                                                        [
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        (* Unsize *)
                                                                                                                                        M.pointer_coercion
                                                                                                                                          (M.read (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "alloc::boxed::Box")
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "array")
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::string::String"
                                                                                                                                                      ];
                                                                                                                                                    Ty.path
                                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                                  ],
                                                                                                                                                "new",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.alloc (|
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      M.read (|
                                                                                                                                                        let
                                                                                                                                                              res :=
                                                                                                                                                          M.alloc (|
                                                                                                                                                            M.call_closure (|
                                                                                                                                                              M.get_function (|
                                                                                                                                                                "alloc::fmt::format",
                                                                                                                                                                []
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                                    Ty.path
                                                                                                                                                                      "core::fmt::Arguments",
                                                                                                                                                                    "new_v1",
                                                                                                                                                                    []
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    (* Unsize *)
                                                                                                                                                                    M.pointer_coercion
                                                                                                                                                                      (M.alloc (|
                                                                                                                                                                        Value.Array
                                                                                                                                                                          [
                                                                                                                                                                            M.read (|
                                                                                                                                                                              Value.String
                                                                                                                                                                                "I"
                                                                                                                                                                            |);
                                                                                                                                                                            M.read (|
                                                                                                                                                                              Value.String
                                                                                                                                                                                "@"
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                      |));
                                                                                                                                                                    (* Unsize *)
                                                                                                                                                                    M.pointer_coercion
                                                                                                                                                                      (M.alloc (|
                                                                                                                                                                        Value.Array
                                                                                                                                                                          [
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                                "new_display",
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "usize"
                                                                                                                                                                                ]
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                column
                                                                                                                                                                              ]
                                                                                                                                                                            |);
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              M.get_associated_function (|
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                                "new_display",
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "i32"
                                                                                                                                                                                ]
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                                  rotation,
                                                                                                                                                                                  "halo2_proofs::poly::Rotation",
                                                                                                                                                                                  0
                                                                                                                                                                                |)
                                                                                                                                                                              ]
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                      |))
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                            |)
                                                                                                                                                          |) in
                                                                                                                                                        res
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |))
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)))
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.read (|
                                                                                                              a
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          b :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.read (|
                                                                                                                      let
                                                                                                                            _ :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::string::String";
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ],
                                                                                                                              "append",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              a;
                                                                                                                              b
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      a
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          b :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.read (|
                                                                                                                      let
                                                                                                                            a :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_trait_method (|
                                                                                                                              "core::ops::function::Fn",
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("core::ops::function::Fn::Trait",
                                                                                                                                    [])
                                                                                                                                ],
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  []
                                                                                                                              ],
                                                                                                                              "call",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                a
                                                                                                                              |);
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            b :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_trait_method (|
                                                                                                                              "core::ops::function::Fn",
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("core::ops::function::Fn::Trait",
                                                                                                                                    [])
                                                                                                                                ],
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  []
                                                                                                                              ],
                                                                                                                              "call",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                b
                                                                                                                              |);
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            _ :=
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::string::String";
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ],
                                                                                                                              "append",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              a;
                                                                                                                              b
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |) in
                                                                                                                      a
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |);
                                                                                          M.alloc (|
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0;
                                                                                                        α1
                                                                                                      ] =>
                                                                                                    M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α0
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  a :=
                                                                                                              M.copy (|
                                                                                                                γ
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              M.alloc (|
                                                                                                                α1
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (M.read (|
                                                                                                                      a
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  | _ =>
                                                                                                    M.impossible (||)
                                                                                                  end))
                                                                                          |)
                                                                                        ]
                                                                                      |))
                                                                                  ]))
                                                                          ]
                                                                        |)
                                                                      | _ => M.impossible (||)
                                                                      end))
                                                              ]
                                                            |)
                                                          ]
                                                        |))
                                                    ]))
                                            ]
                                          |)
                                        | _ => M.impossible (||)
                                        end))
                                ]
                              |)
                            ]
                          |)
                        |) in
                      M.match_operator (|
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::iter::traits::iterator::Iterator",
                              Ty.apply
                                (Ty.path "core::iter::adapters::flatten::FlatMap")
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    [ Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Gate") [ F ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                            [ F ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "halo2_proofs::plonk::circuit::Expression")
                                                    [ F ]
                                                ]
                                            ]
                                        ]
                                        (Ty.tuple
                                          [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ])
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                                [ F ]
                                            ]
                                        ]
                                    ]
                                    (Ty.apply
                                      (Ty.path "core::iter::adapters::map::Map")
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          [
                                            Ty.apply
                                              (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                              [ F ]
                                          ];
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "halo2_proofs::plonk::circuit::Expression")
                                                      [ F ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.tuple
                                            [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ])
                                      ])
                                ],
                              [],
                              "fold",
                              [
                                Ty.tuple [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.tuple
                                          [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ];
                                        Ty.tuple
                                          [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ]
                                      ]
                                  ]
                                  (Ty.tuple [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ])
                              ]
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::iter::traits::iterator::Iterator",
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    [ Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Gate") [ F ]
                                    ],
                                  [],
                                  "flat_map",
                                  [
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::map::Map")
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          [
                                            Ty.apply
                                              (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                              [ F ]
                                          ];
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "halo2_proofs::plonk::circuit::Expression")
                                                      [ F ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.tuple
                                            [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ])
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              [
                                                Ty.apply
                                                  (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                                  [ F ]
                                              ]
                                          ]
                                      ]
                                      (Ty.apply
                                        (Ty.path "core::iter::adapters::map::Map")
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                                [ F ]
                                            ];
                                          Ty.function
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::plonk::circuit::Expression")
                                                        [ F ]
                                                    ]
                                                ]
                                            ]
                                            (Ty.tuple
                                              [ Ty.path "usize"; Ty.path "usize"; Ty.path "usize" ])
                                        ])
                                  ]
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "slice")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                            [ F ]
                                        ],
                                      "iter",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_trait_method (|
                                          "core::ops::deref::Deref",
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::plonk::circuit::Gate")
                                                [ F ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          [],
                                          "deref",
                                          []
                                        |),
                                        [
                                          M.SubPointer.get_struct_record_field (|
                                            cs,
                                            "halo2_proofs::plonk::circuit::ConstraintSystem",
                                            "gates"
                                          |)
                                        ]
                                      |)
                                    ]
                                  |);
                                  M.closure
                                    (fun γ =>
                                      ltac:(M.monadic
                                        match γ with
                                        | [ α0 ] =>
                                          M.match_operator (|
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let gate := M.copy (| γ |) in
                                                  M.call_closure (|
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::plonk::circuit::Expression")
                                                            [ F ]
                                                        ],
                                                      [],
                                                      "map",
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.path "usize";
                                                            Ty.path "usize";
                                                            Ty.path "usize"
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.tuple
                                                            [
                                                              Ty.path "usize";
                                                              Ty.path "usize";
                                                              Ty.path "usize"
                                                            ])
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ],
                                                          "iter",
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Gate")
                                                                [ F ],
                                                              "polynomials",
                                                              []
                                                            |),
                                                            [ M.read (| gate |) ]
                                                          |)
                                                        ]
                                                      |);
                                                      M.closure
                                                        (fun γ =>
                                                          ltac:(M.monadic
                                                            match γ with
                                                            | [ α0 ] =>
                                                              M.match_operator (|
                                                                M.alloc (| α0 |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let poly := M.copy (| γ |) in
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ],
                                                                          "evaluate",
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.path "usize";
                                                                                Ty.path "usize"
                                                                              ];
                                                                            Ty.function
                                                                              [ Ty.tuple [ F ] ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::circuit::Selector"
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.path "usize";
                                                                                    Ty.path
                                                                                      "halo2_proofs::poly::Rotation"
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.path "usize";
                                                                                    Ty.path
                                                                                      "halo2_proofs::poly::Rotation"
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.path "usize";
                                                                                    Ty.path
                                                                                      "halo2_proofs::poly::Rotation"
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ];
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      [
                                                                                        Ty.dyn
                                                                                          [
                                                                                            ("core::ops::function::Fn::Trait",
                                                                                              [])
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      [
                                                                                        Ty.dyn
                                                                                          [
                                                                                            ("core::ops::function::Fn::Trait",
                                                                                              [])
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ]);
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ];
                                                                                    F
                                                                                  ]
                                                                              ]
                                                                              (Ty.tuple
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize";
                                                                                  Ty.path "usize"
                                                                                ])
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.read (| poly |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (Value.Tuple
                                                                                              [
                                                                                                Value.Integer
                                                                                                  0;
                                                                                                Value.Integer
                                                                                                  0;
                                                                                                Value.Integer
                                                                                                  0
                                                                                              ]))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (Value.Tuple
                                                                                              [
                                                                                                Value.Integer
                                                                                                  0;
                                                                                                Value.Integer
                                                                                                  0;
                                                                                                Value.Integer
                                                                                                  0
                                                                                              ]))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1; α2
                                                                                      ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α2
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (Value.Tuple
                                                                                                              [
                                                                                                                Value.Integer
                                                                                                                  0;
                                                                                                                Value.Integer
                                                                                                                  0;
                                                                                                                Value.Integer
                                                                                                                  0
                                                                                                              ]))
                                                                                                      ]
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1; α2
                                                                                      ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α2
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (Value.Tuple
                                                                                                              [
                                                                                                                Value.Integer
                                                                                                                  0;
                                                                                                                Value.Integer
                                                                                                                  0;
                                                                                                                Value.Integer
                                                                                                                  0
                                                                                                              ]))
                                                                                                      ]
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1; α2
                                                                                      ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (M.match_operator (|
                                                                                                      M.alloc (|
                                                                                                        α2
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (Value.Tuple
                                                                                                              [
                                                                                                                Value.Integer
                                                                                                                  0;
                                                                                                                Value.Integer
                                                                                                                  0;
                                                                                                                Value.Integer
                                                                                                                  0
                                                                                                              ]))
                                                                                                      ]
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  γ0_0 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                0
                                                                                              |) in
                                                                                            let
                                                                                                  γ0_1 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                1
                                                                                              |) in
                                                                                            let
                                                                                                  γ0_2 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                2
                                                                                              |) in
                                                                                            let
                                                                                                  a_n :=
                                                                                              M.copy (|
                                                                                                γ0_0
                                                                                              |) in
                                                                                            let
                                                                                                  a_a :=
                                                                                              M.copy (|
                                                                                                γ0_1
                                                                                              |) in
                                                                                            let
                                                                                                  a_m :=
                                                                                              M.copy (|
                                                                                                γ0_2
                                                                                              |) in
                                                                                            Value.Tuple
                                                                                              [
                                                                                                BinOp.Panic.add (|
                                                                                                  Integer.Usize,
                                                                                                  M.read (|
                                                                                                    a_n
                                                                                                  |),
                                                                                                  Value.Integer
                                                                                                    1
                                                                                                |);
                                                                                                M.read (|
                                                                                                  a_a
                                                                                                |);
                                                                                                M.read (|
                                                                                                  a_m
                                                                                                |)
                                                                                              ]))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  γ0_0 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                0
                                                                                              |) in
                                                                                            let
                                                                                                  γ0_1 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                1
                                                                                              |) in
                                                                                            let
                                                                                                  γ0_2 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                2
                                                                                              |) in
                                                                                            let
                                                                                                  a_n :=
                                                                                              M.copy (|
                                                                                                γ0_0
                                                                                              |) in
                                                                                            let
                                                                                                  a_a :=
                                                                                              M.copy (|
                                                                                                γ0_1
                                                                                              |) in
                                                                                            let
                                                                                                  a_m :=
                                                                                              M.copy (|
                                                                                                γ0_2
                                                                                              |) in
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ0_0 :=
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        γ,
                                                                                                        0
                                                                                                      |) in
                                                                                                    let
                                                                                                          γ0_1 :=
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        γ,
                                                                                                        1
                                                                                                      |) in
                                                                                                    let
                                                                                                          γ0_2 :=
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        γ,
                                                                                                        2
                                                                                                      |) in
                                                                                                    let
                                                                                                          b_n :=
                                                                                                      M.copy (|
                                                                                                        γ0_0
                                                                                                      |) in
                                                                                                    let
                                                                                                          b_a :=
                                                                                                      M.copy (|
                                                                                                        γ0_1
                                                                                                      |) in
                                                                                                    let
                                                                                                          b_m :=
                                                                                                      M.copy (|
                                                                                                        γ0_2
                                                                                                      |) in
                                                                                                    Value.Tuple
                                                                                                      [
                                                                                                        BinOp.Panic.add (|
                                                                                                          Integer.Usize,
                                                                                                          M.read (|
                                                                                                            a_n
                                                                                                          |),
                                                                                                          M.read (|
                                                                                                            b_n
                                                                                                          |)
                                                                                                        |);
                                                                                                        BinOp.Panic.add (|
                                                                                                          Integer.Usize,
                                                                                                          BinOp.Panic.add (|
                                                                                                            Integer.Usize,
                                                                                                            M.read (|
                                                                                                              a_a
                                                                                                            |),
                                                                                                            M.read (|
                                                                                                              b_a
                                                                                                            |)
                                                                                                          |),
                                                                                                          Value.Integer
                                                                                                            1
                                                                                                        |);
                                                                                                        BinOp.Panic.add (|
                                                                                                          Integer.Usize,
                                                                                                          M.read (|
                                                                                                            a_m
                                                                                                          |),
                                                                                                          M.read (|
                                                                                                            b_m
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  a :=
                                                                                              M.copy (|
                                                                                                γ
                                                                                              |) in
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          b :=
                                                                                                      M.copy (|
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.read (|
                                                                                                      M.match_operator (|
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.dyn
                                                                                                                [
                                                                                                                  ("core::ops::function::Fn::Trait",
                                                                                                                    [])
                                                                                                                ],
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                a
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ0_0 :=
                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                  γ,
                                                                                                                  0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    γ0_1 :=
                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                  γ,
                                                                                                                  1
                                                                                                                |) in
                                                                                                              let
                                                                                                                    γ0_2 :=
                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                  γ,
                                                                                                                  2
                                                                                                                |) in
                                                                                                              let
                                                                                                                    a_n :=
                                                                                                                M.copy (|
                                                                                                                  γ0_0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    a_a :=
                                                                                                                M.copy (|
                                                                                                                  γ0_1
                                                                                                                |) in
                                                                                                              let
                                                                                                                    a_m :=
                                                                                                                M.copy (|
                                                                                                                  γ0_2
                                                                                                                |) in
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::function::Fn",
                                                                                                                      Ty.dyn
                                                                                                                        [
                                                                                                                          ("core::ops::function::Fn::Trait",
                                                                                                                            [])
                                                                                                                        ],
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          []
                                                                                                                      ],
                                                                                                                      "call",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        b
                                                                                                                      |);
                                                                                                                      Value.Tuple
                                                                                                                        []
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (let
                                                                                                                            γ0_0 :=
                                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                                          γ,
                                                                                                                          0
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            γ0_1 :=
                                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                                          γ,
                                                                                                                          1
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            γ0_2 :=
                                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                                          γ,
                                                                                                                          2
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            b_n :=
                                                                                                                        M.copy (|
                                                                                                                          γ0_0
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            b_a :=
                                                                                                                        M.copy (|
                                                                                                                          γ0_1
                                                                                                                        |) in
                                                                                                                      let
                                                                                                                            b_m :=
                                                                                                                        M.copy (|
                                                                                                                          γ0_2
                                                                                                                        |) in
                                                                                                                      M.alloc (|
                                                                                                                        Value.Tuple
                                                                                                                          [
                                                                                                                            BinOp.Panic.add (|
                                                                                                                              Integer.Usize,
                                                                                                                              M.read (|
                                                                                                                                a_n
                                                                                                                              |),
                                                                                                                              M.read (|
                                                                                                                                b_n
                                                                                                                              |)
                                                                                                                            |);
                                                                                                                            BinOp.Panic.add (|
                                                                                                                              Integer.Usize,
                                                                                                                              M.read (|
                                                                                                                                a_a
                                                                                                                              |),
                                                                                                                              M.read (|
                                                                                                                                b_a
                                                                                                                              |)
                                                                                                                            |);
                                                                                                                            BinOp.Panic.add (|
                                                                                                                              Integer.Usize,
                                                                                                                              BinOp.Panic.add (|
                                                                                                                                Integer.Usize,
                                                                                                                                M.read (|
                                                                                                                                  a_m
                                                                                                                                |),
                                                                                                                                M.read (|
                                                                                                                                  b_m
                                                                                                                                |)
                                                                                                                              |),
                                                                                                                              Value.Integer
                                                                                                                                1
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                      |)))
                                                                                                                ]
                                                                                                              |)))
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |);
                                                                          M.alloc (|
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  γ0_0 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                0
                                                                                              |) in
                                                                                            let
                                                                                                  γ0_1 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                1
                                                                                              |) in
                                                                                            let
                                                                                                  γ0_2 :=
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                γ,
                                                                                                2
                                                                                              |) in
                                                                                            let
                                                                                                  a_n :=
                                                                                              M.copy (|
                                                                                                γ0_0
                                                                                              |) in
                                                                                            let
                                                                                                  a_a :=
                                                                                              M.copy (|
                                                                                                γ0_1
                                                                                              |) in
                                                                                            let
                                                                                                  a_m :=
                                                                                              M.copy (|
                                                                                                γ0_2
                                                                                              |) in
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (Value.Tuple
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          a_n
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          a_a
                                                                                                        |);
                                                                                                        BinOp.Panic.add (|
                                                                                                          Integer.Usize,
                                                                                                          M.read (|
                                                                                                            a_m
                                                                                                          |),
                                                                                                          Value.Integer
                                                                                                            1
                                                                                                        |)
                                                                                                      ]))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          |)
                                                                        ]
                                                                      |)))
                                                                ]
                                                              |)
                                                            | _ => M.impossible (||)
                                                            end))
                                                    ]
                                                  |)))
                                            ]
                                          |)
                                        | _ => M.impossible (||)
                                        end))
                                ]
                              |);
                              Value.Tuple [ Value.Integer 0; Value.Integer 0; Value.Integer 0 ];
                              M.closure
                                (fun γ =>
                                  ltac:(M.monadic
                                    match γ with
                                    | [ α0; α1 ] =>
                                      M.match_operator (|
                                        M.alloc (| α0 |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let γ0_0 :=
                                                M.SubPointer.get_tuple_field (| γ, 0 |) in
                                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                              let γ0_2 := M.SubPointer.get_tuple_field (| γ, 2 |) in
                                              let acc_n := M.copy (| γ0_0 |) in
                                              let acc_a := M.copy (| γ0_1 |) in
                                              let acc_m := M.copy (| γ0_2 |) in
                                              M.match_operator (|
                                                M.alloc (| α1 |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let γ0_2 :=
                                                        M.SubPointer.get_tuple_field (| γ, 2 |) in
                                                      let n := M.copy (| γ0_0 |) in
                                                      let a := M.copy (| γ0_1 |) in
                                                      let m := M.copy (| γ0_2 |) in
                                                      Value.Tuple
                                                        [
                                                          BinOp.Panic.add (|
                                                            Integer.Usize,
                                                            M.read (| acc_n |),
                                                            M.read (| n |)
                                                          |);
                                                          BinOp.Panic.add (|
                                                            Integer.Usize,
                                                            M.read (| acc_a |),
                                                            M.read (| a |)
                                                          |);
                                                          BinOp.Panic.add (|
                                                            Integer.Usize,
                                                            M.read (| acc_m |),
                                                            M.read (| m |)
                                                          |)
                                                        ]))
                                                ]
                                              |)))
                                        ]
                                      |)
                                    | _ => M.impossible (||)
                                    end))
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let γ0_2 := M.SubPointer.get_tuple_field (| γ, 2 |) in
                              let total_negations := M.copy (| γ0_0 |) in
                              let total_additions := M.copy (| γ0_1 |) in
                              let total_multiplications := M.copy (| γ0_2 |) in
                              M.alloc (|
                                Value.StructRecord
                                  "halo2_proofs::dev::gates::CircuitGates"
                                  [
                                    ("gates", M.read (| gates |));
                                    ("total_negations", M.read (| total_negations |));
                                    ("total_additions", M.read (| total_additions |));
                                    ("total_multiplications", M.read (| total_multiplications |))
                                  ]
                              |)))
                        ]
                      |)))
                ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_collect : M.IsAssociatedFunction Self "collect" collect.
      
      (*
          pub fn queries_to_csv(&self) -> String {
              let mut queries = BTreeSet::new();
              for gate in &self.gates {
                  for constraint in &gate.constraints {
                      for query in &constraint.queries {
                          queries.insert(query);
                      }
                  }
              }
      
              let mut ret = String::new();
              let w = &mut ret;
              for query in &queries {
                  write!(w, "{},", query).unwrap();
              }
              writeln!(w, "Name").unwrap();
      
              for gate in &self.gates {
                  for constraint in &gate.constraints {
                      for query in &queries {
                          if constraint.queries.contains( *query) {
                              write!(w, "1").unwrap();
                          } else {
                              write!(w, "0").unwrap();
                          }
                          write!(w, ",").unwrap();
                      }
                      writeln!(w, "{}/{}", gate.name, constraint.name).unwrap();
                  }
              }
              ret
          }
      *)
      Definition queries_to_csv (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              let queries :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "alloc::collections::btree::set::BTreeSet")
                        [
                          Ty.apply (Ty.path "&") [ Ty.path "alloc::string::String" ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      "new",
                      []
                    |),
                    []
                  |)
                |) in
              let _ :=
                M.use
                  (M.match_operator (|
                    M.alloc (|
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::iter::traits::collect::IntoIterator",
                          Ty.apply
                            (Ty.path "&")
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                [
                                  Ty.path "halo2_proofs::dev::gates::Gate";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          [],
                          "into_iter",
                          []
                        |),
                        [
                          M.SubPointer.get_struct_record_field (|
                            M.read (| self |),
                            "halo2_proofs::dev::gates::CircuitGates",
                            "gates"
                          |)
                        ]
                      |)
                    |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let iter := M.copy (| γ |) in
                          M.loop (|
                            ltac:(M.monadic
                              (let _ :=
                                M.match_operator (|
                                  M.alloc (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::iter::traits::iterator::Iterator",
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          [ Ty.path "halo2_proofs::dev::gates::Gate" ],
                                        [],
                                        "next",
                                        []
                                      |),
                                      [ iter ]
                                    |)
                                  |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (M.alloc (|
                                          M.never_to_any (| M.read (| M.break (||) |) |)
                                        |)));
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 :=
                                          M.SubPointer.get_struct_tuple_field (|
                                            γ,
                                            "core::option::Option::Some",
                                            0
                                          |) in
                                        let gate := M.copy (| γ0_0 |) in
                                        M.use
                                          (M.match_operator (|
                                            M.alloc (|
                                              M.call_closure (|
                                                M.get_trait_method (|
                                                  "core::iter::traits::collect::IntoIterator",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        [
                                                          Ty.path
                                                            "halo2_proofs::dev::gates::Constraint";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ],
                                                  [],
                                                  "into_iter",
                                                  []
                                                |),
                                                [
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.read (| gate |),
                                                    "halo2_proofs::dev::gates::Gate",
                                                    "constraints"
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let iter := M.copy (| γ |) in
                                                  M.loop (|
                                                    ltac:(M.monadic
                                                      (let _ :=
                                                        M.match_operator (|
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  [
                                                                    Ty.path
                                                                      "halo2_proofs::dev::gates::Constraint"
                                                                  ],
                                                                [],
                                                                "next",
                                                                []
                                                              |),
                                                              [ iter ]
                                                            |)
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (M.alloc (|
                                                                  M.never_to_any (|
                                                                    M.read (| M.break (||) |)
                                                                  |)
                                                                |)));
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let γ0_0 :=
                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                    γ,
                                                                    "core::option::Option::Some",
                                                                    0
                                                                  |) in
                                                                let constraint :=
                                                                  M.copy (| γ0_0 |) in
                                                                M.use
                                                                  (M.match_operator (|
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        M.get_trait_method (|
                                                                          "core::iter::traits::collect::IntoIterator",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                [
                                                                                  Ty.path
                                                                                    "alloc::string::String";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ],
                                                                          [],
                                                                          "into_iter",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.SubPointer.get_struct_record_field (|
                                                                            M.read (| constraint |),
                                                                            "halo2_proofs::dev::gates::Constraint",
                                                                            "queries"
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let iter :=
                                                                            M.copy (| γ |) in
                                                                          M.loop (|
                                                                            ltac:(M.monadic
                                                                              (let _ :=
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::collections::btree::set::Iter")
                                                                                          [
                                                                                            Ty.path
                                                                                              "alloc::string::String"
                                                                                          ],
                                                                                        [],
                                                                                        "next",
                                                                                        []
                                                                                      |),
                                                                                      [ iter ]
                                                                                    |)
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.alloc (|
                                                                                          M.never_to_any (|
                                                                                            M.read (|
                                                                                              M.break (||)
                                                                                            |)
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ0_0 :=
                                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                                            γ,
                                                                                            "core::option::Option::Some",
                                                                                            0
                                                                                          |) in
                                                                                        let query :=
                                                                                          M.copy (|
                                                                                            γ0_0
                                                                                          |) in
                                                                                        let _ :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::collections::btree::set::BTreeSet")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ],
                                                                                                "insert",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                queries;
                                                                                                M.read (|
                                                                                                  query
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          Value.Tuple
                                                                                            []
                                                                                        |)))
                                                                                  ]
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |)))
                                                                          |)))
                                                                    ]
                                                                  |))))
                                                          ]
                                                        |) in
                                                      M.alloc (| Value.Tuple [] |)))
                                                  |)))
                                            ]
                                          |))))
                                  ]
                                |) in
                              M.alloc (| Value.Tuple [] |)))
                          |)))
                    ]
                  |)) in
              let ret :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (| Ty.path "alloc::string::String", "new", [] |),
                    []
                  |)
                |) in
              let w := M.alloc (| ret |) in
              let _ :=
                M.use
                  (M.match_operator (|
                    M.alloc (|
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::iter::traits::collect::IntoIterator",
                          Ty.apply
                            (Ty.path "&")
                            [
                              Ty.apply
                                (Ty.path "alloc::collections::btree::set::BTreeSet")
                                [
                                  Ty.apply (Ty.path "&") [ Ty.path "alloc::string::String" ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          [],
                          "into_iter",
                          []
                        |),
                        [ queries ]
                      |)
                    |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let iter := M.copy (| γ |) in
                          M.loop (|
                            ltac:(M.monadic
                              (let _ :=
                                M.match_operator (|
                                  M.alloc (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::iter::traits::iterator::Iterator",
                                        Ty.apply
                                          (Ty.path "alloc::collections::btree::set::Iter")
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              [ Ty.path "alloc::string::String" ]
                                          ],
                                        [],
                                        "next",
                                        []
                                      |),
                                      [ iter ]
                                    |)
                                  |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (M.alloc (|
                                          M.never_to_any (| M.read (| M.break (||) |) |)
                                        |)));
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 :=
                                          M.SubPointer.get_struct_tuple_field (|
                                            γ,
                                            "core::option::Option::Some",
                                            0
                                          |) in
                                        let query := M.copy (| γ0_0 |) in
                                        let _ :=
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path "core::result::Result")
                                                  [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                                                "unwrap",
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::fmt::Write",
                                                    Ty.path "alloc::string::String",
                                                    [],
                                                    "write_fmt",
                                                    []
                                                  |),
                                                  [
                                                    M.read (| w |);
                                                    M.call_closure (|
                                                      M.get_associated_function (|
                                                        Ty.path "core::fmt::Arguments",
                                                        "new_v1",
                                                        []
                                                      |),
                                                      [
                                                        (* Unsize *)
                                                        M.pointer_coercion
                                                          (M.alloc (|
                                                            Value.Array
                                                              [
                                                                M.read (| Value.String "" |);
                                                                M.read (| Value.String "," |)
                                                              ]
                                                          |));
                                                        (* Unsize *)
                                                        M.pointer_coercion
                                                          (M.alloc (|
                                                            Value.Array
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "core::fmt::rt::Argument",
                                                                    "new_display",
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            [
                                                                              Ty.path
                                                                                "alloc::string::String"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                  |),
                                                                  [ query ]
                                                                |)
                                                              ]
                                                          |))
                                                      ]
                                                    |)
                                                  ]
                                                |)
                                              ]
                                            |)
                                          |) in
                                        M.alloc (| Value.Tuple [] |)))
                                  ]
                                |) in
                              M.alloc (| Value.Tuple [] |)))
                          |)))
                    ]
                  |)) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                      "unwrap",
                      []
                    |),
                    [
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::fmt::Write",
                          Ty.path "alloc::string::String",
                          [],
                          "write_fmt",
                          []
                        |),
                        [
                          M.read (| w |);
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.path "core::fmt::Arguments",
                              "new_const",
                              []
                            |),
                            [
                              (* Unsize *)
                              M.pointer_coercion
                                (M.alloc (| Value.Array [ M.read (| Value.String "Name
" |) ] |))
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                |) in
              let _ :=
                M.use
                  (M.match_operator (|
                    M.alloc (|
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::iter::traits::collect::IntoIterator",
                          Ty.apply
                            (Ty.path "&")
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                [
                                  Ty.path "halo2_proofs::dev::gates::Gate";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          [],
                          "into_iter",
                          []
                        |),
                        [
                          M.SubPointer.get_struct_record_field (|
                            M.read (| self |),
                            "halo2_proofs::dev::gates::CircuitGates",
                            "gates"
                          |)
                        ]
                      |)
                    |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let iter := M.copy (| γ |) in
                          M.loop (|
                            ltac:(M.monadic
                              (let _ :=
                                M.match_operator (|
                                  M.alloc (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::iter::traits::iterator::Iterator",
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          [ Ty.path "halo2_proofs::dev::gates::Gate" ],
                                        [],
                                        "next",
                                        []
                                      |),
                                      [ iter ]
                                    |)
                                  |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (M.alloc (|
                                          M.never_to_any (| M.read (| M.break (||) |) |)
                                        |)));
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 :=
                                          M.SubPointer.get_struct_tuple_field (|
                                            γ,
                                            "core::option::Option::Some",
                                            0
                                          |) in
                                        let gate := M.copy (| γ0_0 |) in
                                        M.use
                                          (M.match_operator (|
                                            M.alloc (|
                                              M.call_closure (|
                                                M.get_trait_method (|
                                                  "core::iter::traits::collect::IntoIterator",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        [
                                                          Ty.path
                                                            "halo2_proofs::dev::gates::Constraint";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ],
                                                  [],
                                                  "into_iter",
                                                  []
                                                |),
                                                [
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.read (| gate |),
                                                    "halo2_proofs::dev::gates::Gate",
                                                    "constraints"
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let iter := M.copy (| γ |) in
                                                  M.loop (|
                                                    ltac:(M.monadic
                                                      (let _ :=
                                                        M.match_operator (|
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  [
                                                                    Ty.path
                                                                      "halo2_proofs::dev::gates::Constraint"
                                                                  ],
                                                                [],
                                                                "next",
                                                                []
                                                              |),
                                                              [ iter ]
                                                            |)
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (M.alloc (|
                                                                  M.never_to_any (|
                                                                    M.read (| M.break (||) |)
                                                                  |)
                                                                |)));
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let γ0_0 :=
                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                    γ,
                                                                    "core::option::Option::Some",
                                                                    0
                                                                  |) in
                                                                let constraint :=
                                                                  M.copy (| γ0_0 |) in
                                                                let _ :=
                                                                  M.use
                                                                    (M.match_operator (|
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::collect::IntoIterator",
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::collections::btree::set::BTreeSet")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      [
                                                                                        Ty.path
                                                                                          "alloc::string::String"
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            "into_iter",
                                                                            []
                                                                          |),
                                                                          [ queries ]
                                                                        |)
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let iter :=
                                                                              M.copy (| γ |) in
                                                                            M.loop (|
                                                                              ltac:(M.monadic
                                                                                (let _ :=
                                                                                  M.match_operator (|
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "core::iter::traits::iterator::Iterator",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::collections::btree::set::Iter")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String"
                                                                                                ]
                                                                                            ],
                                                                                          [],
                                                                                          "next",
                                                                                          []
                                                                                        |),
                                                                                        [ iter ]
                                                                                      |)
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (M.alloc (|
                                                                                            M.never_to_any (|
                                                                                              M.read (|
                                                                                                M.break (||)
                                                                                              |)
                                                                                            |)
                                                                                          |)));
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                              γ,
                                                                                              "core::option::Option::Some",
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                query :=
                                                                                            M.copy (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          let _ :=
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                Value.Tuple
                                                                                                  []
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ :=
                                                                                                      M.use
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::collections::btree::set::BTreeSet")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String";
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              "contains",
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "alloc::string::String"
                                                                                                              ]
                                                                                                            |),
                                                                                                            [
                                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                                M.read (|
                                                                                                                  constraint
                                                                                                                |),
                                                                                                                "halo2_proofs::dev::gates::Constraint",
                                                                                                                "queries"
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                M.read (|
                                                                                                                  query
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)) in
                                                                                                    let
                                                                                                          _ :=
                                                                                                      M.is_constant_or_break_match (|
                                                                                                        M.read (|
                                                                                                          γ
                                                                                                        |),
                                                                                                        Value.Bool
                                                                                                          true
                                                                                                      |) in
                                                                                                    let
                                                                                                          _ :=
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [];
                                                                                                                Ty.path
                                                                                                                  "core::fmt::Error"
                                                                                                              ],
                                                                                                            "unwrap",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::fmt::Write",
                                                                                                                Ty.path
                                                                                                                  "alloc::string::String",
                                                                                                                [],
                                                                                                                "write_fmt",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  w
                                                                                                                |);
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.path
                                                                                                                      "core::fmt::Arguments",
                                                                                                                    "new_const",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    (* Unsize *)
                                                                                                                    M.pointer_coercion
                                                                                                                      (M.alloc (|
                                                                                                                        Value.Array
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              Value.String
                                                                                                                                "1"
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                      |))
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |) in
                                                                                                    M.alloc (|
                                                                                                      Value.Tuple
                                                                                                        []
                                                                                                    |)));
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          _ :=
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [];
                                                                                                                Ty.path
                                                                                                                  "core::fmt::Error"
                                                                                                              ],
                                                                                                            "unwrap",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::fmt::Write",
                                                                                                                Ty.path
                                                                                                                  "alloc::string::String",
                                                                                                                [],
                                                                                                                "write_fmt",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  w
                                                                                                                |);
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.path
                                                                                                                      "core::fmt::Arguments",
                                                                                                                    "new_const",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    (* Unsize *)
                                                                                                                    M.pointer_coercion
                                                                                                                      (M.alloc (|
                                                                                                                        Value.Array
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              Value.String
                                                                                                                                "0"
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                      |))
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |) in
                                                                                                    M.alloc (|
                                                                                                      Value.Tuple
                                                                                                        []
                                                                                                    |)))
                                                                                              ]
                                                                                            |) in
                                                                                          let _ :=
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.path
                                                                                                        "core::fmt::Error"
                                                                                                    ],
                                                                                                  "unwrap",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "core::fmt::Write",
                                                                                                      Ty.path
                                                                                                        "alloc::string::String",
                                                                                                      [],
                                                                                                      "write_fmt",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        w
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::Arguments",
                                                                                                          "new_const",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          (* Unsize *)
                                                                                                          M.pointer_coercion
                                                                                                            (M.alloc (|
                                                                                                              Value.Array
                                                                                                                [
                                                                                                                  M.read (|
                                                                                                                    Value.String
                                                                                                                      ","
                                                                                                                  |)
                                                                                                                ]
                                                                                                            |))
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |)))
                                                                                    ]
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Value.Tuple []
                                                                                |)))
                                                                            |)))
                                                                      ]
                                                                    |)) in
                                                                let _ :=
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          [
                                                                            Ty.tuple [];
                                                                            Ty.path
                                                                              "core::fmt::Error"
                                                                          ],
                                                                        "unwrap",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::fmt::Write",
                                                                            Ty.path
                                                                              "alloc::string::String",
                                                                            [],
                                                                            "write_fmt",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| w |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::Arguments",
                                                                                "new_v1",
                                                                                []
                                                                              |),
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.alloc (|
                                                                                    Value.Array
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            ""
                                                                                        |);
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "/"
                                                                                        |);
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "
"
                                                                                        |)
                                                                                      ]
                                                                                  |));
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.alloc (|
                                                                                    Value.Array
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::rt::Argument",
                                                                                            "new_display",
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ]
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.read (|
                                                                                                gate
                                                                                              |),
                                                                                              "halo2_proofs::dev::gates::Gate",
                                                                                              "name"
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::rt::Argument",
                                                                                            "new_display",
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ]
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.read (|
                                                                                                constraint
                                                                                              |),
                                                                                              "halo2_proofs::dev::gates::Constraint",
                                                                                              "name"
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                  |))
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |) in
                                                                M.alloc (| Value.Tuple [] |)))
                                                          ]
                                                        |) in
                                                      M.alloc (| Value.Tuple [] |)))
                                                  |)))
                                            ]
                                          |))))
                                  ]
                                |) in
                              M.alloc (| Value.Tuple [] |)))
                          |)))
                    ]
                  |)) in
              ret
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_queries_to_csv :
        M.IsAssociatedFunction Self "queries_to_csv" queries_to_csv.
    End Impl_halo2_proofs_dev_gates_CircuitGates.
    
    Module Impl_core_fmt_Display_for_halo2_proofs_dev_gates_CircuitGates.
      Definition Self : Ty.t := Ty.path "halo2_proofs::dev::gates::CircuitGates".
      
      (*
          fn fmt(&self, f: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {
              for gate in &self.gates {
                  writeln!(f, "{}:", gate.name)?;
                  for constraint in &gate.constraints {
                      if constraint.name.is_empty() {
                          writeln!(f, "- {}", constraint.expression)?;
                      } else {
                          writeln!(f, "- {}:", constraint.name)?;
                          writeln!(f, "  {}", constraint.expression)?;
                      }
                  }
              }
              writeln!(f, "Total gates: {}", self.gates.len())?;
              writeln!(
                  f,
                  "Total custom constraint polynomials: {}",
                  self.gates
                      .iter()
                      .map(|gate| gate.constraints.len())
                      .sum::<usize>()
              )?;
              writeln!(f, "Total negations: {}", self.total_negations)?;
              writeln!(f, "Total additions: {}", self.total_additions)?;
              writeln!(f, "Total multiplications: {}", self.total_multiplications)
          }
      *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.catch_return (|
              ltac:(M.monadic
                (M.read (|
                  let _ :=
                    M.use
                      (M.match_operator (|
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::iter::traits::collect::IntoIterator",
                              Ty.apply
                                (Ty.path "&")
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    [
                                      Ty.path "halo2_proofs::dev::gates::Gate";
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ],
                              [],
                              "into_iter",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "halo2_proofs::dev::gates::CircuitGates",
                                "gates"
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let iter := M.copy (| γ |) in
                              M.loop (|
                                ltac:(M.monadic
                                  (let _ :=
                                    M.match_operator (|
                                      M.alloc (|
                                        M.call_closure (|
                                          M.get_trait_method (|
                                            "core::iter::traits::iterator::Iterator",
                                            Ty.apply
                                              (Ty.path "core::slice::iter::Iter")
                                              [ Ty.path "halo2_proofs::dev::gates::Gate" ],
                                            [],
                                            "next",
                                            []
                                          |),
                                          [ iter ]
                                        |)
                                      |),
                                      [
                                        fun γ =>
                                          ltac:(M.monadic
                                            (M.alloc (|
                                              M.never_to_any (| M.read (| M.break (||) |) |)
                                            |)));
                                        fun γ =>
                                          ltac:(M.monadic
                                            (let γ0_0 :=
                                              M.SubPointer.get_struct_tuple_field (|
                                                γ,
                                                "core::option::Option::Some",
                                                0
                                              |) in
                                            let gate := M.copy (| γ0_0 |) in
                                            let _ :=
                                              M.match_operator (|
                                                M.alloc (|
                                                  M.call_closure (|
                                                    M.get_trait_method (|
                                                      "core::ops::try_trait::Try",
                                                      Ty.apply
                                                        (Ty.path "core::result::Result")
                                                        [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                                                      [],
                                                      "branch",
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.path "core::fmt::Formatter",
                                                          "write_fmt",
                                                          []
                                                        |),
                                                        [
                                                          M.read (| f |);
                                                          M.call_closure (|
                                                            M.get_associated_function (|
                                                              Ty.path "core::fmt::Arguments",
                                                              "new_v1",
                                                              []
                                                            |),
                                                            [
                                                              (* Unsize *)
                                                              M.pointer_coercion
                                                                (M.alloc (|
                                                                  Value.Array
                                                                    [
                                                                      M.read (| Value.String "" |);
                                                                      M.read (| Value.String ":
" |)
                                                                    ]
                                                                |));
                                                              (* Unsize *)
                                                              M.pointer_coercion
                                                                (M.alloc (|
                                                                  Value.Array
                                                                    [
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.path
                                                                            "core::fmt::rt::Argument",
                                                                          "new_display",
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [ Ty.path "str" ]
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.SubPointer.get_struct_record_field (|
                                                                            M.read (| gate |),
                                                                            "halo2_proofs::dev::gates::Gate",
                                                                            "name"
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    ]
                                                                |))
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_struct_tuple_field (|
                                                          γ,
                                                          "core::ops::control_flow::ControlFlow::Break",
                                                          0
                                                        |) in
                                                      let residual := M.copy (| γ0_0 |) in
                                                      M.alloc (|
                                                        M.never_to_any (|
                                                          M.read (|
                                                            M.return_ (|
                                                              M.call_closure (|
                                                                M.get_trait_method (|
                                                                  "core::ops::try_trait::FromResidual",
                                                                  Ty.apply
                                                                    (Ty.path "core::result::Result")
                                                                    [
                                                                      Ty.tuple [];
                                                                      Ty.path "core::fmt::Error"
                                                                    ],
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      [
                                                                        Ty.path
                                                                          "core::convert::Infallible";
                                                                        Ty.path "core::fmt::Error"
                                                                      ]
                                                                  ],
                                                                  "from_residual",
                                                                  []
                                                                |),
                                                                [ M.read (| residual |) ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      |)));
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_struct_tuple_field (|
                                                          γ,
                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                          0
                                                        |) in
                                                      let val := M.copy (| γ0_0 |) in
                                                      val))
                                                ]
                                              |) in
                                            M.use
                                              (M.match_operator (|
                                                M.alloc (|
                                                  M.call_closure (|
                                                    M.get_trait_method (|
                                                      "core::iter::traits::collect::IntoIterator",
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            [
                                                              Ty.path
                                                                "halo2_proofs::dev::gates::Constraint";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ],
                                                      [],
                                                      "into_iter",
                                                      []
                                                    |),
                                                    [
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.read (| gate |),
                                                        "halo2_proofs::dev::gates::Gate",
                                                        "constraints"
                                                      |)
                                                    ]
                                                  |)
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let iter := M.copy (| γ |) in
                                                      M.loop (|
                                                        ltac:(M.monadic
                                                          (let _ :=
                                                            M.match_operator (|
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [
                                                                        Ty.path
                                                                          "halo2_proofs::dev::gates::Constraint"
                                                                      ],
                                                                    [],
                                                                    "next",
                                                                    []
                                                                  |),
                                                                  [ iter ]
                                                                |)
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.alloc (|
                                                                      M.never_to_any (|
                                                                        M.read (| M.break (||) |)
                                                                      |)
                                                                    |)));
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ0_0 :=
                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                        γ,
                                                                        "core::option::Option::Some",
                                                                        0
                                                                      |) in
                                                                    let constraint :=
                                                                      M.copy (| γ0_0 |) in
                                                                    M.match_operator (|
                                                                      M.alloc (| Value.Tuple [] |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ :=
                                                                              M.use
                                                                                (M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path "str",
                                                                                      "is_empty",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                          M.read (|
                                                                                            constraint
                                                                                          |),
                                                                                          "halo2_proofs::dev::gates::Constraint",
                                                                                          "name"
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |)) in
                                                                            let _ :=
                                                                              M.is_constant_or_break_match (|
                                                                                M.read (| γ |),
                                                                                Value.Bool true
                                                                              |) in
                                                                            let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::try_trait::Try",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [];
                                                                                          Ty.path
                                                                                            "core::fmt::Error"
                                                                                        ],
                                                                                      [],
                                                                                      "branch",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Formatter",
                                                                                          "write_fmt",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            f
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::Arguments",
                                                                                              "new_v1",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          "- "
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          "
"
                                                                                                      |)
                                                                                                    ]
                                                                                                |));
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_display",
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "alloc::string::String"
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.read (|
                                                                                                              constraint
                                                                                                            |),
                                                                                                            "halo2_proofs::dev::gates::Constraint",
                                                                                                            "expression"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                |))
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                                          0
                                                                                        |) in
                                                                                      let
                                                                                            residual :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.return_ (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::FromResidual",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.path
                                                                                                        "core::fmt::Error"
                                                                                                    ],
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.path
                                                                                                          "core::fmt::Error"
                                                                                                      ]
                                                                                                  ],
                                                                                                  "from_residual",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    residual
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                                          0
                                                                                        |) in
                                                                                      let val :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      val))
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)));
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::try_trait::Try",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [];
                                                                                          Ty.path
                                                                                            "core::fmt::Error"
                                                                                        ],
                                                                                      [],
                                                                                      "branch",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Formatter",
                                                                                          "write_fmt",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            f
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::Arguments",
                                                                                              "new_v1",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          "- "
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          ":
"
                                                                                                      |)
                                                                                                    ]
                                                                                                |));
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_display",
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "str"
                                                                                                              ]
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.read (|
                                                                                                              constraint
                                                                                                            |),
                                                                                                            "halo2_proofs::dev::gates::Constraint",
                                                                                                            "name"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                |))
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                                          0
                                                                                        |) in
                                                                                      let
                                                                                            residual :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.return_ (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::FromResidual",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.path
                                                                                                        "core::fmt::Error"
                                                                                                    ],
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.path
                                                                                                          "core::fmt::Error"
                                                                                                      ]
                                                                                                  ],
                                                                                                  "from_residual",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    residual
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                                          0
                                                                                        |) in
                                                                                      let val :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      val))
                                                                                ]
                                                                              |) in
                                                                            let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::try_trait::Try",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [];
                                                                                          Ty.path
                                                                                            "core::fmt::Error"
                                                                                        ],
                                                                                      [],
                                                                                      "branch",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Formatter",
                                                                                          "write_fmt",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            f
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::Arguments",
                                                                                              "new_v1",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          "  "
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          "
"
                                                                                                      |)
                                                                                                    ]
                                                                                                |));
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_display",
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "alloc::string::String"
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.read (|
                                                                                                              constraint
                                                                                                            |),
                                                                                                            "halo2_proofs::dev::gates::Constraint",
                                                                                                            "expression"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                |))
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                                          0
                                                                                        |) in
                                                                                      let
                                                                                            residual :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.return_ (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::FromResidual",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.path
                                                                                                        "core::fmt::Error"
                                                                                                    ],
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.path
                                                                                                          "core::fmt::Error"
                                                                                                      ]
                                                                                                  ],
                                                                                                  "from_residual",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    residual
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                                          0
                                                                                        |) in
                                                                                      let val :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      val))
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)))
                                                                      ]
                                                                    |)))
                                                              ]
                                                            |) in
                                                          M.alloc (| Value.Tuple [] |)))
                                                      |)))
                                                ]
                                              |))))
                                      ]
                                    |) in
                                  M.alloc (| Value.Tuple [] |)))
                              |)))
                        ]
                      |)) in
                  let _ :=
                    M.match_operator (|
                      M.alloc (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                            [],
                            "branch",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::fmt::Formatter",
                                "write_fmt",
                                []
                              |),
                              [
                                M.read (| f |);
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (| Value.String "Total gates: " |);
                                            M.read (| Value.String "
" |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "usize" ]
                                              |),
                                              [
                                                M.alloc (|
                                                  M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        [
                                                          Ty.path "halo2_proofs::dev::gates::Gate";
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      "len",
                                                      []
                                                    |),
                                                    [
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.read (| self |),
                                                        "halo2_proofs::dev::gates::CircuitGates",
                                                        "gates"
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      |))
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.path "core::fmt::Error"
                                            ]
                                        ],
                                        "from_residual",
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let _ :=
                    M.match_operator (|
                      M.alloc (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                            [],
                            "branch",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::fmt::Formatter",
                                "write_fmt",
                                []
                              |),
                              [
                                M.read (| f |);
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (|
                                              Value.String "Total custom constraint polynomials: "
                                            |);
                                            M.read (| Value.String "
" |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "usize" ]
                                              |),
                                              [
                                                M.alloc (|
                                                  M.call_closure (|
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::map::Map")
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            [
                                                              Ty.path
                                                                "halo2_proofs::dev::gates::Gate"
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    [
                                                                      Ty.path
                                                                        "halo2_proofs::dev::gates::Gate"
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.path "usize")
                                                        ],
                                                      [],
                                                      "sum",
                                                      [ Ty.path "usize" ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            [
                                                              Ty.path
                                                                "halo2_proofs::dev::gates::Gate"
                                                            ],
                                                          [],
                                                          "map",
                                                          [
                                                            Ty.path "usize";
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      [
                                                                        Ty.path
                                                                          "halo2_proofs::dev::gates::Gate"
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.path "usize")
                                                          ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "slice")
                                                                [
                                                                  Ty.path
                                                                    "halo2_proofs::dev::gates::Gate"
                                                                ],
                                                              "iter",
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                M.get_trait_method (|
                                                                  "core::ops::deref::Deref",
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    [
                                                                      Ty.path
                                                                        "halo2_proofs::dev::gates::Gate";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  [],
                                                                  "deref",
                                                                  []
                                                                |),
                                                                [
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    M.read (| self |),
                                                                    "halo2_proofs::dev::gates::CircuitGates",
                                                                    "gates"
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |);
                                                          M.closure
                                                            (fun γ =>
                                                              ltac:(M.monadic
                                                                match γ with
                                                                | [ α0 ] =>
                                                                  M.match_operator (|
                                                                    M.alloc (| α0 |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let gate :=
                                                                            M.copy (| γ |) in
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                [
                                                                                  Ty.path
                                                                                    "halo2_proofs::dev::gates::Constraint";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              "len",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.SubPointer.get_struct_record_field (|
                                                                                M.read (| gate |),
                                                                                "halo2_proofs::dev::gates::Gate",
                                                                                "constraints"
                                                                              |)
                                                                            ]
                                                                          |)))
                                                                    ]
                                                                  |)
                                                                | _ => M.impossible (||)
                                                                end))
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      |))
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.path "core::fmt::Error"
                                            ]
                                        ],
                                        "from_residual",
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let _ :=
                    M.match_operator (|
                      M.alloc (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                            [],
                            "branch",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::fmt::Formatter",
                                "write_fmt",
                                []
                              |),
                              [
                                M.read (| f |);
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (| Value.String "Total negations: " |);
                                            M.read (| Value.String "
" |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "usize" ]
                                              |),
                                              [
                                                M.SubPointer.get_struct_record_field (|
                                                  M.read (| self |),
                                                  "halo2_proofs::dev::gates::CircuitGates",
                                                  "total_negations"
                                                |)
                                              ]
                                            |)
                                          ]
                                      |))
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.path "core::fmt::Error"
                                            ]
                                        ],
                                        "from_residual",
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let _ :=
                    M.match_operator (|
                      M.alloc (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                            [],
                            "branch",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::fmt::Formatter",
                                "write_fmt",
                                []
                              |),
                              [
                                M.read (| f |);
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (| Value.String "Total additions: " |);
                                            M.read (| Value.String "
" |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "usize" ]
                                              |),
                                              [
                                                M.SubPointer.get_struct_record_field (|
                                                  M.read (| self |),
                                                  "halo2_proofs::dev::gates::CircuitGates",
                                                  "total_additions"
                                                |)
                                              ]
                                            |)
                                          ]
                                      |))
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.path "core::fmt::Error"
                                            ]
                                        ],
                                        "from_residual",
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  M.alloc (|
                    M.call_closure (|
                      M.get_associated_function (|
                        Ty.path "core::fmt::Formatter",
                        "write_fmt",
                        []
                      |),
                      [
                        M.read (| f |);
                        M.call_closure (|
                          M.get_associated_function (|
                            Ty.path "core::fmt::Arguments",
                            "new_v1",
                            []
                          |),
                          [
                            (* Unsize *)
                            M.pointer_coercion
                              (M.alloc (|
                                Value.Array
                                  [
                                    M.read (| Value.String "Total multiplications: " |);
                                    M.read (| Value.String "
" |)
                                  ]
                              |));
                            (* Unsize *)
                            M.pointer_coercion
                              (M.alloc (|
                                Value.Array
                                  [
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::fmt::rt::Argument",
                                        "new_display",
                                        [ Ty.path "usize" ]
                                      |),
                                      [
                                        M.SubPointer.get_struct_record_field (|
                                          M.read (| self |),
                                          "halo2_proofs::dev::gates::CircuitGates",
                                          "total_multiplications"
                                        |)
                                      ]
                                    |)
                                  ]
                              |))
                          ]
                        |)
                      ]
                    |)
                  |)
                |)))
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Display"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Display_for_halo2_proofs_dev_gates_CircuitGates.
  End gates.
End dev.
