(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module impls.
  Module KeyType.
    Class Trait (Self : Set) : Set := {
      IS_AUTO_KEY `{H : State.Trait} : bool;
    }.
    
    Global Instance Method_IS_AUTO_KEY `{H : State.Trait} `(Trait)
      : Notation.Dot "IS_AUTO_KEY" := {
      Notation.dot := IS_AUTO_KEY;
    }.
  End KeyType.
  
  Module AutoKey.
    Inductive t : Set := Build.
  End AutoKey.
  Definition AutoKey := AutoKey.t.
  
  Module Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Parameter default : forall `{H : State.Trait},
        M (H := H) ink_storage_traits.impls.AutoKey.
    
    Global Instance AssociatedFunction_default `{H : State.Trait} :
      Notation.DoubleColon Self "default" := {
      Notation.double_colon := default;
    }.
    
    Global Instance I : core.default.Default.Trait Self := {
      core.default.Default.default `{H : State.Trait} := default;
    }.
  End Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Global Instance I : core.marker.Copy.Trait Self :=
      core.marker.Copy.Build_Trait _.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Parameter clone : forall `{H : State.Trait},
        ref Self ->
        M (H := H) ink_storage_traits.impls.AutoKey.
    
    Global Instance Method_clone `{H : State.Trait} : Notation.Dot "clone" := {
      Notation.dot := clone;
    }.
    
    Global Instance I : core.clone.Clone.Trait Self := {
      core.clone.Clone.clone `{H : State.Trait} := clone;
    }.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.
  
  Module
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Global Instance I : core.marker.StructuralPartialEq.Trait Self :=
      core.marker.StructuralPartialEq.Build_Trait _.
  End Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Parameter eq : forall `{H : State.Trait},
        ref Self ->
        ref ink_storage_traits.impls.AutoKey ->
        M (H := H) bool.
    
    Global Instance Method_eq `{H : State.Trait} : Notation.Dot "eq" := {
      Notation.dot := eq;
    }.
    
    Global Instance I : core.cmp.PartialEq.Trait Self := {
      core.cmp.PartialEq.eq `{H : State.Trait} := eq;
    }.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Global Instance I : core.marker.StructuralEq.Trait Self :=
      core.marker.StructuralEq.Build_Trait _.
  End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Parameter assert_receiver_is_total_eq : forall `{H : State.Trait},
        ref Self ->
        M (H := H) unit.
    
    Global Instance Method_assert_receiver_is_total_eq `{H : State.Trait} :
      Notation.Dot "assert_receiver_is_total_eq" := {
      Notation.dot := assert_receiver_is_total_eq;
    }.
    
    Global Instance I : core.cmp.Eq.Trait Self := {
    }.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Parameter partial_cmp : forall `{H : State.Trait},
        ref Self ->
        ref ink_storage_traits.impls.AutoKey ->
        M (H := H) (core.option.Option core.cmp.Ordering).
    
    Global Instance Method_partial_cmp `{H : State.Trait} :
      Notation.Dot "partial_cmp" := {
      Notation.dot := partial_cmp;
    }.
    
    Global Instance I : core.cmp.PartialOrd.Trait Self := {
      core.cmp.PartialOrd.partial_cmp `{H : State.Trait} := partial_cmp;
    }.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.
  
  Module
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Definition KEY := Pure 0.
    
    Global Instance AssociatedFunction_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
    }.
  End
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey.
  
  Module
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Definition IS_AUTO_KEY := Pure true.
    
    Global Instance AssociatedFunction_IS_AUTO_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "IS_AUTO_KEY" := {
      Notation.double_colon := IS_AUTO_KEY;
    }.
    
    Global Instance I : ink_storage_traits.impls.KeyType.Trait Self := {
      ink_storage_traits.impls.KeyType.IS_AUTO_KEY
        `{H : State.Trait}
        :=
        IS_AUTO_KEY;
    }.
  End
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.
    Definition Self := ink_storage_traits.impls.AutoKey.
    
    Parameter fmt : forall `{H : State.Trait},
        ref Self ->
        mut_ref core.fmt.Formatter ->
        M (H := H) core.fmt.Result.
    
    Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
      Notation.dot := fmt;
    }.
    
    Global Instance I : core.fmt.Debug.Trait Self := {
      core.fmt.Debug.fmt `{H : State.Trait} := fmt;
    }.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.
  
  Module ManualKey.
    Unset Primitive Projections.
    Record t : Set := {
      _ : core.marker.PhantomData (ParentKey);
    }.
    Global Set Primitive Projections.
  
    Global Instance Get_0 : Notation.Dot 0 := {
      Notation.dot '(Build_t x0) := x0;
    }.
  End ManualKey.
  Definition ManualKey := ManualKey.t.
  
  Module
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter default : forall `{H : State.Trait},
        M (H := H) (ink_storage_traits.impls.ManualKey ParentKey).
    
    Global Instance AssociatedFunction_default `{H : State.Trait} :
      Notation.DoubleColon Self "default" := {
      Notation.double_colon := default;
    }.
    
    Global Instance I : core.default.Default.Trait Self := {
      core.default.Default.default `{H : State.Trait} := default;
    }.
  End
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Global Instance I : core.marker.Copy.Trait Self :=
      core.marker.Copy.Build_Trait _.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter clone : forall `{H : State.Trait},
        ref Self ->
        M (H := H) (ink_storage_traits.impls.ManualKey ParentKey).
    
    Global Instance Method_clone `{H : State.Trait} : Notation.Dot "clone" := {
      Notation.dot := clone;
    }.
    
    Global Instance I : core.clone.Clone.Trait Self := {
      core.clone.Clone.clone `{H : State.Trait} := clone;
    }.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Global Instance I : core.marker.StructuralEq.Trait Self :=
      core.marker.StructuralEq.Build_Trait _.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter assert_receiver_is_total_eq : forall `{H : State.Trait},
        ref Self ->
        M (H := H) unit.
    
    Global Instance Method_assert_receiver_is_total_eq `{H : State.Trait} :
      Notation.Dot "assert_receiver_is_total_eq" := {
      Notation.dot := assert_receiver_is_total_eq;
    }.
    
    Global Instance I : core.cmp.Eq.Trait Self := {
    }.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Global Instance I : core.marker.StructuralPartialEq.Trait Self :=
      core.marker.StructuralPartialEq.Build_Trait _.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter eq : forall `{H : State.Trait},
        ref Self ->
        ref (ink_storage_traits.impls.ManualKey ParentKey) ->
        M (H := H) bool.
    
    Global Instance Method_eq `{H : State.Trait} : Notation.Dot "eq" := {
      Notation.dot := eq;
    }.
    
    Global Instance I : core.cmp.PartialEq.Trait Self := {
      core.cmp.PartialEq.eq `{H : State.Trait} := eq;
    }.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter partial_cmp : forall `{H : State.Trait},
        ref Self ->
        ref (ink_storage_traits.impls.ManualKey ParentKey) ->
        M (H := H) (core.option.Option core.cmp.Ordering).
    
    Global Instance Method_partial_cmp `{H : State.Trait} :
      Notation.Dot "partial_cmp" := {
      Notation.dot := partial_cmp;
    }.
    
    Global Instance I : core.cmp.PartialOrd.Trait Self := {
      core.cmp.PartialOrd.partial_cmp `{H : State.Trait} := partial_cmp;
    }.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Definition
      KEY := ink_primitives.key.KeyComposer::["concat"]
        ink_storage_traits.impls.KEY
        ParentKey::["KEY"].
    
    Global Instance AssociatedFunction_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
    }.
  End
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Definition IS_AUTO_KEY := Pure false.
    
    Global Instance AssociatedFunction_IS_AUTO_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "IS_AUTO_KEY" := {
      Notation.double_colon := IS_AUTO_KEY;
    }.
    
    Global Instance I : ink_storage_traits.impls.KeyType.Trait Self := {
      ink_storage_traits.impls.KeyType.IS_AUTO_KEY
        `{H : State.Trait}
        :=
        IS_AUTO_KEY;
    }.
  End
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    
    Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter fmt : forall `{H : State.Trait},
        ref Self ->
        mut_ref core.fmt.Formatter ->
        M (H := H) core.fmt.Result.
    
    Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
      Notation.dot := fmt;
    }.
    
    Global Instance I : core.fmt.Debug.Trait Self := {
      core.fmt.Debug.fmt `{H : State.Trait} := fmt;
    }.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module ResolverKey.
    Unset Primitive Projections.
    Record t : Set := {
      _ : core.marker.PhantomData ((L * R));
    }.
    Global Set Primitive Projections.
  
    Global Instance Get_0 : Notation.Dot 0 := {
      Notation.dot '(Build_t x0) := x0;
    }.
  End ResolverKey.
  Definition ResolverKey := ResolverKey.t.
  
  Module Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter default : forall `{H : State.Trait},
        M (H := H) (ink_storage_traits.impls.ResolverKey L R).
    
    Global Instance AssociatedFunction_default `{H : State.Trait} :
      Notation.DoubleColon Self "default" := {
      Notation.double_colon := default;
    }.
    
    Global Instance I : core.default.Default.Trait Self := {
      core.default.Default.default `{H : State.Trait} := default;
    }.
  End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Global Instance I : core.marker.Copy.Trait Self :=
      core.marker.Copy.Build_Trait _.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter clone : forall `{H : State.Trait},
        ref Self ->
        M (H := H) (ink_storage_traits.impls.ResolverKey L R).
    
    Global Instance Method_clone `{H : State.Trait} : Notation.Dot "clone" := {
      Notation.dot := clone;
    }.
    
    Global Instance I : core.clone.Clone.Trait Self := {
      core.clone.Clone.clone `{H : State.Trait} := clone;
    }.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Global Instance I : core.marker.StructuralPartialEq.Trait Self :=
      core.marker.StructuralPartialEq.Build_Trait _.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter eq : forall `{H : State.Trait},
        ref Self ->
        ref (ink_storage_traits.impls.ResolverKey L R) ->
        M (H := H) bool.
    
    Global Instance Method_eq `{H : State.Trait} : Notation.Dot "eq" := {
      Notation.dot := eq;
    }.
    
    Global Instance I : core.cmp.PartialEq.Trait Self := {
      core.cmp.PartialEq.eq `{H : State.Trait} := eq;
    }.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Global Instance I : core.marker.StructuralEq.Trait Self :=
      core.marker.StructuralEq.Build_Trait _.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter assert_receiver_is_total_eq : forall `{H : State.Trait},
        ref Self ->
        M (H := H) unit.
    
    Global Instance Method_assert_receiver_is_total_eq `{H : State.Trait} :
      Notation.Dot "assert_receiver_is_total_eq" := {
      Notation.dot := assert_receiver_is_total_eq;
    }.
    
    Global Instance I : core.cmp.Eq.Trait Self := {
    }.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter partial_cmp : forall `{H : State.Trait},
        ref Self ->
        ref (ink_storage_traits.impls.ResolverKey L R) ->
        M (H := H) (core.option.Option core.cmp.Ordering).
    
    Global Instance Method_partial_cmp `{H : State.Trait} :
      Notation.Dot "partial_cmp" := {
      Notation.dot := partial_cmp;
    }.
    
    Global Instance I : core.cmp.PartialOrd.Trait Self := {
      core.cmp.PartialOrd.partial_cmp `{H : State.Trait} := partial_cmp;
    }.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter fmt : forall `{H : State.Trait},
        ref Self ->
        mut_ref core.fmt.Formatter ->
        M (H := H) core.fmt.Result.
    
    Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
      Notation.dot := fmt;
    }.
    
    Global Instance I : core.fmt.Debug.Trait Self := {
      core.fmt.Debug.fmt `{H : State.Trait} := fmt;
    }.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Definition
      KEY := if (L::["IS_AUTO_KEY"] : bool) then
        Pure R::["KEY"]
      else
        Pure L::["KEY"].
    
    Global Instance AssociatedFunction_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
    }.
  End
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
  End
    Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    
    Definition Self := ink_storage_traits.impls.ResolverKey L R.
    
    Definition IS_AUTO_KEY := Pure L::["IS_AUTO_KEY"].
    
    Global Instance AssociatedFunction_IS_AUTO_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "IS_AUTO_KEY" := {
      Notation.double_colon := IS_AUTO_KEY;
    }.
    
    Global Instance I : ink_storage_traits.impls.KeyType.Trait Self := {
      ink_storage_traits.impls.KeyType.IS_AUTO_KEY
        `{H : State.Trait}
        :=
        IS_AUTO_KEY;
    }.
  End
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
  End
    Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Definition FinalKey : Set :=
    ink_storage_traits.impls.ResolverKey
      ink_storage_traits.storage.StorableHint.PreferredKey
      (ink_storage_traits.impls.ManualKey ParentKey).
  
  Module Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
  Section Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
    Context {T ParentKey : Set}.
    
    Definition Self := T.
    
    Definition Type : Set := ink_storage_traits.storage.StorableHint.Type.
    
    Global Instance I :
        ink_storage_traits.storage.AutoStorableHint.Trait
          Self
          (Key := ink_storage_traits.impls.ManualKey ParentKey) := {
    }.
  End Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
  End Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
  
  Module Impl_ink_storage_traits_storage_private_Sealed_for_P.
  Section Impl_ink_storage_traits_storage_private_Sealed_for_P.
    Context {P : Set}.
    
    Definition Self := P.
    
    Global Instance I : ink_storage_traits.storage.private.Sealed.Trait Self :=
      ink_storage_traits.storage.private.Sealed.Build_Trait _.
  End Impl_ink_storage_traits_storage_private_Sealed_for_P.
  End Impl_ink_storage_traits_storage_private_Sealed_for_P.
  
  Module Impl_ink_storage_traits_storage_Packed_for_P.
  Section Impl_ink_storage_traits_storage_Packed_for_P.
    Context {P : Set}.
    
    Definition Self := P.
    
    Global Instance I : ink_storage_traits.storage.Packed.Trait Self :=
      ink_storage_traits.storage.Packed.Build_Trait _.
  End Impl_ink_storage_traits_storage_Packed_for_P.
  End Impl_ink_storage_traits_storage_Packed_for_P.
  
  Module Impl_ink_storage_traits_storage_StorageKey_for_P.
  Section Impl_ink_storage_traits_storage_StorageKey_for_P.
    Context {P : Set}.
    
    Definition Self := P.
    
    Definition KEY := Pure 0.
    
    Global Instance AssociatedFunction_KEY `{H : State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
    }.
  End Impl_ink_storage_traits_storage_StorageKey_for_P.
  End Impl_ink_storage_traits_storage_StorageKey_for_P.
  
  Module Impl_ink_storage_traits_storage_StorableHint_for_P.
  Section Impl_ink_storage_traits_storage_StorableHint_for_P.
    Context {P Key : Set}.
    
    Definition Self := P.
    
    Definition Type : Set := P.
    
    Definition PreferredKey : Set := ink_storage_traits.impls.AutoKey.
    
    Global Instance I :
        ink_storage_traits.storage.StorableHint.Trait Self (Key := Key) := {
    }.
  End Impl_ink_storage_traits_storage_StorableHint_for_P.
  End Impl_ink_storage_traits_storage_StorableHint_for_P.
End impls.

Module KeyType.
  Class Trait (Self : Set) : Set := {
    IS_AUTO_KEY `{H : State.Trait} : bool;
  }.
  
  Global Instance Method_IS_AUTO_KEY `{H : State.Trait} `(Trait)
    : Notation.Dot "IS_AUTO_KEY" := {
    Notation.dot := IS_AUTO_KEY;
  }.
End KeyType.

Module AutoKey.
  Inductive t : Set := Build.
End AutoKey.
Definition AutoKey := AutoKey.t.

Module Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Definition Identity : Set := Self.
  
  Parameter type_info : forall `{H : State.Trait},
      M (H := H) scale_info.ty.Type.
  
  Global Instance AssociatedFunction_type_info `{H : State.Trait} :
    Notation.DoubleColon Self "type_info" := {
    Notation.double_colon := type_info;
  }.
  
  Global Instance I : scale_info.TypeInfo.Trait Self := {
    scale_info.TypeInfo.type_info `{H : State.Trait} := type_info;
  }.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Parameter default : forall `{H : State.Trait},
      M (H := H) ink_storage_traits.impls.AutoKey.
  
  Global Instance AssociatedFunction_default `{H : State.Trait} :
    Notation.DoubleColon Self "default" := {
    Notation.double_colon := default;
  }.
  
  Global Instance I : core.default.Default.Trait Self := {
    core.default.Default.default `{H : State.Trait} := default;
  }.
End Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Global Instance I : core.marker.Copy.Trait Self :=
    core.marker.Copy.Build_Trait _.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Parameter clone : forall `{H : State.Trait},
      ref Self ->
      M (H := H) ink_storage_traits.impls.AutoKey.
  
  Global Instance Method_clone `{H : State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone `{H : State.Trait} := clone;
  }.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.

Module
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Global Instance I : core.marker.StructuralPartialEq.Trait Self :=
    core.marker.StructuralPartialEq.Build_Trait _.
End Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Parameter eq : forall `{H : State.Trait},
      ref Self ->
      ref ink_storage_traits.impls.AutoKey ->
      M (H := H) bool.
  
  Global Instance Method_eq `{H : State.Trait} : Notation.Dot "eq" := {
    Notation.dot := eq;
  }.
  
  Global Instance I : core.cmp.PartialEq.Trait Self := {
    core.cmp.PartialEq.eq `{H : State.Trait} := eq;
  }.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Global Instance I : core.marker.StructuralEq.Trait Self :=
    core.marker.StructuralEq.Build_Trait _.
End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Parameter assert_receiver_is_total_eq : forall `{H : State.Trait},
      ref Self ->
      M (H := H) unit.
  
  Global Instance Method_assert_receiver_is_total_eq `{H : State.Trait} :
    Notation.Dot "assert_receiver_is_total_eq" := {
    Notation.dot := assert_receiver_is_total_eq;
  }.
  
  Global Instance I : core.cmp.Eq.Trait Self := {
  }.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Parameter partial_cmp : forall `{H : State.Trait},
      ref Self ->
      ref ink_storage_traits.impls.AutoKey ->
      M (H := H) (core.option.Option core.cmp.Ordering).
  
  Global Instance Method_partial_cmp `{H : State.Trait} :
    Notation.Dot "partial_cmp" := {
    Notation.dot := partial_cmp;
  }.
  
  Global Instance I : core.cmp.PartialOrd.Trait Self := {
    core.cmp.PartialOrd.partial_cmp `{H : State.Trait} := partial_cmp;
  }.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.

Module
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Definition KEY := Pure 0.
  
  Global Instance AssociatedFunction_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "KEY" := {
    Notation.double_colon := KEY;
  }.
  
  Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
    ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
  }.
End
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey.

Module
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Definition IS_AUTO_KEY := Pure true.
  
  Global Instance AssociatedFunction_IS_AUTO_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "IS_AUTO_KEY" := {
    Notation.double_colon := IS_AUTO_KEY;
  }.
  
  Global Instance I : ink_storage_traits.impls.KeyType.Trait Self := {
    ink_storage_traits.impls.KeyType.IS_AUTO_KEY
      `{H : State.Trait}
      :=
      IS_AUTO_KEY;
  }.
End Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.
  Definition Self := ink_storage_traits.impls.AutoKey.
  
  Parameter fmt : forall `{H : State.Trait},
      ref Self ->
      mut_ref core.fmt.Formatter ->
      M (H := H) core.fmt.Result.
  
  Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt `{H : State.Trait} := fmt;
  }.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.

Module ManualKey.
  Unset Primitive Projections.
  Record t : Set := {
    _ : core.marker.PhantomData (ParentKey);
  }.
  Global Set Primitive Projections.

  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End ManualKey.
Definition ManualKey := ManualKey.t.

Module
  Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Definition Identity : Set := Self.
  
  Parameter type_info : forall `{H : State.Trait},
      M (H := H) scale_info.ty.Type.
  
  Global Instance AssociatedFunction_type_info `{H : State.Trait} :
    Notation.DoubleColon Self "type_info" := {
    Notation.double_colon := type_info;
  }.
  
  Global Instance I : scale_info.TypeInfo.Trait Self := {
    scale_info.TypeInfo.type_info `{H : State.Trait} := type_info;
  }.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Parameter default : forall `{H : State.Trait},
      M (H := H) (ink_storage_traits.impls.ManualKey ParentKey).
  
  Global Instance AssociatedFunction_default `{H : State.Trait} :
    Notation.DoubleColon Self "default" := {
    Notation.double_colon := default;
  }.
  
  Global Instance I : core.default.Default.Trait Self := {
    core.default.Default.default `{H : State.Trait} := default;
  }.
End Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Global Instance I : core.marker.Copy.Trait Self :=
    core.marker.Copy.Build_Trait _.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Parameter clone : forall `{H : State.Trait},
      ref Self ->
      M (H := H) (ink_storage_traits.impls.ManualKey ParentKey).
  
  Global Instance Method_clone `{H : State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone `{H : State.Trait} := clone;
  }.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Global Instance I : core.marker.StructuralEq.Trait Self :=
    core.marker.StructuralEq.Build_Trait _.
End
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
End
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Parameter assert_receiver_is_total_eq : forall `{H : State.Trait},
      ref Self ->
      M (H := H) unit.
  
  Global Instance Method_assert_receiver_is_total_eq `{H : State.Trait} :
    Notation.Dot "assert_receiver_is_total_eq" := {
    Notation.dot := assert_receiver_is_total_eq;
  }.
  
  Global Instance I : core.cmp.Eq.Trait Self := {
  }.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Global Instance I : core.marker.StructuralPartialEq.Trait Self :=
    core.marker.StructuralPartialEq.Build_Trait _.
End
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
End
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Parameter eq : forall `{H : State.Trait},
      ref Self ->
      ref (ink_storage_traits.impls.ManualKey ParentKey) ->
      M (H := H) bool.
  
  Global Instance Method_eq `{H : State.Trait} : Notation.Dot "eq" := {
    Notation.dot := eq;
  }.
  
  Global Instance I : core.cmp.PartialEq.Trait Self := {
    core.cmp.PartialEq.eq `{H : State.Trait} := eq;
  }.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Parameter partial_cmp : forall `{H : State.Trait},
      ref Self ->
      ref (ink_storage_traits.impls.ManualKey ParentKey) ->
      M (H := H) (core.option.Option core.cmp.Ordering).
  
  Global Instance Method_partial_cmp `{H : State.Trait} :
    Notation.Dot "partial_cmp" := {
    Notation.dot := partial_cmp;
  }.
  
  Global Instance I : core.cmp.PartialOrd.Trait Self := {
    core.cmp.PartialOrd.partial_cmp `{H : State.Trait} := partial_cmp;
  }.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Definition
    KEY := ink_primitives.key.KeyComposer::["concat"]
      ink_storage_traits.impls.KEY
      ParentKey::["KEY"].
  
  Global Instance AssociatedFunction_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "KEY" := {
    Notation.double_colon := KEY;
  }.
  
  Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
    ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
  }.
End
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
End
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Definition IS_AUTO_KEY := Pure false.
  
  Global Instance AssociatedFunction_IS_AUTO_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "IS_AUTO_KEY" := {
    Notation.double_colon := IS_AUTO_KEY;
  }.
  
  Global Instance I : ink_storage_traits.impls.KeyType.Trait Self := {
    ink_storage_traits.impls.KeyType.IS_AUTO_KEY
      `{H : State.Trait}
      :=
      IS_AUTO_KEY;
  }.
End
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.
End
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Context {ParentKey : Set}.
  
  Definition Self := ink_storage_traits.impls.ManualKey ParentKey.
  
  Parameter fmt : forall `{H : State.Trait},
      ref Self ->
      mut_ref core.fmt.Formatter ->
      M (H := H) core.fmt.Result.
  
  Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt `{H : State.Trait} := fmt;
  }.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module ResolverKey.
  Unset Primitive Projections.
  Record t : Set := {
    _ : core.marker.PhantomData ((L * R));
  }.
  Global Set Primitive Projections.

  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End ResolverKey.
Definition ResolverKey := ResolverKey.t.

Module Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Definition Identity : Set := Self.
  
  Parameter type_info : forall `{H : State.Trait},
      M (H := H) scale_info.ty.Type.
  
  Global Instance AssociatedFunction_type_info `{H : State.Trait} :
    Notation.DoubleColon Self "type_info" := {
    Notation.double_colon := type_info;
  }.
  
  Global Instance I : scale_info.TypeInfo.Trait Self := {
    scale_info.TypeInfo.type_info `{H : State.Trait} := type_info;
  }.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Parameter default : forall `{H : State.Trait},
      M (H := H) (ink_storage_traits.impls.ResolverKey L R).
  
  Global Instance AssociatedFunction_default `{H : State.Trait} :
    Notation.DoubleColon Self "default" := {
    Notation.double_colon := default;
  }.
  
  Global Instance I : core.default.Default.Trait Self := {
    core.default.Default.default `{H : State.Trait} := default;
  }.
End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Global Instance I : core.marker.Copy.Trait Self :=
    core.marker.Copy.Build_Trait _.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Parameter clone : forall `{H : State.Trait},
      ref Self ->
      M (H := H) (ink_storage_traits.impls.ResolverKey L R).
  
  Global Instance Method_clone `{H : State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone `{H : State.Trait} := clone;
  }.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.

Module
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
Section
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Global Instance I : core.marker.StructuralPartialEq.Trait Self :=
    core.marker.StructuralPartialEq.Build_Trait _.
End
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
End
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Parameter eq : forall `{H : State.Trait},
      ref Self ->
      ref (ink_storage_traits.impls.ResolverKey L R) ->
      M (H := H) bool.
  
  Global Instance Method_eq `{H : State.Trait} : Notation.Dot "eq" := {
    Notation.dot := eq;
  }.
  
  Global Instance I : core.cmp.PartialEq.Trait Self := {
    core.cmp.PartialEq.eq `{H : State.Trait} := eq;
  }.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
Section
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Global Instance I : core.marker.StructuralEq.Trait Self :=
    core.marker.StructuralEq.Build_Trait _.
End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Parameter assert_receiver_is_total_eq : forall `{H : State.Trait},
      ref Self ->
      M (H := H) unit.
  
  Global Instance Method_assert_receiver_is_total_eq `{H : State.Trait} :
    Notation.Dot "assert_receiver_is_total_eq" := {
    Notation.dot := assert_receiver_is_total_eq;
  }.
  
  Global Instance I : core.cmp.Eq.Trait Self := {
  }.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Parameter partial_cmp : forall `{H : State.Trait},
      ref Self ->
      ref (ink_storage_traits.impls.ResolverKey L R) ->
      M (H := H) (core.option.Option core.cmp.Ordering).
  
  Global Instance Method_partial_cmp `{H : State.Trait} :
    Notation.Dot "partial_cmp" := {
    Notation.dot := partial_cmp;
  }.
  
  Global Instance I : core.cmp.PartialOrd.Trait Self := {
    core.cmp.PartialOrd.partial_cmp `{H : State.Trait} := partial_cmp;
  }.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Parameter fmt : forall `{H : State.Trait},
      ref Self ->
      mut_ref core.fmt.Formatter ->
      M (H := H) core.fmt.Result.
  
  Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt `{H : State.Trait} := fmt;
  }.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.

Module
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
Section
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Definition
    KEY := if (L::["IS_AUTO_KEY"] : bool) then
      Pure R::["KEY"]
    else
      Pure L::["KEY"].
  
  Global Instance AssociatedFunction_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "KEY" := {
    Notation.double_colon := KEY;
  }.
  
  Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
    ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
  }.
End
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
End
  Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.

Module
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
Section
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
  Context {L R : Set}.
  
  Definition Self := ink_storage_traits.impls.ResolverKey L R.
  
  Definition IS_AUTO_KEY := Pure L::["IS_AUTO_KEY"].
  
  Global Instance AssociatedFunction_IS_AUTO_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "IS_AUTO_KEY" := {
    Notation.double_colon := IS_AUTO_KEY;
  }.
  
  Global Instance I : ink_storage_traits.impls.KeyType.Trait Self := {
    ink_storage_traits.impls.KeyType.IS_AUTO_KEY
      `{H : State.Trait}
      :=
      IS_AUTO_KEY;
  }.
End
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.
End
  Impl_ink_storage_traits_impls_KeyType_for_ink_storage_traits_impls_ResolverKey_L_R.

Definition FinalKey : Set :=
  ink_storage_traits.impls.ResolverKey
    ink_storage_traits.storage.StorableHint.PreferredKey
    (ink_storage_traits.impls.ManualKey ParentKey).

Module Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
Section Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
  Context {T ParentKey : Set}.
  
  Definition Self := T.
  
  Definition Type : Set := ink_storage_traits.storage.StorableHint.Type.
  
  Global Instance I :
      ink_storage_traits.storage.AutoStorableHint.Trait
        Self
        (Key := ink_storage_traits.impls.ManualKey ParentKey) := {
  }.
End Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
End Impl_ink_storage_traits_storage_AutoStorableHint_for_T.

Module Impl_ink_storage_traits_storage_private_Sealed_for_P.
Section Impl_ink_storage_traits_storage_private_Sealed_for_P.
  Context {P : Set}.
  
  Definition Self := P.
  
  Global Instance I : ink_storage_traits.storage.private.Sealed.Trait Self :=
    ink_storage_traits.storage.private.Sealed.Build_Trait _.
End Impl_ink_storage_traits_storage_private_Sealed_for_P.
End Impl_ink_storage_traits_storage_private_Sealed_for_P.

Module Impl_ink_storage_traits_storage_Packed_for_P.
Section Impl_ink_storage_traits_storage_Packed_for_P.
  Context {P : Set}.
  
  Definition Self := P.
  
  Global Instance I : ink_storage_traits.storage.Packed.Trait Self :=
    ink_storage_traits.storage.Packed.Build_Trait _.
End Impl_ink_storage_traits_storage_Packed_for_P.
End Impl_ink_storage_traits_storage_Packed_for_P.

Module Impl_ink_storage_traits_storage_StorageKey_for_P.
Section Impl_ink_storage_traits_storage_StorageKey_for_P.
  Context {P : Set}.
  
  Definition Self := P.
  
  Definition KEY := Pure 0.
  
  Global Instance AssociatedFunction_KEY `{H : State.Trait} :
    Notation.DoubleColon Self "KEY" := {
    Notation.double_colon := KEY;
  }.
  
  Global Instance I : ink_storage_traits.storage.StorageKey.Trait Self := {
    ink_storage_traits.storage.StorageKey.KEY `{H : State.Trait} := KEY;
  }.
End Impl_ink_storage_traits_storage_StorageKey_for_P.
End Impl_ink_storage_traits_storage_StorageKey_for_P.

Module Impl_ink_storage_traits_storage_StorableHint_for_P.
Section Impl_ink_storage_traits_storage_StorableHint_for_P.
  Context {P Key : Set}.
  
  Definition Self := P.
  
  Definition Type : Set := P.
  
  Definition PreferredKey : Set := ink_storage_traits.impls.AutoKey.
  
  Global Instance I :
      ink_storage_traits.storage.StorableHint.Trait Self (Key := Key) := {
  }.
End Impl_ink_storage_traits_storage_StorableHint_for_P.
End Impl_ink_storage_traits_storage_StorableHint_for_P.

Module storage.
  Module Storable.
    Class Trait (Self : Set) : Set := {
      encode
        `{H : State.Trait}
        :
        (ref Self) -> (mut_ref T) -> (M (H := H) unit);
      decode
        `{H : State.Trait}
        :
        (mut_ref I) ->
        (M (H := H) (core.result.Result Self parity_scale_codec.error.Error));
    }.
    
    Global Instance Method_encode `{H : State.Trait} `(Trait)
      : Notation.Dot "encode" := {
      Notation.dot := encode;
    }.
    Global Instance Method_decode `{H : State.Trait} `(Trait)
      : Notation.Dot "decode" := {
      Notation.dot := decode;
    }.
  End Storable.
  
  Module Impl_ink_storage_traits_storage_Storable_for_P.
  Section Impl_ink_storage_traits_storage_Storable_for_P.
    Context {P : Set}.
    
    Definition Self := P.
    
    Parameter encode : forall `{H : State.Trait},
        ref Self ->
        mut_ref T ->
        M (H := H) unit.
    
    Global Instance Method_encode `{H : State.Trait} :
      Notation.Dot "encode" := {
      Notation.dot := encode;
    }.
    
    Parameter decode : forall `{H : State.Trait},
        mut_ref I ->
        M (H := H) (core.result.Result Self parity_scale_codec.error.Error).
    
    Global Instance AssociatedFunction_decode `{H : State.Trait} :
      Notation.DoubleColon Self "decode" := {
      Notation.double_colon := decode;
    }.
    
    Global Instance I : ink_storage_traits.storage.Storable.Trait Self := {
      ink_storage_traits.storage.Storable.encode `{H : State.Trait} := encode;
      ink_storage_traits.storage.Storable.decode `{H : State.Trait} := decode;
    }.
  End Impl_ink_storage_traits_storage_Storable_for_P.
  End Impl_ink_storage_traits_storage_Storable_for_P.
  
  Module private.
    Module Sealed.
      Unset Primitive Projections.
      Class Trait (Self : Set) : Set := {
      }.
      Global Set Primitive Projections.
    End Sealed.
  End private.
  
  Module Packed.
    Unset Primitive Projections.
    Class Trait (Self : Set) : Set := {
    }.
    Global Set Primitive Projections.
  End Packed.
  
  Module StorageKey.
    Class Trait (Self : Set) : Set := {
      KEY `{H : State.Trait} : ink_primitives.key.Key;
    }.
    
    Global Instance Method_KEY `{H : State.Trait} `(Trait)
      : Notation.Dot "KEY" := {
      Notation.dot := KEY;
    }.
    Global Instance Method_key `{H : State.Trait} `(Trait)
      : Notation.Dot "key" := {
      Notation.dot (self : ref Self) :=
        (Pure Self::["KEY"]
        : M (H := H) ink_primitives.key.Key);
    }.
  End StorageKey.
  
  Module StorableHint.
    Class Trait
        (Self : Set) {Key : Set}
        {Type : Set}
        `{ink_storage_traits.storage.Storable.Trait Type}
        {PreferredKey : Set}
        `{ink_storage_traits.storage.StorageKey.Trait PreferredKey} :
        Set := {
      Type := Type;
      PreferredKey := PreferredKey;
    }.
    
    Global Instance Method_Type `{H : State.Trait} `(Trait)
      : Notation.DoubleColonType Self "Type" := {
      Notation.double_colon_type := Type;
    }.
    Global Instance Method_PreferredKey `{H : State.Trait} `(Trait)
      : Notation.DoubleColonType Self "PreferredKey" := {
      Notation.double_colon_type := PreferredKey;
    }.
  End StorableHint.
  
  Module AutoStorableHint.
    Class Trait
        (Self : Set) {Key : Set}
        {Type : Set}
        `{ink_storage_traits.storage.Storable.Trait Type} :
        Set := {
      Type := Type;
    }.
    
    Global Instance Method_Type `{H : State.Trait} `(Trait)
      : Notation.DoubleColonType Self "Type" := {
      Notation.double_colon_type := Type;
    }.
  End AutoStorableHint.
End storage.

Module Storable.
  Class Trait (Self : Set) : Set := {
    encode `{H : State.Trait} : (ref Self) -> (mut_ref T) -> (M (H := H) unit);
    decode
      `{H : State.Trait}
      :
      (mut_ref I) ->
      (M (H := H) (core.result.Result Self parity_scale_codec.error.Error));
  }.
  
  Global Instance Method_encode `{H : State.Trait} `(Trait)
    : Notation.Dot "encode" := {
    Notation.dot := encode;
  }.
  Global Instance Method_decode `{H : State.Trait} `(Trait)
    : Notation.Dot "decode" := {
    Notation.dot := decode;
  }.
End Storable.

Module Impl_ink_storage_traits_storage_Storable_for_P.
Section Impl_ink_storage_traits_storage_Storable_for_P.
  Context {P : Set}.
  
  Definition Self := P.
  
  Parameter encode : forall `{H : State.Trait},
      ref Self ->
      mut_ref T ->
      M (H := H) unit.
  
  Global Instance Method_encode `{H : State.Trait} : Notation.Dot "encode" := {
    Notation.dot := encode;
  }.
  
  Parameter decode : forall `{H : State.Trait},
      mut_ref I ->
      M (H := H) (core.result.Result Self parity_scale_codec.error.Error).
  
  Global Instance AssociatedFunction_decode `{H : State.Trait} :
    Notation.DoubleColon Self "decode" := {
    Notation.double_colon := decode;
  }.
  
  Global Instance I : ink_storage_traits.storage.Storable.Trait Self := {
    ink_storage_traits.storage.Storable.encode `{H : State.Trait} := encode;
    ink_storage_traits.storage.Storable.decode `{H : State.Trait} := decode;
  }.
End Impl_ink_storage_traits_storage_Storable_for_P.
End Impl_ink_storage_traits_storage_Storable_for_P.

Module private.
  Module Sealed.
    Unset Primitive Projections.
    Class Trait (Self : Set) : Set := {
    }.
    Global Set Primitive Projections.
  End Sealed.
End private.

Module Sealed.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Set := {
  }.
  Global Set Primitive Projections.
End Sealed.

Module Packed.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Set := {
  }.
  Global Set Primitive Projections.
End Packed.

Module StorageKey.
  Class Trait (Self : Set) : Set := {
    KEY `{H : State.Trait} : ink_primitives.key.Key;
  }.
  
  Global Instance Method_KEY `{H : State.Trait} `(Trait)
    : Notation.Dot "KEY" := {
    Notation.dot := KEY;
  }.
  Global Instance Method_key `{H : State.Trait} `(Trait)
    : Notation.Dot "key" := {
    Notation.dot (self : ref Self) :=
      (Pure Self::["KEY"]
      : M (H := H) ink_primitives.key.Key);
  }.
End StorageKey.

Module StorableHint.
  Class Trait
      (Self : Set) {Key : Set}
      {Type : Set}
      `{ink_storage_traits.storage.Storable.Trait Type}
      {PreferredKey : Set}
      `{ink_storage_traits.storage.StorageKey.Trait PreferredKey} :
      Set := {
    Type := Type;
    PreferredKey := PreferredKey;
  }.
  
  Global Instance Method_Type `{H : State.Trait} `(Trait)
    : Notation.DoubleColonType Self "Type" := {
    Notation.double_colon_type := Type;
  }.
  Global Instance Method_PreferredKey `{H : State.Trait} `(Trait)
    : Notation.DoubleColonType Self "PreferredKey" := {
    Notation.double_colon_type := PreferredKey;
  }.
End StorableHint.

Module AutoStorableHint.
  Class Trait
      (Self : Set) {Key : Set}
      {Type : Set}
      `{ink_storage_traits.storage.Storable.Trait Type} :
      Set := {
    Type := Type;
  }.
  
  Global Instance Method_Type `{H : State.Trait} `(Trait)
    : Notation.DoubleColonType Self "Type" := {
    Notation.double_colon_type := Type;
  }.
End AutoStorableHint.

Module layout.
  Module impls.
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
      Definition Self := ink_primitives.types.AccountId.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
      Definition Self := ink_primitives.types.Hash.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
      Definition Self := alloc.string.String.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_bool.
      Definition Self := bool.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_bool.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_char.
      Definition Self := char.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_char.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
      Definition Self := unit.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u8.
      Definition Self := u8.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u8.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u16.
      Definition Self := u16.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u16.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u32.
      Definition Self := u32.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u32.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u64.
      Definition Self := u64.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u64.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u128.
      Definition Self := u128.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u128.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i8.
      Definition Self := i8.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i8.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i16.
      Definition Self := i16.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i16.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i32.
      Definition Self := i32.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i32.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i64.
      Definition Self := i64.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i64.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i128.
      Definition Self := i128.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i128.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    Section Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
      Context {T : Set}.
      
      Definition Self := list T.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
    Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
      Context {T : Set}.
      
      Definition Self := alloc.boxed.Box T.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    Section
      Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
      Context {T : Set}.
      
      Definition Self := core.option.Option T.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    Section
      Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
      Context {T E : Set}.
      
      Definition Self := core.result.Result T E.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
    Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
      Context {T : Set}.
      
      Definition Self := alloc.vec.Vec T.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
    Section
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
      Context {K V : Set}.
      
      Definition Self := alloc.collections.btree.map.BTreeMap K V.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
    Section
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
      Context {T : Set}.
      
      Definition Self := alloc.collections.btree.set.BTreeSet T.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
    Section
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
      Context {T : Set}.
      
      Definition Self := alloc.collections.vec_deque.VecDeque T.
      
      Parameter layout : forall `{H : State.Trait},
          ref ink_primitives.key.Key ->
          M (H := H) ink_metadata.layout.Layout.
      
      Global Instance AssociatedFunction_layout `{H : State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I :
          ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout
          `{H : State.Trait}
          :=
          layout;
      }.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
  End impls.
  
  Module StorageLayout.
    Class Trait (Self : Set) : Set := {
      layout
        `{H : State.Trait}
        :
        (ref ink_primitives.key.Key) -> (M (H := H) ink_metadata.layout.Layout);
    }.
    
    Global Instance Method_layout `{H : State.Trait} `(Trait)
      : Notation.Dot "layout" := {
      Notation.dot := layout;
    }.
  End StorageLayout.
End layout.

Module impls.
  Module
    Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
    Definition Self := ink_primitives.types.AccountId.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
  
  Module
    Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
    Definition Self := ink_primitives.types.Hash.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
    Definition Self := alloc.string.String.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_bool.
    Definition Self := bool.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_bool.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_char.
    Definition Self := char.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_char.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
    Definition Self := unit.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_u8.
    Definition Self := u8.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_u8.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_u16.
    Definition Self := u16.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_u16.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_u32.
    Definition Self := u32.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_u32.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_u64.
    Definition Self := u64.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_u64.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_u128.
    Definition Self := u128.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_u128.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_i8.
    Definition Self := i8.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_i8.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_i16.
    Definition Self := i16.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_i16.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_i32.
    Definition Self := i32.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_i32.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_i64.
    Definition Self := i64.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_i64.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_i128.
    Definition Self := i128.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_i128.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    Context {T : Set}.
    
    Definition Self := list T.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
    Context {T : Set}.
    
    Definition Self := alloc.boxed.Box T.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    Context {T : Set}.
    
    Definition Self := core.option.Option T.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
  End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
  
  Module
    Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    Context {T E : Set}.
    
    Definition Self := core.result.Result T E.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
  End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
  
  Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
    Context {T : Set}.
    
    Definition Self := alloc.vec.Vec T.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
  
  Module
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
    Context {K V : Set}.
    
    Definition Self := alloc.collections.btree.map.BTreeMap K V.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
  
  Module
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
    Context {T : Set}.
    
    Definition Self := alloc.collections.btree.set.BTreeSet T.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
  
  Module
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
    Context {T : Set}.
    
    Definition Self := alloc.collections.vec_deque.VecDeque T.
    
    Parameter layout : forall `{H : State.Trait},
        ref ink_primitives.key.Key ->
        M (H := H) ink_metadata.layout.Layout.
    
    Global Instance AssociatedFunction_layout `{H : State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout
        `{H : State.Trait}
        :=
        layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
End impls.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
  Definition Self := ink_primitives.types.AccountId.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
  Definition Self := ink_primitives.types.Hash.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.

Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
  Definition Self := alloc.string.String.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.

Module Impl_ink_storage_traits_layout_StorageLayout_for_bool.
  Definition Self := bool.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_bool.

Module Impl_ink_storage_traits_layout_StorageLayout_for_char.
  Definition Self := char.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_char.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
  Definition Self := unit.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u8.
  Definition Self := u8.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_u8.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u16.
  Definition Self := u16.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_u16.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u32.
  Definition Self := u32.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_u32.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u64.
  Definition Self := u64.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_u64.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u128.
  Definition Self := u128.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_u128.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i8.
  Definition Self := i8.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_i8.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i16.
  Definition Self := i16.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_i16.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i32.
  Definition Self := i32.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_i32.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i64.
  Definition Self := i64.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_i64.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i128.
  Definition Self := i128.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_i128.

Definition TUPLE_NAME `{H : State.Trait} : ref str := run (Pure "(A)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.
  Context {A : Set}.
  
  Definition Self := A.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.

Definition TUPLE_NAME `{H : State.Trait} : ref str := run (Pure "(A, B)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.
  Context {A B : Set}.
  
  Definition Self := A * B.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.

Definition TUPLE_NAME `{H : State.Trait} : ref str := run (Pure "(A, B, C)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.
  Context {A B C : Set}.
  
  Definition Self := A * B * C.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.

Definition TUPLE_NAME `{H : State.Trait} : ref str := run (Pure "(A, B, C, D)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.
  Context {A B C D : Set}.
  
  Definition Self := A * B * C * D.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.

Definition TUPLE_NAME `{H : State.Trait} : ref str :=
  run (Pure "(A, B, C, D, E)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.
  Context {A B C D E : Set}.
  
  Definition Self := A * B * C * D * E.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.

Definition TUPLE_NAME `{H : State.Trait} : ref str :=
  run (Pure "(A, B, C, D, E, F)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.
  Context {A B C D E F : Set}.
  
  Definition Self := A * B * C * D * E * F.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.

Definition TUPLE_NAME `{H : State.Trait} : ref str :=
  run (Pure "(A, B, C, D, E, F, G)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.
  Context {A B C D E F G : Set}.
  
  Definition Self := A * B * C * D * E * F * G.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.

Definition TUPLE_NAME `{H : State.Trait} : ref str :=
  run (Pure "(A, B, C, D, E, F, G, H)").

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.
  Context {A B C D E F G H : Set}.
  
  Definition Self := A * B * C * D * E * F * G * H.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.

Definition TUPLE_NAME `{H : State.Trait} : ref str :=
  run (Pure "(A, B, C, D, E, F, G, H, I)").

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.
Section
  Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.
  Context {A B C D E F G H I : Set}.
  
  Definition Self := A * B * C * D * E * F * G * H * I.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.

Definition TUPLE_NAME `{H : State.Trait} : ref str :=
  run (Pure "(A, B, C, D, E, F, G, H, I, J)").

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.
Section
  Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.
  Context {A B C D E F G H I J : Set}.
  
  Definition Self := A * B * C * D * E * F * G * H * I * J.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
Section Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
  Context {T : Set}.
  
  Definition Self := list T.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.

Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
  Context {T : Set}.
  
  Definition Self := alloc.boxed.Box T.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T.

Module Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
Section Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
  Context {T : Set}.
  
  Definition Self := core.option.Option T.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.

Module Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
Section Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
  Context {T E : Set}.
  
  Definition Self := core.result.Result T E.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.

Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
  Context {T : Set}.
  
  Definition Self := alloc.vec.Vec T.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
Section
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
  Context {K V : Set}.
  
  Definition Self := alloc.collections.btree.map.BTreeMap K V.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
Section
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
  Context {T : Set}.
  
  Definition Self := alloc.collections.btree.set.BTreeSet T.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
Section
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
  Context {T : Set}.
  
  Definition Self := alloc.collections.vec_deque.VecDeque T.
  
  Parameter layout : forall `{H : State.Trait},
      ref ink_primitives.key.Key ->
      M (H := H) ink_metadata.layout.Layout.
  
  Global Instance AssociatedFunction_layout `{H : State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout `{H : State.Trait} := layout;
  }.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T.

Module StorageLayout.
  Class Trait (Self : Set) : Set := {
    layout
      `{H : State.Trait}
      :
      (ref ink_primitives.key.Key) -> (M (H := H) ink_metadata.layout.Layout);
  }.
  
  Global Instance Method_layout `{H : State.Trait} `(Trait)
    : Notation.Dot "layout" := {
    Notation.dot := layout;
  }.
End StorageLayout.
