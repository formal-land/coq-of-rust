(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module arch.
  Module segment.
    Definition value_SEGMENT_CHECK_INTERVAL
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      ltac:(M.monadic (M.alloc (| Ty.path "usize", Value.Integer IntegerKind.Usize 100 |))).
    
    Global Instance Instance_IsConstant_value_SEGMENT_CHECK_INTERVAL :
      M.IsFunction.C
        "openvm_circuit::arch::segment::SEGMENT_CHECK_INTERVAL"
        value_SEGMENT_CHECK_INTERVAL.
    Admitted.
    Global Typeclasses Opaque value_SEGMENT_CHECK_INTERVAL.
    
    Definition value_DEFAULT_MAX_SEGMENT_LEN
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      ltac:(M.monadic
        (M.alloc (|
          Ty.path "usize",
          M.call_closure (|
            Ty.path "usize",
            BinOp.Wrap.sub,
            [
              M.call_closure (|
                Ty.path "usize",
                BinOp.Wrap.shl,
                [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.I32 22 ]
              |);
              Value.Integer IntegerKind.Usize 100
            ]
          |)
        |))).
    
    Global Instance Instance_IsConstant_value_DEFAULT_MAX_SEGMENT_LEN :
      M.IsFunction.C
        "openvm_circuit::arch::segment::DEFAULT_MAX_SEGMENT_LEN"
        value_DEFAULT_MAX_SEGMENT_LEN.
    Admitted.
    Global Typeclasses Opaque value_DEFAULT_MAX_SEGMENT_LEN.
    
    Definition value_DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      ltac:(M.monadic
        (M.alloc (|
          Ty.path "usize",
          M.call_closure (|
            Ty.path "usize",
            BinOp.Wrap.mul,
            [
              M.read (|
                get_constant (|
                  "openvm_circuit::arch::segment::DEFAULT_MAX_SEGMENT_LEN",
                  Ty.path "usize"
                |)
              |);
              Value.Integer IntegerKind.Usize 120
            ]
          |)
        |))).
    
    Global Instance Instance_IsConstant_value_DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT :
      M.IsFunction.C
        "openvm_circuit::arch::segment::DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT"
        value_DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT.
    Admitted.
    Global Typeclasses Opaque value_DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT.
    
    (* Trait *)
    (* Empty module 'SegmentationStrategy' *)
    
    (* StructRecord
      {
        name := "DefaultSegmentationStrategy";
        const_params := [];
        ty_params := [];
        fields :=
          [ ("max_segment_len", Ty.path "usize"); ("max_cells_per_chip_in_segment", Ty.path "usize")
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
      Definition Self : Ty.t :=
        Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy" ],
                self
              |) in
            let f :=
              M.alloc (| Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ], f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field2_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| mk_str (| "DefaultSegmentationStrategy" |) |)
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "max_segment_len" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply (Ty.path "&") [] [ Ty.path "usize" ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                            "max_segment_len"
                          |)
                        |)
                      |)
                    |)
                  ]
                |);
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| mk_str (| "max_cells_per_chip_in_segment" |) |)
                |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| self |) |),
                                "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                                "max_cells_per_chip_in_segment"
                              |)
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
    
    Module Impl_core_clone_Clone_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
      Definition Self : Ty.t :=
        Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy" ],
                self
              |) in
            Value.mkStructRecord
              "openvm_circuit::arch::segment::DefaultSegmentationStrategy"
              []
              []
              [
                ("max_segment_len",
                  M.call_closure (|
                    Ty.path "usize",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "usize",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                              "max_segment_len"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("max_cells_per_chip_in_segment",
                  M.call_closure (|
                    Ty.path "usize",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "usize",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                              "max_cells_per_chip_in_segment"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
    
    Module Impl_core_default_Default_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
      Definition Self : Ty.t :=
        Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy".
      
      (*
          fn default() -> Self {
              Self {
                  max_segment_len: DEFAULT_MAX_SEGMENT_LEN,
                  max_cells_per_chip_in_segment: DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT,
              }
          }
      *)
      Definition default (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [] =>
          ltac:(M.monadic
            (Value.mkStructRecord
              "openvm_circuit::arch::segment::DefaultSegmentationStrategy"
              []
              []
              [
                ("max_segment_len",
                  M.read (|
                    get_constant (|
                      "openvm_circuit::arch::segment::DEFAULT_MAX_SEGMENT_LEN",
                      Ty.path "usize"
                    |)
                  |));
                ("max_cells_per_chip_in_segment",
                  M.read (|
                    get_constant (|
                      "openvm_circuit::arch::segment::DEFAULT_MAX_CELLS_PER_CHIP_IN_SEGMENT",
                      Ty.path "usize"
                    |)
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::default::Default"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("default", InstanceField.Method default) ].
    End Impl_core_default_Default_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
    
    Module Impl_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
      Definition Self : Ty.t :=
        Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy".
      
      (*
          pub fn new_with_max_segment_len(max_segment_len: usize) -> Self {
              Self {
                  max_segment_len,
                  max_cells_per_chip_in_segment: max_segment_len * 120,
              }
          }
      *)
      Definition new_with_max_segment_len
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        match ε, τ, α with
        | [], [], [ max_segment_len ] =>
          ltac:(M.monadic
            (let max_segment_len := M.alloc (| Ty.path "usize", max_segment_len |) in
            Value.mkStructRecord
              "openvm_circuit::arch::segment::DefaultSegmentationStrategy"
              []
              []
              [
                ("max_segment_len", M.read (| max_segment_len |));
                ("max_cells_per_chip_in_segment",
                  M.call_closure (|
                    Ty.path "usize",
                    BinOp.Wrap.mul,
                    [ M.read (| max_segment_len |); Value.Integer IntegerKind.Usize 120 ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new_with_max_segment_len :
        M.IsAssociatedFunction.C Self "new_with_max_segment_len" new_with_max_segment_len.
      Admitted.
      Global Typeclasses Opaque new_with_max_segment_len.
      
      (*
          pub fn new(max_segment_len: usize, max_cells_per_chip_in_segment: usize) -> Self {
              Self {
                  max_segment_len,
                  max_cells_per_chip_in_segment,
              }
          }
      *)
      Definition new (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ max_segment_len; max_cells_per_chip_in_segment ] =>
          ltac:(M.monadic
            (let max_segment_len := M.alloc (| Ty.path "usize", max_segment_len |) in
            let max_cells_per_chip_in_segment :=
              M.alloc (| Ty.path "usize", max_cells_per_chip_in_segment |) in
            Value.mkStructRecord
              "openvm_circuit::arch::segment::DefaultSegmentationStrategy"
              []
              []
              [
                ("max_segment_len", M.read (| max_segment_len |));
                ("max_cells_per_chip_in_segment", M.read (| max_cells_per_chip_in_segment |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new : M.IsAssociatedFunction.C Self "new" new.
      Admitted.
      Global Typeclasses Opaque new.
      
      (*
          pub fn max_segment_len(&self) -> usize {
              self.max_segment_len
          }
      *)
      Definition max_segment_len (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy" ],
                self
              |) in
            M.read (|
              M.SubPointer.get_struct_record_field (|
                M.deref (| M.read (| self |) |),
                "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                "max_segment_len"
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_max_segment_len :
        M.IsAssociatedFunction.C Self "max_segment_len" max_segment_len.
      Admitted.
      Global Typeclasses Opaque max_segment_len.
    End Impl_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
    
    Definition value_SEGMENTATION_BACKOFF_FACTOR
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      ltac:(M.monadic (M.alloc (| Ty.path "usize", Value.Integer IntegerKind.Usize 4 |))).
    
    Global Instance Instance_IsConstant_value_SEGMENTATION_BACKOFF_FACTOR :
      M.IsFunction.C
        "openvm_circuit::arch::segment::SEGMENTATION_BACKOFF_FACTOR"
        value_SEGMENTATION_BACKOFF_FACTOR.
    Admitted.
    Global Typeclasses Opaque value_SEGMENTATION_BACKOFF_FACTOR.
    
    Module Impl_openvm_circuit_arch_segment_SegmentationStrategy_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
      Definition Self : Ty.t :=
        Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy".
      
      (*
          fn should_segment(
              &self,
              air_names: &[String],
              trace_heights: &[usize],
              trace_cells: &[usize],
          ) -> bool {
              for (i, &height) in trace_heights.iter().enumerate() {
                  if height > self.max_segment_len {
                      tracing::info!(
                          "Should segment because chip {} (name: {}) has height {}",
                          i,
                          air_names[i],
                          height
                      );
                      return true;
                  }
              }
              for (i, &num_cells) in trace_cells.iter().enumerate() {
                  if num_cells > self.max_cells_per_chip_in_segment {
                      tracing::info!(
                          "Should segment because chip {} (name: {}) has {} cells",
                          i,
                          air_names[i],
                          num_cells
                      );
                      return true;
                  }
              }
              false
          }
      *)
      Definition should_segment (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; air_names; trace_heights; trace_cells ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy" ],
                self
              |) in
            let air_names :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "slice") [] [ Ty.path "alloc::string::String" ] ],
                air_names
              |) in
            let trace_heights :=
              M.alloc (|
                Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ] ],
                trace_heights
              |) in
            let trace_cells :=
              M.alloc (|
                Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ] ],
                trace_cells
              |) in
            M.catch_return (Ty.path "bool") (|
              ltac:(M.monadic
                (M.read (|
                  let~ _ : Ty.tuple [] :=
                    M.read (|
                      M.use
                        (M.alloc (|
                          Ty.tuple [],
                          M.match_operator (|
                            Ty.tuple [],
                            M.alloc (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [ Ty.path "usize" ]
                                ],
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [ Ty.path "usize" ]
                                  ],
                                M.get_trait_method (|
                                  "core::iter::traits::collect::IntoIterator",
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [ Ty.path "usize" ]
                                    ],
                                  [],
                                  [],
                                  "into_iter",
                                  [],
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [ Ty.path "usize" ]
                                      ],
                                    M.get_trait_method (|
                                      "core::iter::traits::iterator::Iterator",
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [ Ty.path "usize" ],
                                      [],
                                      [],
                                      "enumerate",
                                      [],
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [ Ty.path "usize" ],
                                        M.get_associated_function (|
                                          Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ],
                                          "iter",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| trace_heights |) |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let iter :=
                                    M.copy (|
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [ Ty.path "usize" ]
                                        ],
                                      γ
                                    |) in
                                  M.read (|
                                    M.loop (|
                                      Ty.tuple [],
                                      ltac:(M.monadic
                                        (let~ _ : Ty.tuple [] :=
                                          M.match_operator (|
                                            Ty.tuple [],
                                            M.alloc (|
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.path "usize";
                                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                                    ]
                                                ],
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.path "usize";
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.path "usize" ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path
                                                      "core::iter::adapters::enumerate::Enumerate")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [ Ty.path "usize" ]
                                                    ],
                                                  [],
                                                  [],
                                                  "next",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.MutRef,
                                                    M.deref (|
                                                      M.borrow (| Pointer.Kind.MutRef, iter |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let _ :=
                                                    M.is_struct_tuple (|
                                                      γ,
                                                      "core::option::Option::None"
                                                    |) in
                                                  M.never_to_any (| M.read (| M.break (||) |) |)));
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ0_0 :=
                                                    M.SubPointer.get_struct_tuple_field (|
                                                      γ,
                                                      "core::option::Option::Some",
                                                      0
                                                    |) in
                                                  let γ1_0 :=
                                                    M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                                  let γ1_1 :=
                                                    M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                                  let i := M.copy (| Ty.path "usize", γ1_0 |) in
                                                  let γ1_1 := M.read (| γ1_1 |) in
                                                  let height :=
                                                    M.copy (| Ty.path "usize", γ1_1 |) in
                                                  M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ :=
                                                            M.use
                                                              (M.alloc (|
                                                                Ty.path "bool",
                                                                M.call_closure (|
                                                                  Ty.path "bool",
                                                                  BinOp.gt,
                                                                  [
                                                                    M.read (| height |);
                                                                    M.read (|
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        M.deref (|
                                                                          M.read (| self |)
                                                                        |),
                                                                        "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                                                                        "max_segment_len"
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)) in
                                                          let _ :=
                                                            is_constant_or_break_match (|
                                                              M.read (| γ |),
                                                              Value.Bool true
                                                            |) in
                                                          M.never_to_any (|
                                                            M.read (|
                                                              let~ _ : Ty.tuple [] :=
                                                                M.read (|
                                                                  let~ enabled : Ty.path "bool" :=
                                                                    LogicalOp.and (|
                                                                      LogicalOp.and (|
                                                                        M.call_closure (|
                                                                          Ty.path "bool",
                                                                          M.get_trait_method (|
                                                                            "core::cmp::PartialOrd",
                                                                            Ty.path
                                                                              "tracing_core::metadata::Level",
                                                                            [],
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::metadata::LevelFilter"
                                                                            ],
                                                                            "le",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              get_associated_constant (|
                                                                                Ty.path
                                                                                  "tracing_core::metadata::Level",
                                                                                "INFO",
                                                                                Ty.path
                                                                                  "tracing_core::metadata::Level"
                                                                              |)
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              get_constant (|
                                                                                "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                Ty.path
                                                                                  "tracing_core::metadata::LevelFilter"
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |),
                                                                        ltac:(M.monadic
                                                                          (M.call_closure (|
                                                                            Ty.path "bool",
                                                                            M.get_trait_method (|
                                                                              "core::cmp::PartialOrd",
                                                                              Ty.path
                                                                                "tracing_core::metadata::Level",
                                                                              [],
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::metadata::LevelFilter"
                                                                              ],
                                                                              "le",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                get_associated_constant (|
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::Level",
                                                                                  "INFO",
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::Level"
                                                                                |)
                                                                              |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.alloc (|
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                  M.call_closure (|
                                                                                    Ty.path
                                                                                      "tracing_core::metadata::LevelFilter",
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "tracing_core::metadata::LevelFilter",
                                                                                      "current",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    []
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)))
                                                                      |),
                                                                      ltac:(M.monadic
                                                                        (M.read (|
                                                                          let~ interest :
                                                                              Ty.path
                                                                                "tracing_core::subscriber::Interest" :=
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::subscriber::Interest",
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                "interest",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      get_constant (|
                                                                                        "openvm_circuit::arch::segment::should_segment::__CALLSITE",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                          ]
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Ty.path "bool",
                                                                            LogicalOp.and (|
                                                                              UnOp.not (|
                                                                                M.call_closure (|
                                                                                  Ty.path "bool",
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "tracing_core::subscriber::Interest",
                                                                                    "is_never",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      interest
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              ltac:(M.monadic
                                                                                (M.call_closure (|
                                                                                  Ty.path "bool",
                                                                                  M.get_function (|
                                                                                    "tracing::__macro_support::__is_enabled",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::metadata::Metadata"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "tracing_core::callsite::Callsite",
                                                                                            Ty.path
                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                            [],
                                                                                            [],
                                                                                            "metadata",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.read (|
                                                                                                  get_constant (|
                                                                                                    "openvm_circuit::arch::segment::should_segment::__CALLSITE",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.read (|
                                                                                      interest
                                                                                    |)
                                                                                  ]
                                                                                |)))
                                                                            |)
                                                                          |)
                                                                        |)))
                                                                    |) in
                                                                  M.alloc (|
                                                                    Ty.tuple [],
                                                                    M.match_operator (|
                                                                      Ty.tuple [],
                                                                      M.alloc (|
                                                                        Ty.tuple [],
                                                                        Value.Tuple []
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ :=
                                                                              M.use enabled in
                                                                            let _ :=
                                                                              is_constant_or_break_match (|
                                                                                M.read (| γ |),
                                                                                Value.Bool true
                                                                              |) in
                                                                            M.read (|
                                                                              let~ _ :
                                                                                  Ty.tuple [] :=
                                                                                M.call_closure (|
                                                                                  Ty.tuple [],
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::ValueSet"
                                                                                      ]
                                                                                      (Ty.tuple []),
                                                                                    [],
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::ValueSet"
                                                                                        ]
                                                                                    ],
                                                                                    "call",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.alloc (|
                                                                                        Ty.function
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::ValueSet"
                                                                                          ]
                                                                                          (Ty.tuple
                                                                                            []),
                                                                                        M.closure
                                                                                          (fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              match
                                                                                                γ
                                                                                              with
                                                                                              | [ α0
                                                                                                  ] =>
                                                                                                ltac:(M.monadic
                                                                                                  (M.match_operator (|
                                                                                                    Ty.tuple
                                                                                                      [],
                                                                                                    M.alloc (|
                                                                                                      Ty.path
                                                                                                        "tracing_core::field::ValueSet",
                                                                                                      α0
                                                                                                    |),
                                                                                                    [
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                value_set :=
                                                                                                            M.copy (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::field::ValueSet",
                                                                                                              γ
                                                                                                            |) in
                                                                                                          M.read (|
                                                                                                            let~
                                                                                                                  meta :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                  ] :=
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "tracing_core::callsite::Callsite",
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "metadata",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        get_constant (|
                                                                                                                          "openvm_circuit::arch::segment::should_segment::__CALLSITE",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                            ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  _ :
                                                                                                                Ty.tuple
                                                                                                                  [] :=
                                                                                                              M.call_closure (|
                                                                                                                Ty.tuple
                                                                                                                  [],
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::event::Event",
                                                                                                                  "dispatch",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        meta
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        value_set
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |) in
                                                                                                            M.alloc (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            |)
                                                                                                          |)))
                                                                                                    ]
                                                                                                  |)))
                                                                                              | _ =>
                                                                                                M.impossible
                                                                                                  "wrong number of arguments"
                                                                                              end))
                                                                                      |)
                                                                                    |);
                                                                                    Value.Tuple
                                                                                      [
                                                                                        M.read (|
                                                                                          let~
                                                                                                iter :
                                                                                              Ty.path
                                                                                                "tracing_core::field::Iter" :=
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "tracing_core::field::Iter",
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "tracing_core::field::FieldSet",
                                                                                                "iter",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::FieldSet"
                                                                                                        ],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Metadata",
                                                                                                        "fields",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                Ty.path
                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                [],
                                                                                                                [],
                                                                                                                "metadata",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "openvm_circuit::arch::segment::should_segment::__CALLSITE",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                          ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Ty.path
                                                                                              "tracing_core::field::ValueSet",
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "tracing_core::field::ValueSet",
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "tracing_core::field::FieldSet",
                                                                                                "value_set",
                                                                                                [],
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "tracing_core::field::Field"
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.dyn
                                                                                                                    [
                                                                                                                      ("tracing_core::field::Value::Trait",
                                                                                                                        [])
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::FieldSet"
                                                                                                        ],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Metadata",
                                                                                                        "fields",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                Ty.path
                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                [],
                                                                                                                [],
                                                                                                                "metadata",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "openvm_circuit::arch::segment::should_segment::__CALLSITE",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                          ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |);
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.alloc (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "array")
                                                                                                          [
                                                                                                            Value.Integer
                                                                                                              IntegerKind.Usize
                                                                                                              1
                                                                                                          ]
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::Field"
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::option::Option")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.dyn
                                                                                                                          [
                                                                                                                            ("tracing_core::field::Value::Trait",
                                                                                                                              [])
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                        Value.Array
                                                                                                          [
                                                                                                            Value.Tuple
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.alloc (|
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::Field",
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "tracing_core::field::Field",
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "core::option::Option")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::field::Field"
                                                                                                                          ],
                                                                                                                        "expect",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::option::Option")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "tracing_core::field::Field"
                                                                                                                            ],
                                                                                                                          M.get_trait_method (|
                                                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::field::Iter",
                                                                                                                            [],
                                                                                                                            [],
                                                                                                                            "next",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                              M.deref (|
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                                  iter
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.deref (|
                                                                                                                            mk_str (|
                                                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "core::option::Option::Some"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.dyn
                                                                                                                          [
                                                                                                                            ("tracing_core::field::Value::Trait",
                                                                                                                              [])
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      M.use
                                                                                                                        (M.alloc (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                    [])
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          M.call_closure (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "&")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.dyn
                                                                                                                                  [
                                                                                                                                    ("tracing_core::field::Value::Trait",
                                                                                                                                      [])
                                                                                                                                  ]
                                                                                                                              ],
                                                                                                                            M.pointer_coercion
                                                                                                                              M.PointerCoercion.Unsize
                                                                                                                              (Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments"
                                                                                                                                ])
                                                                                                                              (Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.dyn
                                                                                                                                    [
                                                                                                                                      ("tracing_core::field::Value::Trait",
                                                                                                                                        [])
                                                                                                                                    ]
                                                                                                                                ]),
                                                                                                                            [
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.deref (|
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.alloc (|
                                                                                                                                      Ty.path
                                                                                                                                        "core::fmt::Arguments",
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.path
                                                                                                                                          "core::fmt::Arguments",
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          [
                                                                                                                                            Value.Integer
                                                                                                                                              IntegerKind.Usize
                                                                                                                                              3;
                                                                                                                                            Value.Integer
                                                                                                                                              IntegerKind.Usize
                                                                                                                                              3
                                                                                                                                          ],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        3
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "str"
                                                                                                                                                        ]
                                                                                                                                                    ],
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      mk_str (|
                                                                                                                                                        "Should segment because chip "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        " (name: "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        ") has height "
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |);
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        3
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument"
                                                                                                                                                    ],
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                          "new_display",
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "usize"
                                                                                                                                                          ]
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                i
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |);
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                          "new_display",
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "alloc::string::String"
                                                                                                                                                          ]
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                                                                  M.deref (|
                                                                                                                                                                    M.read (|
                                                                                                                                                                      air_names
                                                                                                                                                                    |)
                                                                                                                                                                  |),
                                                                                                                                                                  M.read (|
                                                                                                                                                                    i
                                                                                                                                                                  |)
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |);
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                          "new_display",
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "usize"
                                                                                                                                                          ]
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                height
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |))
                                                                                                                    |)
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                  ]
                                                                                |) in
                                                                              M.alloc (|
                                                                                Ty.tuple [],
                                                                                Value.Tuple []
                                                                              |)
                                                                            |)));
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (Value.Tuple []))
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |) in
                                                              M.return_ (| Value.Bool true |)
                                                            |)
                                                          |)));
                                                      fun γ => ltac:(M.monadic (Value.Tuple []))
                                                    ]
                                                  |)))
                                            ]
                                          |) in
                                        M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                    |)
                                  |)))
                            ]
                          |)
                        |))
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.read (|
                      M.use
                        (M.alloc (|
                          Ty.tuple [],
                          M.match_operator (|
                            Ty.tuple [],
                            M.alloc (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [ Ty.path "usize" ]
                                ],
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [ Ty.path "usize" ]
                                  ],
                                M.get_trait_method (|
                                  "core::iter::traits::collect::IntoIterator",
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [ Ty.path "usize" ]
                                    ],
                                  [],
                                  [],
                                  "into_iter",
                                  [],
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [ Ty.path "usize" ]
                                      ],
                                    M.get_trait_method (|
                                      "core::iter::traits::iterator::Iterator",
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [ Ty.path "usize" ],
                                      [],
                                      [],
                                      "enumerate",
                                      [],
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [ Ty.path "usize" ],
                                        M.get_associated_function (|
                                          Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ],
                                          "iter",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| trace_cells |) |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let iter :=
                                    M.copy (|
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [ Ty.path "usize" ]
                                        ],
                                      γ
                                    |) in
                                  M.read (|
                                    M.loop (|
                                      Ty.tuple [],
                                      ltac:(M.monadic
                                        (let~ _ : Ty.tuple [] :=
                                          M.match_operator (|
                                            Ty.tuple [],
                                            M.alloc (|
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.path "usize";
                                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                                    ]
                                                ],
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.path "usize";
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.path "usize" ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path
                                                      "core::iter::adapters::enumerate::Enumerate")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [ Ty.path "usize" ]
                                                    ],
                                                  [],
                                                  [],
                                                  "next",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.MutRef,
                                                    M.deref (|
                                                      M.borrow (| Pointer.Kind.MutRef, iter |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let _ :=
                                                    M.is_struct_tuple (|
                                                      γ,
                                                      "core::option::Option::None"
                                                    |) in
                                                  M.never_to_any (| M.read (| M.break (||) |) |)));
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ0_0 :=
                                                    M.SubPointer.get_struct_tuple_field (|
                                                      γ,
                                                      "core::option::Option::Some",
                                                      0
                                                    |) in
                                                  let γ1_0 :=
                                                    M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                                  let γ1_1 :=
                                                    M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                                  let i := M.copy (| Ty.path "usize", γ1_0 |) in
                                                  let γ1_1 := M.read (| γ1_1 |) in
                                                  let num_cells :=
                                                    M.copy (| Ty.path "usize", γ1_1 |) in
                                                  M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ :=
                                                            M.use
                                                              (M.alloc (|
                                                                Ty.path "bool",
                                                                M.call_closure (|
                                                                  Ty.path "bool",
                                                                  BinOp.gt,
                                                                  [
                                                                    M.read (| num_cells |);
                                                                    M.read (|
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        M.deref (|
                                                                          M.read (| self |)
                                                                        |),
                                                                        "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                                                                        "max_cells_per_chip_in_segment"
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)) in
                                                          let _ :=
                                                            is_constant_or_break_match (|
                                                              M.read (| γ |),
                                                              Value.Bool true
                                                            |) in
                                                          M.never_to_any (|
                                                            M.read (|
                                                              let~ _ : Ty.tuple [] :=
                                                                M.read (|
                                                                  let~ enabled : Ty.path "bool" :=
                                                                    LogicalOp.and (|
                                                                      LogicalOp.and (|
                                                                        M.call_closure (|
                                                                          Ty.path "bool",
                                                                          M.get_trait_method (|
                                                                            "core::cmp::PartialOrd",
                                                                            Ty.path
                                                                              "tracing_core::metadata::Level",
                                                                            [],
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::metadata::LevelFilter"
                                                                            ],
                                                                            "le",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              get_associated_constant (|
                                                                                Ty.path
                                                                                  "tracing_core::metadata::Level",
                                                                                "INFO",
                                                                                Ty.path
                                                                                  "tracing_core::metadata::Level"
                                                                              |)
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              get_constant (|
                                                                                "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                Ty.path
                                                                                  "tracing_core::metadata::LevelFilter"
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |),
                                                                        ltac:(M.monadic
                                                                          (M.call_closure (|
                                                                            Ty.path "bool",
                                                                            M.get_trait_method (|
                                                                              "core::cmp::PartialOrd",
                                                                              Ty.path
                                                                                "tracing_core::metadata::Level",
                                                                              [],
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::metadata::LevelFilter"
                                                                              ],
                                                                              "le",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                get_associated_constant (|
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::Level",
                                                                                  "INFO",
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::Level"
                                                                                |)
                                                                              |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.alloc (|
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                  M.call_closure (|
                                                                                    Ty.path
                                                                                      "tracing_core::metadata::LevelFilter",
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "tracing_core::metadata::LevelFilter",
                                                                                      "current",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    []
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)))
                                                                      |),
                                                                      ltac:(M.monadic
                                                                        (M.read (|
                                                                          let~ interest :
                                                                              Ty.path
                                                                                "tracing_core::subscriber::Interest" :=
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::subscriber::Interest",
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                "interest",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      get_constant (|
                                                                                        "openvm_circuit::arch::segment::should_segment::__CALLSITE'1",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                          ]
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Ty.path "bool",
                                                                            LogicalOp.and (|
                                                                              UnOp.not (|
                                                                                M.call_closure (|
                                                                                  Ty.path "bool",
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "tracing_core::subscriber::Interest",
                                                                                    "is_never",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      interest
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              ltac:(M.monadic
                                                                                (M.call_closure (|
                                                                                  Ty.path "bool",
                                                                                  M.get_function (|
                                                                                    "tracing::__macro_support::__is_enabled",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::metadata::Metadata"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "tracing_core::callsite::Callsite",
                                                                                            Ty.path
                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                            [],
                                                                                            [],
                                                                                            "metadata",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.read (|
                                                                                                  get_constant (|
                                                                                                    "openvm_circuit::arch::segment::should_segment::__CALLSITE'1",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.read (|
                                                                                      interest
                                                                                    |)
                                                                                  ]
                                                                                |)))
                                                                            |)
                                                                          |)
                                                                        |)))
                                                                    |) in
                                                                  M.alloc (|
                                                                    Ty.tuple [],
                                                                    M.match_operator (|
                                                                      Ty.tuple [],
                                                                      M.alloc (|
                                                                        Ty.tuple [],
                                                                        Value.Tuple []
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ :=
                                                                              M.use enabled in
                                                                            let _ :=
                                                                              is_constant_or_break_match (|
                                                                                M.read (| γ |),
                                                                                Value.Bool true
                                                                              |) in
                                                                            M.read (|
                                                                              let~ _ :
                                                                                  Ty.tuple [] :=
                                                                                M.call_closure (|
                                                                                  Ty.tuple [],
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::ValueSet"
                                                                                      ]
                                                                                      (Ty.tuple []),
                                                                                    [],
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::ValueSet"
                                                                                        ]
                                                                                    ],
                                                                                    "call",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.alloc (|
                                                                                        Ty.function
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::ValueSet"
                                                                                          ]
                                                                                          (Ty.tuple
                                                                                            []),
                                                                                        M.closure
                                                                                          (fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              match
                                                                                                γ
                                                                                              with
                                                                                              | [ α0
                                                                                                  ] =>
                                                                                                ltac:(M.monadic
                                                                                                  (M.match_operator (|
                                                                                                    Ty.tuple
                                                                                                      [],
                                                                                                    M.alloc (|
                                                                                                      Ty.path
                                                                                                        "tracing_core::field::ValueSet",
                                                                                                      α0
                                                                                                    |),
                                                                                                    [
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                value_set :=
                                                                                                            M.copy (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::field::ValueSet",
                                                                                                              γ
                                                                                                            |) in
                                                                                                          M.read (|
                                                                                                            let~
                                                                                                                  meta :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                  ] :=
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "tracing_core::callsite::Callsite",
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "metadata",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        get_constant (|
                                                                                                                          "openvm_circuit::arch::segment::should_segment::__CALLSITE'1",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                            ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  _ :
                                                                                                                Ty.tuple
                                                                                                                  [] :=
                                                                                                              M.call_closure (|
                                                                                                                Ty.tuple
                                                                                                                  [],
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::event::Event",
                                                                                                                  "dispatch",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        meta
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        value_set
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |) in
                                                                                                            M.alloc (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            |)
                                                                                                          |)))
                                                                                                    ]
                                                                                                  |)))
                                                                                              | _ =>
                                                                                                M.impossible
                                                                                                  "wrong number of arguments"
                                                                                              end))
                                                                                      |)
                                                                                    |);
                                                                                    Value.Tuple
                                                                                      [
                                                                                        M.read (|
                                                                                          let~
                                                                                                iter :
                                                                                              Ty.path
                                                                                                "tracing_core::field::Iter" :=
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "tracing_core::field::Iter",
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "tracing_core::field::FieldSet",
                                                                                                "iter",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::FieldSet"
                                                                                                        ],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Metadata",
                                                                                                        "fields",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                Ty.path
                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                [],
                                                                                                                [],
                                                                                                                "metadata",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "openvm_circuit::arch::segment::should_segment::__CALLSITE'1",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                          ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Ty.path
                                                                                              "tracing_core::field::ValueSet",
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "tracing_core::field::ValueSet",
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "tracing_core::field::FieldSet",
                                                                                                "value_set",
                                                                                                [],
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "tracing_core::field::Field"
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.dyn
                                                                                                                    [
                                                                                                                      ("tracing_core::field::Value::Trait",
                                                                                                                        [])
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::FieldSet"
                                                                                                        ],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Metadata",
                                                                                                        "fields",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                Ty.path
                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                [],
                                                                                                                [],
                                                                                                                "metadata",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "openvm_circuit::arch::segment::should_segment::__CALLSITE'1",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                          ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |);
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.alloc (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "array")
                                                                                                          [
                                                                                                            Value.Integer
                                                                                                              IntegerKind.Usize
                                                                                                              1
                                                                                                          ]
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::Field"
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::option::Option")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.dyn
                                                                                                                          [
                                                                                                                            ("tracing_core::field::Value::Trait",
                                                                                                                              [])
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                        Value.Array
                                                                                                          [
                                                                                                            Value.Tuple
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.alloc (|
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::Field",
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "tracing_core::field::Field",
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "core::option::Option")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::field::Field"
                                                                                                                          ],
                                                                                                                        "expect",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::option::Option")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "tracing_core::field::Field"
                                                                                                                            ],
                                                                                                                          M.get_trait_method (|
                                                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::field::Iter",
                                                                                                                            [],
                                                                                                                            [],
                                                                                                                            "next",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                              M.deref (|
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                                  iter
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.deref (|
                                                                                                                            mk_str (|
                                                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "core::option::Option::Some"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.dyn
                                                                                                                          [
                                                                                                                            ("tracing_core::field::Value::Trait",
                                                                                                                              [])
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      M.use
                                                                                                                        (M.alloc (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                    [])
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          M.call_closure (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "&")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.dyn
                                                                                                                                  [
                                                                                                                                    ("tracing_core::field::Value::Trait",
                                                                                                                                      [])
                                                                                                                                  ]
                                                                                                                              ],
                                                                                                                            M.pointer_coercion
                                                                                                                              M.PointerCoercion.Unsize
                                                                                                                              (Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments"
                                                                                                                                ])
                                                                                                                              (Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.dyn
                                                                                                                                    [
                                                                                                                                      ("tracing_core::field::Value::Trait",
                                                                                                                                        [])
                                                                                                                                    ]
                                                                                                                                ]),
                                                                                                                            [
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.deref (|
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.alloc (|
                                                                                                                                      Ty.path
                                                                                                                                        "core::fmt::Arguments",
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.path
                                                                                                                                          "core::fmt::Arguments",
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::Arguments",
                                                                                                                                          "new_v1",
                                                                                                                                          [
                                                                                                                                            Value.Integer
                                                                                                                                              IntegerKind.Usize
                                                                                                                                              4;
                                                                                                                                            Value.Integer
                                                                                                                                              IntegerKind.Usize
                                                                                                                                              3
                                                                                                                                          ],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        4
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "str"
                                                                                                                                                        ]
                                                                                                                                                    ],
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      mk_str (|
                                                                                                                                                        "Should segment because chip "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        " (name: "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        ") has "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        " cells"
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |);
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        3
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument"
                                                                                                                                                    ],
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                          "new_display",
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "usize"
                                                                                                                                                          ]
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                i
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |);
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                          "new_display",
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "alloc::string::String"
                                                                                                                                                          ]
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                                                                  M.deref (|
                                                                                                                                                                    M.read (|
                                                                                                                                                                      air_names
                                                                                                                                                                    |)
                                                                                                                                                                  |),
                                                                                                                                                                  M.read (|
                                                                                                                                                                    i
                                                                                                                                                                  |)
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |);
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                          "new_display",
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "usize"
                                                                                                                                                          ]
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                num_cells
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |))
                                                                                                                    |)
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                  ]
                                                                                |) in
                                                                              M.alloc (|
                                                                                Ty.tuple [],
                                                                                Value.Tuple []
                                                                              |)
                                                                            |)));
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (Value.Tuple []))
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |) in
                                                              M.return_ (| Value.Bool true |)
                                                            |)
                                                          |)));
                                                      fun γ => ltac:(M.monadic (Value.Tuple []))
                                                    ]
                                                  |)))
                                            ]
                                          |) in
                                        M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                    |)
                                  |)))
                            ]
                          |)
                        |))
                    |) in
                  M.alloc (| Ty.path "bool", Value.Bool false |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn stricter_strategy(&self) -> Arc<dyn SegmentationStrategy> {
              Arc::new(Self {
                  max_segment_len: self.max_segment_len / SEGMENTATION_BACKOFF_FACTOR,
                  max_cells_per_chip_in_segment: self.max_cells_per_chip_in_segment
                      / SEGMENTATION_BACKOFF_FACTOR,
              })
          }
      *)
      Definition stricter_strategy (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy" ],
                self
              |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                []
                [
                  Ty.dyn [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", []) ];
                  Ty.path "alloc::alloc::Global"
                ],
              M.pointer_coercion
                M.PointerCoercion.Unsize
                (Ty.apply
                  (Ty.path "alloc::sync::Arc")
                  []
                  [
                    Ty.dyn [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", []) ];
                    Ty.path "alloc::alloc::Global"
                  ])
                (Ty.apply
                  (Ty.path "alloc::sync::Arc")
                  []
                  [
                    Ty.dyn [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", []) ];
                    Ty.path "alloc::alloc::Global"
                  ]),
              [
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::sync::Arc")
                    []
                    [
                      Ty.dyn [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", []) ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply
                      (Ty.path "alloc::sync::Arc")
                      []
                      [
                        Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy";
                        Ty.path "alloc::alloc::Global"
                      ])
                    (Ty.apply
                      (Ty.path "alloc::sync::Arc")
                      []
                      [
                        Ty.dyn
                          [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", []) ];
                        Ty.path "alloc::alloc::Global"
                      ]),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        []
                        [
                          Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy";
                          Ty.path "alloc::alloc::Global"
                        ],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [
                            Ty.path "openvm_circuit::arch::segment::DefaultSegmentationStrategy";
                            Ty.path "alloc::alloc::Global"
                          ],
                        "new",
                        [],
                        []
                      |),
                      [
                        Value.mkStructRecord
                          "openvm_circuit::arch::segment::DefaultSegmentationStrategy"
                          []
                          []
                          [
                            ("max_segment_len",
                              M.call_closure (|
                                Ty.path "usize",
                                BinOp.Wrap.div,
                                [
                                  M.read (|
                                    M.SubPointer.get_struct_record_field (|
                                      M.deref (| M.read (| self |) |),
                                      "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                                      "max_segment_len"
                                    |)
                                  |);
                                  M.read (|
                                    get_constant (|
                                      "openvm_circuit::arch::segment::SEGMENTATION_BACKOFF_FACTOR",
                                      Ty.path "usize"
                                    |)
                                  |)
                                ]
                              |));
                            ("max_cells_per_chip_in_segment",
                              M.call_closure (|
                                Ty.path "usize",
                                BinOp.Wrap.div,
                                [
                                  M.read (|
                                    M.SubPointer.get_struct_record_field (|
                                      M.deref (| M.read (| self |) |),
                                      "openvm_circuit::arch::segment::DefaultSegmentationStrategy",
                                      "max_cells_per_chip_in_segment"
                                    |)
                                  |);
                                  M.read (|
                                    get_constant (|
                                      "openvm_circuit::arch::segment::SEGMENTATION_BACKOFF_FACTOR",
                                      Ty.path "usize"
                                    |)
                                  |)
                                ]
                              |))
                          ]
                      ]
                    |)
                  ]
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "openvm_circuit::arch::segment::SegmentationStrategy"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *)
          [
            ("should_segment", InstanceField.Method should_segment);
            ("stricter_strategy", InstanceField.Method stricter_strategy)
          ].
    End Impl_openvm_circuit_arch_segment_SegmentationStrategy_for_openvm_circuit_arch_segment_DefaultSegmentationStrategy.
    
    (* StructRecord
      {
        name := "ExecutionSegment";
        const_params := [];
        ty_params := [ "F"; "VC" ];
        fields :=
          [
            ("chip_complex",
              Ty.apply
                (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                []
                [
                  F;
                  Ty.associated_in_trait
                    "openvm_circuit::arch::config::VmConfig"
                    []
                    [ F ]
                    VC
                    "Executor";
                  Ty.associated_in_trait
                    "openvm_circuit::arch::config::VmConfig"
                    []
                    [ F ]
                    VC
                    "Periphery"
                ]);
            ("final_memory",
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [
                  Ty.apply
                    (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                    [
                      M.unevaluated_const
                        (mk_str (|
                          "openvm_circuit_system_memory_controller_MemoryImage_discriminant"
                        |))
                    ]
                    [ F ]
                ]);
            ("since_last_segment_check", Ty.path "usize");
            ("trace_height_constraints",
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [
                  Ty.path "openvm_stark_backend::keygen::types::LinearConstraint";
                  Ty.path "alloc::alloc::Global"
                ]);
            ("air_names",
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [ Ty.path "alloc::string::String"; Ty.path "alloc::alloc::Global" ]);
            ("metrics", Ty.path "openvm_circuit::metrics::VmMetrics")
          ];
      } *)
    
    (* StructRecord
      {
        name := "ExecutionSegmentState";
        const_params := [];
        ty_params := [];
        fields := [ ("pc", Ty.path "u32"); ("is_terminated", Ty.path "bool") ];
      } *)
    
    Module Impl_openvm_circuit_arch_segment_ExecutionSegment_F_VC.
      Definition Self (F VC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_circuit::arch::segment::ExecutionSegment") [] [ F; VC ].
      
      (*
          pub fn new(
              config: &VC,
              program: Program<F>,
              init_streams: Streams<F>,
              initial_memory: Option<MemoryImage<F>>,
              trace_height_constraints: Vec<LinearConstraint>,
              #[allow(unused_variables)] fn_bounds: FnBounds,
          ) -> Self {
              let mut chip_complex = config.create_chip_complex().unwrap();
              chip_complex.set_streams(init_streams);
              let program = if !config.system().profiling {
                  program.strip_debug_infos()
              } else {
                  program
              };
              chip_complex.set_program(program);
      
              if let Some(initial_memory) = initial_memory {
                  chip_complex.set_initial_memory(initial_memory);
              }
              let air_names = chip_complex.air_names();
      
              Self {
                  chip_complex,
                  final_memory: None,
                  air_names,
                  trace_height_constraints,
                  #[cfg(feature = "bench-metrics")]
                  metrics: VmMetrics {
                      fn_bounds,
                      ..Default::default()
                  },
                  since_last_segment_check: 0,
              }
          }
      *)
      Definition new (F VC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [],
            [],
            [ config; program; init_streams; initial_memory; trace_height_constraints; fn_bounds
            ] =>
          ltac:(M.monadic
            (let config := M.alloc (| Ty.apply (Ty.path "&") [] [ VC ], config |) in
            let program :=
              M.alloc (|
                Ty.apply (Ty.path "openvm_instructions::program::Program") [] [ F ],
                program
              |) in
            let init_streams :=
              M.alloc (|
                Ty.apply (Ty.path "openvm_circuit::arch::vm::Streams") [] [ F ],
                init_streams
              |) in
            let initial_memory :=
              M.alloc (|
                Ty.apply
                  (Ty.path "core::option::Option")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                      [
                        M.unevaluated_const
                          (mk_str (|
                            "openvm_circuit_system_memory_controller_MemoryImage_discriminant"
                          |))
                      ]
                      [ F ]
                  ],
                initial_memory
              |) in
            let trace_height_constraints :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.path "openvm_stark_backend::keygen::types::LinearConstraint";
                    Ty.path "alloc::alloc::Global"
                  ],
                trace_height_constraints
              |) in
            let fn_bounds :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::collections::btree::map::BTreeMap")
                  []
                  [
                    Ty.path "u32";
                    Ty.path "openvm_instructions::exe::FnBound";
                    Ty.path "alloc::alloc::Global"
                  ],
                fn_bounds
              |) in
            M.read (|
              let~ chip_complex :
                  Ty.apply
                    (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                    []
                    [
                      F;
                      Ty.associated_in_trait
                        "openvm_circuit::arch::config::VmConfig"
                        []
                        [ F ]
                        VC
                        "Executor";
                      Ty.associated_in_trait
                        "openvm_circuit::arch::config::VmConfig"
                        []
                        [ F ]
                        VC
                        "Periphery"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                    []
                    [
                      F;
                      Ty.associated_in_trait
                        "openvm_circuit::arch::config::VmConfig"
                        []
                        [ F ]
                        VC
                        "Executor";
                      Ty.associated_in_trait
                        "openvm_circuit::arch::config::VmConfig"
                        []
                        [ F ]
                        VC
                        "Periphery"
                    ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "core::result::Result")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                          []
                          [
                            F;
                            Ty.associated_in_trait
                              "openvm_circuit::arch::config::VmConfig"
                              []
                              [ F ]
                              VC
                              "Executor";
                            Ty.associated_in_trait
                              "openvm_circuit::arch::config::VmConfig"
                              []
                              [ F ]
                              VC
                              "Periphery"
                          ];
                        Ty.path "openvm_circuit::arch::extensions::VmInventoryError"
                      ],
                    "unwrap",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                            []
                            [
                              F;
                              Ty.associated_in_trait
                                "openvm_circuit::arch::config::VmConfig"
                                []
                                [ F ]
                                VC
                                "Executor";
                              Ty.associated_in_trait
                                "openvm_circuit::arch::config::VmConfig"
                                []
                                [ F ]
                                VC
                                "Periphery"
                            ];
                          Ty.path "openvm_circuit::arch::extensions::VmInventoryError"
                        ],
                      M.get_trait_method (|
                        "openvm_circuit::arch::config::VmConfig",
                        VC,
                        [],
                        [ F ],
                        "create_chip_complex",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| config |) |) |) ]
                    |)
                  ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.call_closure (|
                  Ty.tuple [],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                      []
                      [
                        F;
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Executor";
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Periphery"
                      ],
                    "set_streams",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, chip_complex |); M.read (| init_streams |) ]
                |) in
              let~ program : Ty.apply (Ty.path "openvm_instructions::program::Program") [] [ F ] :=
                M.match_operator (|
                  Ty.apply (Ty.path "openvm_instructions::program::Program") [] [ F ],
                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              Ty.path "bool",
                              UnOp.not (|
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "openvm_circuit::arch::config::SystemConfig" ],
                                        M.get_trait_method (|
                                          "openvm_circuit::arch::config::VmConfig",
                                          VC,
                                          [],
                                          [ F ],
                                          "system",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| config |) |)
                                          |)
                                        ]
                                      |)
                                    |),
                                    "openvm_circuit::arch::config::SystemConfig",
                                    "profiling"
                                  |)
                                |)
                              |)
                            |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        M.call_closure (|
                          Ty.apply (Ty.path "openvm_instructions::program::Program") [] [ F ],
                          M.get_associated_function (|
                            Ty.apply (Ty.path "openvm_instructions::program::Program") [] [ F ],
                            "strip_debug_infos",
                            [],
                            []
                          |),
                          [ M.read (| program |) ]
                        |)));
                    fun γ => ltac:(M.monadic (M.read (| program |)))
                  ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.call_closure (|
                  Ty.tuple [],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                      []
                      [
                        F;
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Executor";
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Periphery"
                      ],
                    "set_program",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, chip_complex |); M.read (| program |) ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.match_operator (|
                  Ty.tuple [],
                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := initial_memory in
                        let γ0_0 :=
                          M.SubPointer.get_struct_tuple_field (|
                            γ,
                            "core::option::Option::Some",
                            0
                          |) in
                        let initial_memory :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                              [ Value.Integer IntegerKind.Usize 4096 ]
                              [ F ],
                            γ0_0
                          |) in
                        M.read (|
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                                  []
                                  [
                                    F;
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::config::VmConfig"
                                      []
                                      [ F ]
                                      VC
                                      "Executor";
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::config::VmConfig"
                                      []
                                      [ F ]
                                      VC
                                      "Periphery"
                                  ],
                                "set_initial_memory",
                                [],
                                []
                              |),
                              [
                                M.borrow (| Pointer.Kind.MutRef, chip_complex |);
                                M.read (| initial_memory |)
                              ]
                            |) in
                          M.alloc (| Ty.tuple [], Value.Tuple [] |)
                        |)));
                    fun γ => ltac:(M.monadic (Value.Tuple []))
                  ]
                |) in
              let~ air_names :
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [ Ty.path "alloc::string::String"; Ty.path "alloc::alloc::Global" ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [ Ty.path "alloc::string::String"; Ty.path "alloc::alloc::Global" ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                      []
                      [
                        F;
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Executor";
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Periphery"
                      ],
                    "air_names",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.Ref, chip_complex |) ]
                |) in
              M.alloc (|
                Ty.apply (Ty.path "openvm_circuit::arch::segment::ExecutionSegment") [] [ F; VC ],
                Value.mkStructRecord
                  "openvm_circuit::arch::segment::ExecutionSegment"
                  []
                  [ F; VC ]
                  [
                    ("chip_complex", M.read (| chip_complex |));
                    ("final_memory",
                      Value.StructTuple
                        "core::option::Option::None"
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                            [ Value.Integer IntegerKind.Usize 4096 ]
                            [ F ]
                        ]
                        []);
                    ("air_names", M.read (| air_names |));
                    ("trace_height_constraints", M.read (| trace_height_constraints |));
                    ("metrics",
                      M.struct_record_update
                        (M.call_closure (|
                          Ty.path "openvm_circuit::metrics::VmMetrics",
                          M.get_trait_method (|
                            "core::default::Default",
                            Ty.path "openvm_circuit::metrics::VmMetrics",
                            [],
                            [],
                            "default",
                            [],
                            []
                          |),
                          []
                        |))
                        [ ("fn_bounds", M.read (| fn_bounds |)) ]);
                    ("since_last_segment_check", Value.Integer IntegerKind.Usize 0)
                  ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C (Self F VC) "new" (new F VC).
      Admitted.
      Global Typeclasses Opaque new.
      
      (*
          pub fn system_config(&self) -> &SystemConfig {
              self.chip_complex.config()
          }
      *)
      Definition system_config
          (F VC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::segment::ExecutionSegment")
                      []
                      [ F; VC ]
                  ],
                self
              |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [ Ty.path "openvm_circuit::arch::config::SystemConfig" ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                      []
                      [
                        F;
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Executor";
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Periphery"
                      ],
                    "config",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "openvm_circuit::arch::segment::ExecutionSegment",
                        "chip_complex"
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_system_config :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C (Self F VC) "system_config" (system_config F VC).
      Admitted.
      Global Typeclasses Opaque system_config.
      
      (*
          pub fn set_override_trace_heights(&mut self, overridden_heights: VmComplexTraceHeights) {
              self.chip_complex
                  .set_override_system_trace_heights(overridden_heights.system);
              self.chip_complex
                  .set_override_inventory_trace_heights(overridden_heights.inventory);
          }
      *)
      Definition set_override_trace_heights
          (F VC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [], [], [ self; overridden_heights ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&mut")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::segment::ExecutionSegment")
                      []
                      [ F; VC ]
                  ],
                self
              |) in
            let overridden_heights :=
              M.alloc (|
                Ty.path "openvm_circuit::arch::extensions::VmComplexTraceHeights",
                overridden_heights
              |) in
            M.read (|
              let~ _ : Ty.tuple [] :=
                M.call_closure (|
                  Ty.tuple [],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                      []
                      [
                        F;
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Executor";
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Periphery"
                      ],
                    "set_override_system_trace_heights",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.MutRef,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "openvm_circuit::arch::segment::ExecutionSegment",
                        "chip_complex"
                      |)
                    |);
                    M.read (|
                      M.SubPointer.get_struct_record_field (|
                        overridden_heights,
                        "openvm_circuit::arch::extensions::VmComplexTraceHeights",
                        "system"
                      |)
                    |)
                  ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.call_closure (|
                  Ty.tuple [],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                      []
                      [
                        F;
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Executor";
                        Ty.associated_in_trait
                          "openvm_circuit::arch::config::VmConfig"
                          []
                          [ F ]
                          VC
                          "Periphery"
                      ],
                    "set_override_inventory_trace_heights",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.MutRef,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "openvm_circuit::arch::segment::ExecutionSegment",
                        "chip_complex"
                      |)
                    |);
                    M.read (|
                      M.SubPointer.get_struct_record_field (|
                        overridden_heights,
                        "openvm_circuit::arch::extensions::VmComplexTraceHeights",
                        "inventory"
                      |)
                    |)
                  ]
                |) in
              M.alloc (| Ty.tuple [], Value.Tuple [] |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_set_override_trace_heights :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C
          (Self F VC)
          "set_override_trace_heights"
          (set_override_trace_heights F VC).
      Admitted.
      Global Typeclasses Opaque set_override_trace_heights.
      
      (*
          pub fn execute_from_pc(
              &mut self,
              mut pc: u32,
          ) -> Result<ExecutionSegmentState, ExecutionError> {
              let mut timestamp = self.chip_complex.memory_controller().timestamp();
              let mut prev_backtrace: Option<Backtrace> = None;
      
              self.chip_complex
                  .connector_chip_mut()
                  .begin(ExecutionState::new(pc, timestamp));
      
              let mut did_terminate = false;
      
              loop {
                  #[allow(unused_variables)]
                  let (opcode, dsl_instr) = {
                      let Self {
                          chip_complex,
                          #[cfg(feature = "bench-metrics")]
                          metrics,
                          ..
                      } = self;
                      let SystemBase {
                          program_chip,
                          memory_controller,
                          ..
                      } = &mut chip_complex.base;
      
                      let (instruction, debug_info) = program_chip.get_instruction(pc)?;
                      tracing::trace!("pc: {pc:#x} | time: {timestamp} | {:?}", instruction);
      
                      #[allow(unused_variables)]
                      let (dsl_instr, trace) = debug_info.as_ref().map_or(
                          (None, None),
                          |DebugInfo {
                               dsl_instruction,
                               trace,
                           }| (Some(dsl_instruction), trace.as_ref()),
                      );
      
                      let &Instruction { opcode, c, .. } = instruction;
                      if opcode == SystemOpcode::TERMINATE.global_opcode() {
                          did_terminate = true;
                          self.chip_complex.connector_chip_mut().end(
                              ExecutionState::new(pc, timestamp),
                              Some(c.as_canonical_u32()),
                          );
                          break;
                      }
      
                      // Some phantom instruction handling is more convenient to do here than in
                      // PhantomChip.
                      if opcode == SystemOpcode::PHANTOM.global_opcode() {
                          // Note: the discriminant is the lower 16 bits of the c operand.
                          let discriminant = c.as_canonical_u32() as u16;
                          let phantom = SysPhantom::from_repr(discriminant);
                          tracing::trace!("pc: {pc:#x} | system phantom: {phantom:?}");
                          match phantom {
                              Some(SysPhantom::DebugPanic) => {
                                  if let Some(mut backtrace) = prev_backtrace {
                                      backtrace.resolve();
                                      eprintln!("openvm program failure; backtrace:\n{:?}", backtrace);
                                  } else {
                                      eprintln!("openvm program failure; no backtrace");
                                  }
                                  return Err(ExecutionError::Fail { pc });
                              }
                              Some(SysPhantom::CtStart) =>
                              {
                                  #[cfg(feature = "bench-metrics")]
                                  metrics
                                      .cycle_tracker
                                      .start(dsl_instr.cloned().unwrap_or("Default".to_string()))
                              }
                              Some(SysPhantom::CtEnd) =>
                              {
                                  #[cfg(feature = "bench-metrics")]
                                  metrics
                                      .cycle_tracker
                                      .end(dsl_instr.cloned().unwrap_or("Default".to_string()))
                              }
                              _ => {}
                          }
                      }
                      prev_backtrace = trace.cloned();
      
                      if let Some(executor) = chip_complex.inventory.get_mut_executor(&opcode) {
                          let next_state = InstructionExecutor::execute(
                              executor,
                              memory_controller,
                              instruction,
                              ExecutionState::new(pc, timestamp),
                          )?;
                          assert!(next_state.timestamp > timestamp);
                          pc = next_state.pc;
                          timestamp = next_state.timestamp;
                      } else {
                          return Err(ExecutionError::DisabledOperation { pc, opcode });
                      };
                      (opcode, dsl_instr.cloned())
                  };
      
                  #[cfg(feature = "bench-metrics")]
                  self.update_instruction_metrics(pc, opcode, dsl_instr);
      
                  if self.should_segment() {
                      self.chip_complex
                          .connector_chip_mut()
                          .end(ExecutionState::new(pc, timestamp), None);
                      break;
                  }
              }
              self.final_memory = Some(
                  self.chip_complex
                      .base
                      .memory_controller
                      .memory_image()
                      .clone(),
              );
      
              Ok(ExecutionSegmentState {
                  pc,
                  is_terminated: did_terminate,
              })
          }
      *)
      Definition execute_from_pc
          (F VC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [], [], [ self; pc ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&mut")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::segment::ExecutionSegment")
                      []
                      [ F; VC ]
                  ],
                self
              |) in
            let pc := M.alloc (| Ty.path "u32", pc |) in
            M.catch_return
              (Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.path "openvm_circuit::arch::segment::ExecutionSegmentState";
                  Ty.path "openvm_circuit::arch::execution::ExecutionError"
                ]) (|
              ltac:(M.monadic
                (M.read (|
                  let~ timestamp : Ty.path "u32" :=
                    M.call_closure (|
                      Ty.path "u32",
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::controller::MemoryController")
                          []
                          [ F ],
                        "timestamp",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_circuit::system::memory::controller::MemoryController")
                                    []
                                    [ F ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                                  []
                                  [
                                    F;
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::config::VmConfig"
                                      []
                                      [ F ]
                                      VC
                                      "Executor";
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::config::VmConfig"
                                      []
                                      [ F ]
                                      VC
                                      "Periphery"
                                  ],
                                "memory_controller",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "openvm_circuit::arch::segment::ExecutionSegment",
                                    "chip_complex"
                                  |)
                                |)
                              ]
                            |)
                          |)
                        |)
                      ]
                    |) in
                  let~ prev_backtrace :
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [ Ty.path "backtrace::capture::Backtrace" ] :=
                    Value.StructTuple
                      "core::option::Option::None"
                      []
                      [ Ty.path "backtrace::capture::Backtrace" ]
                      [] in
                  let~ _ : Ty.tuple [] :=
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "openvm_circuit::system::connector::VmConnectorChip")
                          []
                          [ F ],
                        "begin",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.MutRef,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&mut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_circuit::system::connector::VmConnectorChip")
                                    []
                                    [ F ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                                  []
                                  [
                                    F;
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::config::VmConfig"
                                      []
                                      [ F ]
                                      VC
                                      "Executor";
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::config::VmConfig"
                                      []
                                      [ F ]
                                      VC
                                      "Periphery"
                                  ],
                                "connector_chip_mut",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "openvm_circuit::arch::segment::ExecutionSegment",
                                    "chip_complex"
                                  |)
                                |)
                              ]
                            |)
                          |)
                        |);
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "openvm_circuit::arch::execution::ExecutionState")
                            []
                            [ Ty.path "u32" ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "openvm_circuit::arch::execution::ExecutionState")
                              []
                              [ Ty.path "u32" ],
                            "new",
                            [],
                            [ Ty.path "u32"; Ty.path "u32" ]
                          |),
                          [ M.read (| pc |); M.read (| timestamp |) ]
                        |)
                      ]
                    |) in
                  let~ did_terminate : Ty.path "bool" := Value.Bool false in
                  let~ _ : Ty.tuple [] :=
                    M.read (|
                      M.loop (|
                        Ty.tuple [],
                        ltac:(M.monadic
                          (M.alloc (|
                            Ty.tuple [],
                            M.match_operator (|
                              Ty.tuple [],
                              M.alloc (|
                                Ty.tuple
                                  [
                                    Ty.path "openvm_instructions::VmOpcode";
                                    Ty.apply
                                      (Ty.path "core::option::Option")
                                      []
                                      [ Ty.path "alloc::string::String" ]
                                  ],
                                M.match_operator (|
                                  Ty.tuple
                                    [
                                      Ty.path "openvm_instructions::VmOpcode";
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        []
                                        [ Ty.path "alloc::string::String" ]
                                    ],
                                  self,
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ := M.read (| γ |) in
                                        let γ1_0 :=
                                          M.SubPointer.get_struct_record_field (|
                                            γ,
                                            "openvm_circuit::arch::segment::ExecutionSegment",
                                            "chip_complex"
                                          |) in
                                        let γ1_1 :=
                                          M.SubPointer.get_struct_record_field (|
                                            γ,
                                            "openvm_circuit::arch::segment::ExecutionSegment",
                                            "metrics"
                                          |) in
                                        let chip_complex :=
                                          M.alloc (|
                                            Ty.apply
                                              (Ty.path "&mut")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_circuit::arch::extensions::VmChipComplex")
                                                  []
                                                  [
                                                    F;
                                                    Ty.associated_in_trait
                                                      "openvm_circuit::arch::config::VmConfig"
                                                      []
                                                      [ F ]
                                                      VC
                                                      "Executor";
                                                    Ty.associated_in_trait
                                                      "openvm_circuit::arch::config::VmConfig"
                                                      []
                                                      [ F ]
                                                      VC
                                                      "Periphery"
                                                  ]
                                              ],
                                            γ1_0
                                          |) in
                                        let metrics :=
                                          M.alloc (|
                                            Ty.apply
                                              (Ty.path "&mut")
                                              []
                                              [ Ty.path "openvm_circuit::metrics::VmMetrics" ],
                                            γ1_1
                                          |) in
                                        M.match_operator (|
                                          Ty.tuple
                                            [
                                              Ty.path "openvm_instructions::VmOpcode";
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                []
                                                [ Ty.path "alloc::string::String" ]
                                            ],
                                          M.alloc (|
                                            Ty.apply
                                              (Ty.path "&mut")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_circuit::arch::extensions::SystemBase")
                                                  []
                                                  [ F ]
                                              ],
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| chip_complex |) |),
                                                "openvm_circuit::arch::extensions::VmChipComplex",
                                                "base"
                                              |)
                                            |)
                                          |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ := M.read (| γ |) in
                                                let γ1_0 :=
                                                  M.SubPointer.get_struct_record_field (|
                                                    γ,
                                                    "openvm_circuit::arch::extensions::SystemBase",
                                                    "program_chip"
                                                  |) in
                                                let γ1_1 :=
                                                  M.SubPointer.get_struct_record_field (|
                                                    γ,
                                                    "openvm_circuit::arch::extensions::SystemBase",
                                                    "memory_controller"
                                                  |) in
                                                let program_chip :=
                                                  M.alloc (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_circuit::system::program::ProgramChip")
                                                          []
                                                          [ F ]
                                                      ],
                                                    γ1_0
                                                  |) in
                                                let memory_controller :=
                                                  M.alloc (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_circuit::system::memory::controller::MemoryController")
                                                          []
                                                          [ F ]
                                                      ],
                                                    γ1_1
                                                  |) in
                                                M.match_operator (|
                                                  Ty.tuple
                                                    [
                                                      Ty.path "openvm_instructions::VmOpcode";
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [ Ty.path "alloc::string::String" ]
                                                    ],
                                                  M.alloc (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_instructions::instruction::Instruction")
                                                              []
                                                              [ F ];
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "openvm_instructions::instruction::DebugInfo"
                                                              ]
                                                          ]
                                                      ],
                                                    M.match_operator (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_instructions::instruction::Instruction")
                                                                []
                                                                [ F ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "openvm_instructions::instruction::DebugInfo"
                                                                ]
                                                            ]
                                                        ],
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::ops::control_flow::ControlFlow")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              []
                                                              [
                                                                Ty.path "core::convert::Infallible";
                                                                Ty.path
                                                                  "openvm_circuit::arch::execution::ExecutionError"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_instructions::instruction::Instruction")
                                                                      []
                                                                      [ F ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "openvm_instructions::instruction::DebugInfo"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ],
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::ops::control_flow::ControlFlow")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::result::Result")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "core::convert::Infallible";
                                                                  Ty.path
                                                                    "openvm_circuit::arch::execution::ExecutionError"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "openvm_instructions::instruction::Instruction")
                                                                        []
                                                                        [ F ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "openvm_instructions::instruction::DebugInfo"
                                                                        ]
                                                                    ]
                                                                ]
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::ops::try_trait::Try",
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_instructions::instruction::Instruction")
                                                                          []
                                                                          [ F ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "openvm_instructions::instruction::DebugInfo"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path
                                                                  "openvm_circuit::arch::execution::ExecutionError"
                                                              ],
                                                            [],
                                                            [],
                                                            "branch",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "core::result::Result")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_instructions::instruction::Instruction")
                                                                            []
                                                                            [ F ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "openvm_instructions::instruction::DebugInfo"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.path
                                                                    "openvm_circuit::arch::execution::ExecutionError"
                                                                ],
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_circuit::system::program::ProgramChip")
                                                                  []
                                                                  [ F ],
                                                                "get_instruction",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.MutRef,
                                                                  M.deref (|
                                                                    M.read (| program_chip |)
                                                                  |)
                                                                |);
                                                                M.read (| pc |)
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                0
                                                              |) in
                                                            let residual :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "core::result::Result")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "core::convert::Infallible";
                                                                    Ty.path
                                                                      "openvm_circuit::arch::execution::ExecutionError"
                                                                  ],
                                                                γ0_0
                                                              |) in
                                                            M.never_to_any (|
                                                              M.read (|
                                                                M.return_ (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "openvm_circuit::arch::segment::ExecutionSegmentState";
                                                                        Ty.path
                                                                          "openvm_circuit::arch::execution::ExecutionError"
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::ops::try_trait::FromResidual",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "openvm_circuit::arch::segment::ExecutionSegmentState";
                                                                          Ty.path
                                                                            "openvm_circuit::arch::execution::ExecutionError"
                                                                        ],
                                                                      [],
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "core::convert::Infallible";
                                                                            Ty.path
                                                                              "openvm_circuit::arch::execution::ExecutionError"
                                                                          ]
                                                                      ],
                                                                      "from_residual",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [ M.read (| residual |) ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                0
                                                              |) in
                                                            let val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_instructions::instruction::Instruction")
                                                                          []
                                                                          [ F ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "openvm_instructions::instruction::DebugInfo"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                γ0_0
                                                              |) in
                                                            M.read (| val |)))
                                                      ]
                                                    |)
                                                  |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let γ := M.read (| γ |) in
                                                        let γ1_0 :=
                                                          M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                        let γ1_1 :=
                                                          M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                        let instruction :=
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_instructions::instruction::Instruction")
                                                                  []
                                                                  [ F ]
                                                              ],
                                                            γ1_0
                                                          |) in
                                                        let debug_info :=
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "openvm_instructions::instruction::DebugInfo"
                                                                  ]
                                                              ],
                                                            γ1_1
                                                          |) in
                                                        M.read (|
                                                          let~ _ : Ty.tuple [] :=
                                                            M.read (|
                                                              let~ enabled : Ty.path "bool" :=
                                                                LogicalOp.and (|
                                                                  LogicalOp.and (|
                                                                    M.call_closure (|
                                                                      Ty.path "bool",
                                                                      M.get_trait_method (|
                                                                        "core::cmp::PartialOrd",
                                                                        Ty.path
                                                                          "tracing_core::metadata::Level",
                                                                        [],
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::metadata::LevelFilter"
                                                                        ],
                                                                        "le",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          get_associated_constant (|
                                                                            Ty.path
                                                                              "tracing_core::metadata::Level",
                                                                            "TRACE",
                                                                            Ty.path
                                                                              "tracing_core::metadata::Level"
                                                                          |)
                                                                        |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          get_constant (|
                                                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                            Ty.path
                                                                              "tracing_core::metadata::LevelFilter"
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |),
                                                                    ltac:(M.monadic
                                                                      (M.call_closure (|
                                                                        Ty.path "bool",
                                                                        M.get_trait_method (|
                                                                          "core::cmp::PartialOrd",
                                                                          Ty.path
                                                                            "tracing_core::metadata::Level",
                                                                          [],
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::metadata::LevelFilter"
                                                                          ],
                                                                          "le",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            get_associated_constant (|
                                                                              Ty.path
                                                                                "tracing_core::metadata::Level",
                                                                              "TRACE",
                                                                              Ty.path
                                                                                "tracing_core::metadata::Level"
                                                                            |)
                                                                          |);
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.alloc (|
                                                                              Ty.path
                                                                                "tracing_core::metadata::LevelFilter",
                                                                              M.call_closure (|
                                                                                Ty.path
                                                                                  "tracing_core::metadata::LevelFilter",
                                                                                M.get_associated_function (|
                                                                                  Ty.path
                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                  "current",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                []
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)))
                                                                  |),
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let~ interest :
                                                                          Ty.path
                                                                            "tracing_core::subscriber::Interest" :=
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::subscriber::Interest",
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                            "interest",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (|
                                                                                  get_constant (|
                                                                                    "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE",
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                      ]
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |) in
                                                                      M.alloc (|
                                                                        Ty.path "bool",
                                                                        LogicalOp.and (|
                                                                          UnOp.not (|
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "tracing_core::subscriber::Interest",
                                                                                "is_never",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  interest
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |),
                                                                          ltac:(M.monadic
                                                                            (M.call_closure (|
                                                                              Ty.path "bool",
                                                                              M.get_function (|
                                                                                "tracing::__macro_support::__is_enabled",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::metadata::Metadata"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "tracing_core::callsite::Callsite",
                                                                                        Ty.path
                                                                                          "tracing_core::callsite::DefaultCallsite",
                                                                                        [],
                                                                                        [],
                                                                                        "metadata",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              get_constant (|
                                                                                                "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                                                  ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.read (|
                                                                                  interest
                                                                                |)
                                                                              ]
                                                                            |)))
                                                                        |)
                                                                      |)
                                                                    |)))
                                                                |) in
                                                              M.alloc (|
                                                                Ty.tuple [],
                                                                M.match_operator (|
                                                                  Ty.tuple [],
                                                                  M.alloc (|
                                                                    Ty.tuple [],
                                                                    Value.Tuple []
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ := M.use enabled in
                                                                        let _ :=
                                                                          is_constant_or_break_match (|
                                                                            M.read (| γ |),
                                                                            Value.Bool true
                                                                          |) in
                                                                        M.read (|
                                                                          let~ _ : Ty.tuple [] :=
                                                                            M.call_closure (|
                                                                              Ty.tuple [],
                                                                              M.get_trait_method (|
                                                                                "core::ops::function::Fn",
                                                                                Ty.function
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::ValueSet"
                                                                                  ]
                                                                                  (Ty.tuple []),
                                                                                [],
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::ValueSet"
                                                                                    ]
                                                                                ],
                                                                                "call",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::ValueSet"
                                                                                      ]
                                                                                      (Ty.tuple []),
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            ltac:(M.monadic
                                                                                              (M.match_operator (|
                                                                                                Ty.tuple
                                                                                                  [],
                                                                                                M.alloc (|
                                                                                                  Ty.path
                                                                                                    "tracing_core::field::ValueSet",
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (let
                                                                                                            value_set :=
                                                                                                        M.copy (|
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::ValueSet",
                                                                                                          γ
                                                                                                        |) in
                                                                                                      M.read (|
                                                                                                        let~
                                                                                                              meta :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::Metadata"
                                                                                                              ] :=
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::Metadata"
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "tracing_core::callsite::Callsite",
                                                                                                              Ty.path
                                                                                                                "tracing_core::callsite::DefaultCallsite",
                                                                                                              [],
                                                                                                              [],
                                                                                                              "metadata",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    get_constant (|
                                                                                                                      "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::callsite::DefaultCallsite"
                                                                                                                        ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |) in
                                                                                                        let~
                                                                                                              _ :
                                                                                                            Ty.tuple
                                                                                                              [] :=
                                                                                                          M.call_closure (|
                                                                                                            Ty.tuple
                                                                                                              [],
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::event::Event",
                                                                                                              "dispatch",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    meta
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |);
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    value_set
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          Ty.tuple
                                                                                                            [],
                                                                                                          Value.Tuple
                                                                                                            []
                                                                                                        |)
                                                                                                      |)))
                                                                                                ]
                                                                                              |)))
                                                                                          | _ =>
                                                                                            M.impossible
                                                                                              "wrong number of arguments"
                                                                                          end))
                                                                                  |)
                                                                                |);
                                                                                Value.Tuple
                                                                                  [
                                                                                    M.read (|
                                                                                      let~ iter :
                                                                                          Ty.path
                                                                                            "tracing_core::field::Iter" :=
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "tracing_core::field::Iter",
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "tracing_core::field::FieldSet",
                                                                                            "iter",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "tracing_core::field::FieldSet"
                                                                                                    ],
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.path
                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                    "fields",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Metadata"
                                                                                                            ],
                                                                                                          M.get_trait_method (|
                                                                                                            "tracing_core::callsite::Callsite",
                                                                                                            Ty.path
                                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                                            [],
                                                                                                            [],
                                                                                                            "metadata",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  get_constant (|
                                                                                                                    "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                                      ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Ty.path
                                                                                          "tracing_core::field::ValueSet",
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "tracing_core::field::ValueSet",
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "tracing_core::field::FieldSet",
                                                                                            "value_set",
                                                                                            [],
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "array")
                                                                                                [
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    1
                                                                                                ]
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::Field"
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::option::Option")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.dyn
                                                                                                                [
                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                    [])
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "tracing_core::field::FieldSet"
                                                                                                    ],
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.path
                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                    "fields",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Metadata"
                                                                                                            ],
                                                                                                          M.get_trait_method (|
                                                                                                            "tracing_core::callsite::Callsite",
                                                                                                            Ty.path
                                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                                            [],
                                                                                                            [],
                                                                                                            "metadata",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  get_constant (|
                                                                                                                    "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                                      ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |);
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.alloc (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "array")
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          IntegerKind.Usize
                                                                                                          1
                                                                                                      ]
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "tracing_core::field::Field"
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::option::Option")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.dyn
                                                                                                                      [
                                                                                                                        ("tracing_core::field::Value::Trait",
                                                                                                                          [])
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ],
                                                                                                    Value.Array
                                                                                                      [
                                                                                                        Value.Tuple
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.alloc (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::field::Field",
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::field::Field",
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::option::Option")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::field::Field"
                                                                                                                      ],
                                                                                                                    "expect",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::option::Option")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::field::Field"
                                                                                                                        ],
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::field::Iter",
                                                                                                                        [],
                                                                                                                        [],
                                                                                                                        "next",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                          M.deref (|
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                              iter
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |);
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      M.deref (|
                                                                                                                        mk_str (|
                                                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            |);
                                                                                                            Value.StructTuple
                                                                                                              "core::option::Option::Some"
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.dyn
                                                                                                                      [
                                                                                                                        ("tracing_core::field::Value::Trait",
                                                                                                                          [])
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  M.use
                                                                                                                    (M.alloc (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.dyn
                                                                                                                            [
                                                                                                                              ("tracing_core::field::Value::Trait",
                                                                                                                                [])
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.dyn
                                                                                                                              [
                                                                                                                                ("tracing_core::field::Value::Trait",
                                                                                                                                  [])
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.pointer_coercion
                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments"
                                                                                                                            ])
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.dyn
                                                                                                                                [
                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                    [])
                                                                                                                                ]
                                                                                                                            ]),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.alloc (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments",
                                                                                                                                  M.call_closure (|
                                                                                                                                    Ty.path
                                                                                                                                      "core::fmt::Arguments",
                                                                                                                                    M.get_associated_function (|
                                                                                                                                      Ty.path
                                                                                                                                        "core::fmt::Arguments",
                                                                                                                                      "new_v1_formatted",
                                                                                                                                      [],
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "slice")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "&")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.path
                                                                                                                                                      "str"
                                                                                                                                                  ]
                                                                                                                                              ]
                                                                                                                                          ],
                                                                                                                                        M.pointer_coercion
                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                          (Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "array")
                                                                                                                                                [
                                                                                                                                                  Value.Integer
                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                    3
                                                                                                                                                ]
                                                                                                                                                [
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "str"
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ])
                                                                                                                                          (Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "slice")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "str"
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        3
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "str"
                                                                                                                                                        ]
                                                                                                                                                    ],
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      mk_str (|
                                                                                                                                                        "pc: "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        " | time: "
                                                                                                                                                      |);
                                                                                                                                                      mk_str (|
                                                                                                                                                        " | "
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "slice")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "core::fmt::rt::Argument"
                                                                                                                                              ]
                                                                                                                                          ],
                                                                                                                                        M.pointer_coercion
                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                          (Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "array")
                                                                                                                                                [
                                                                                                                                                  Value.Integer
                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                    3
                                                                                                                                                ]
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "core::fmt::rt::Argument"
                                                                                                                                                ]
                                                                                                                                            ])
                                                                                                                                          (Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "slice")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "core::fmt::rt::Argument"
                                                                                                                                                ]
                                                                                                                                            ]),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        3
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Argument"
                                                                                                                                                    ],
                                                                                                                                                  M.match_operator (|
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "array")
                                                                                                                                                      [
                                                                                                                                                        Value.Integer
                                                                                                                                                          IntegerKind.Usize
                                                                                                                                                          3
                                                                                                                                                      ]
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Argument"
                                                                                                                                                      ],
                                                                                                                                                    M.alloc (|
                                                                                                                                                      Ty.tuple
                                                                                                                                                        [
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "&")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "openvm_instructions::instruction::Instruction")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      F
                                                                                                                                                                    ]
                                                                                                                                                                ]
                                                                                                                                                            ];
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.path
                                                                                                                                                                "u32"
                                                                                                                                                            ];
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.path
                                                                                                                                                                "u32"
                                                                                                                                                            ]
                                                                                                                                                        ],
                                                                                                                                                      Value.Tuple
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            instruction
                                                                                                                                                          |);
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            pc
                                                                                                                                                          |);
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            timestamp
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      fun
                                                                                                                                                          γ =>
                                                                                                                                                        ltac:(M.monadic
                                                                                                                                                          (let
                                                                                                                                                                args :=
                                                                                                                                                            M.copy (|
                                                                                                                                                              Ty.tuple
                                                                                                                                                                [
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "&")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "&")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "openvm_instructions::instruction::Instruction")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              F
                                                                                                                                                                            ]
                                                                                                                                                                        ]
                                                                                                                                                                    ];
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "&")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.path
                                                                                                                                                                        "u32"
                                                                                                                                                                    ];
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "&")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.path
                                                                                                                                                                        "u32"
                                                                                                                                                                    ]
                                                                                                                                                                ],
                                                                                                                                                              γ
                                                                                                                                                            |) in
                                                                                                                                                          Value.Array
                                                                                                                                                            [
                                                                                                                                                              M.call_closure (|
                                                                                                                                                                Ty.path
                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                M.get_associated_function (|
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                                                  "new_lower_hex",
                                                                                                                                                                  [],
                                                                                                                                                                  [
                                                                                                                                                                    Ty.path
                                                                                                                                                                      "u32"
                                                                                                                                                                  ]
                                                                                                                                                                |),
                                                                                                                                                                [
                                                                                                                                                                  M.borrow (|
                                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                                    M.deref (|
                                                                                                                                                                      M.read (|
                                                                                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                                                                                          args,
                                                                                                                                                                          1
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)
                                                                                                                                                                  |)
                                                                                                                                                                ]
                                                                                                                                                              |);
                                                                                                                                                              M.call_closure (|
                                                                                                                                                                Ty.path
                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                M.get_associated_function (|
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                                                  "new_display",
                                                                                                                                                                  [],
                                                                                                                                                                  [
                                                                                                                                                                    Ty.path
                                                                                                                                                                      "u32"
                                                                                                                                                                  ]
                                                                                                                                                                |),
                                                                                                                                                                [
                                                                                                                                                                  M.borrow (|
                                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                                    M.deref (|
                                                                                                                                                                      M.read (|
                                                                                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                                                                                          args,
                                                                                                                                                                          2
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)
                                                                                                                                                                  |)
                                                                                                                                                                ]
                                                                                                                                                              |);
                                                                                                                                                              M.call_closure (|
                                                                                                                                                                Ty.path
                                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                                M.get_associated_function (|
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                                                  "new_debug",
                                                                                                                                                                  [],
                                                                                                                                                                  [
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "&")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "openvm_instructions::instruction::Instruction")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            F
                                                                                                                                                                          ]
                                                                                                                                                                      ]
                                                                                                                                                                  ]
                                                                                                                                                                |),
                                                                                                                                                                [
                                                                                                                                                                  M.borrow (|
                                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                                    M.deref (|
                                                                                                                                                                      M.read (|
                                                                                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                                                                                          args,
                                                                                                                                                                          0
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)
                                                                                                                                                                  |)
                                                                                                                                                                ]
                                                                                                                                                              |)
                                                                                                                                                            ]))
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "slice")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "core::fmt::rt::Placeholder"
                                                                                                                                              ]
                                                                                                                                          ],
                                                                                                                                        M.pointer_coercion
                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                          (Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "array")
                                                                                                                                                [
                                                                                                                                                  Value.Integer
                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                    3
                                                                                                                                                ]
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "core::fmt::rt::Placeholder"
                                                                                                                                                ]
                                                                                                                                            ])
                                                                                                                                          (Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "slice")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "core::fmt::rt::Placeholder"
                                                                                                                                                ]
                                                                                                                                            ]),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.alloc (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "array")
                                                                                                                                                    [
                                                                                                                                                      Value.Integer
                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                        3
                                                                                                                                                    ]
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "core::fmt::rt::Placeholder"
                                                                                                                                                    ],
                                                                                                                                                  Value.Array
                                                                                                                                                    [
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                                          "new",
                                                                                                                                                          [],
                                                                                                                                                          []
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          Value.Integer
                                                                                                                                                            IntegerKind.Usize
                                                                                                                                                            0;
                                                                                                                                                          Value.UnicodeChar
                                                                                                                                                            32;
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            [];
                                                                                                                                                          Value.Integer
                                                                                                                                                            IntegerKind.U32
                                                                                                                                                            4;
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            [];
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                        ]
                                                                                                                                                      |);
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                                          "new",
                                                                                                                                                          [],
                                                                                                                                                          []
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          Value.Integer
                                                                                                                                                            IntegerKind.Usize
                                                                                                                                                            1;
                                                                                                                                                          Value.UnicodeChar
                                                                                                                                                            32;
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            [];
                                                                                                                                                          Value.Integer
                                                                                                                                                            IntegerKind.U32
                                                                                                                                                            0;
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            [];
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                        ]
                                                                                                                                                      |);
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                          Ty.path
                                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                                          "new",
                                                                                                                                                          [],
                                                                                                                                                          []
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          Value.Integer
                                                                                                                                                            IntegerKind.Usize
                                                                                                                                                            2;
                                                                                                                                                          Value.UnicodeChar
                                                                                                                                                            32;
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            [];
                                                                                                                                                          Value.Integer
                                                                                                                                                            IntegerKind.U32
                                                                                                                                                            0;
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            [];
                                                                                                                                                          Value.StructTuple
                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                            []
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.path
                                                                                                                                          "core::fmt::rt::UnsafeArg",
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                                          "new",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        []
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |))
                                                                                                                |)
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Ty.tuple [],
                                                                            Value.Tuple []
                                                                          |)
                                                                        |)));
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (Value.Tuple []))
                                                                  ]
                                                                |)
                                                              |)
                                                            |) in
                                                          M.alloc (|
                                                            Ty.tuple
                                                              [
                                                                Ty.path
                                                                  "openvm_instructions::VmOpcode";
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [ Ty.path "alloc::string::String"
                                                                  ]
                                                              ],
                                                            M.match_operator (|
                                                              Ty.tuple
                                                                [
                                                                  Ty.path
                                                                    "openvm_instructions::VmOpcode";
                                                                  Ty.apply
                                                                    (Ty.path "core::option::Option")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "alloc::string::String"
                                                                    ]
                                                                ],
                                                              M.alloc (|
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "alloc::string::String"
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "backtrace::capture::Backtrace"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.call_closure (|
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "alloc::string::String"
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "backtrace::capture::Backtrace"
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "openvm_instructions::instruction::DebugInfo"
                                                                          ]
                                                                      ],
                                                                    "map_or",
                                                                    [],
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "alloc::string::String"
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "backtrace::capture::Backtrace"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.function
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "openvm_instructions::instruction::DebugInfo"
                                                                            ]
                                                                        ]
                                                                        (Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "alloc::string::String"
                                                                                  ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "backtrace::capture::Backtrace"
                                                                                  ]
                                                                              ]
                                                                          ])
                                                                    ]
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "openvm_instructions::instruction::DebugInfo"
                                                                            ]
                                                                        ],
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "openvm_instructions::instruction::DebugInfo"
                                                                          ],
                                                                        "as_ref",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.read (| debug_info |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    Value.Tuple
                                                                      [
                                                                        Value.StructTuple
                                                                          "core::option::Option::None"
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "alloc::string::String"
                                                                              ]
                                                                          ]
                                                                          [];
                                                                        Value.StructTuple
                                                                          "core::option::Option::None"
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "backtrace::capture::Backtrace"
                                                                              ]
                                                                          ]
                                                                          []
                                                                      ];
                                                                    M.closure
                                                                      (fun γ =>
                                                                        ltac:(M.monadic
                                                                          match γ with
                                                                          | [ α0 ] =>
                                                                            ltac:(M.monadic
                                                                              (M.match_operator (|
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "alloc::string::String"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "backtrace::capture::Backtrace"
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                M.alloc (|
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "openvm_instructions::instruction::DebugInfo"
                                                                                    ],
                                                                                  α0
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ :=
                                                                                        M.read (|
                                                                                          γ
                                                                                        |) in
                                                                                      let γ1_0 :=
                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                          γ,
                                                                                          "openvm_instructions::instruction::DebugInfo",
                                                                                          "dsl_instruction"
                                                                                        |) in
                                                                                      let γ1_1 :=
                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                          γ,
                                                                                          "openvm_instructions::instruction::DebugInfo",
                                                                                          "trace"
                                                                                        |) in
                                                                                      let
                                                                                            dsl_instruction :=
                                                                                        M.alloc (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "alloc::string::String"
                                                                                            ],
                                                                                          γ1_0
                                                                                        |) in
                                                                                      let trace :=
                                                                                        M.alloc (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "backtrace::capture::Backtrace"
                                                                                                ]
                                                                                            ],
                                                                                          γ1_1
                                                                                        |) in
                                                                                      Value.Tuple
                                                                                        [
                                                                                          Value.StructTuple
                                                                                            "core::option::Option::Some"
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "alloc::string::String"
                                                                                                ]
                                                                                            ]
                                                                                            [
                                                                                              M.read (|
                                                                                                dsl_instruction
                                                                                              |)
                                                                                            ];
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "backtrace::capture::Backtrace"
                                                                                                  ]
                                                                                              ],
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "backtrace::capture::Backtrace"
                                                                                                ],
                                                                                              "as_ref",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.read (|
                                                                                                    trace
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]))
                                                                                ]
                                                                              |)))
                                                                          | _ =>
                                                                            M.impossible
                                                                              "wrong number of arguments"
                                                                          end))
                                                                  ]
                                                                |)
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ0_0 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ,
                                                                        0
                                                                      |) in
                                                                    let γ0_1 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ,
                                                                        1
                                                                      |) in
                                                                    let dsl_instr :=
                                                                      M.copy (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "alloc::string::String"
                                                                              ]
                                                                          ],
                                                                        γ0_0
                                                                      |) in
                                                                    let trace :=
                                                                      M.copy (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "backtrace::capture::Backtrace"
                                                                              ]
                                                                          ],
                                                                        γ0_1
                                                                      |) in
                                                                    M.match_operator (|
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.path
                                                                            "openvm_instructions::VmOpcode";
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "alloc::string::String"
                                                                            ]
                                                                        ],
                                                                      instruction,
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ :=
                                                                              M.read (| γ |) in
                                                                            let γ1_0 :=
                                                                              M.SubPointer.get_struct_record_field (|
                                                                                γ,
                                                                                "openvm_instructions::instruction::Instruction",
                                                                                "opcode"
                                                                              |) in
                                                                            let γ1_1 :=
                                                                              M.SubPointer.get_struct_record_field (|
                                                                                γ,
                                                                                "openvm_instructions::instruction::Instruction",
                                                                                "c"
                                                                              |) in
                                                                            let opcode :=
                                                                              M.copy (|
                                                                                Ty.path
                                                                                  "openvm_instructions::VmOpcode",
                                                                                γ1_0
                                                                              |) in
                                                                            let c :=
                                                                              M.copy (|
                                                                                F,
                                                                                γ1_1
                                                                              |) in
                                                                            M.read (|
                                                                              let~ _ :
                                                                                  Ty.tuple [] :=
                                                                                M.match_operator (|
                                                                                  Ty.tuple [],
                                                                                  M.alloc (|
                                                                                    Ty.tuple [],
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              Ty.path
                                                                                                "bool",
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "bool",
                                                                                                M.get_trait_method (|
                                                                                                  "core::cmp::PartialEq",
                                                                                                  Ty.path
                                                                                                    "openvm_instructions::VmOpcode",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "openvm_instructions::VmOpcode"
                                                                                                  ],
                                                                                                  "eq",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    opcode
                                                                                                  |);
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Ty.path
                                                                                                        "openvm_instructions::VmOpcode",
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "openvm_instructions::VmOpcode",
                                                                                                        M.get_trait_method (|
                                                                                                          "openvm_instructions::LocalOpcode",
                                                                                                          Ty.path
                                                                                                            "openvm_instructions::SystemOpcode",
                                                                                                          [],
                                                                                                          [],
                                                                                                          "global_opcode",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              Ty.path
                                                                                                                "openvm_instructions::SystemOpcode",
                                                                                                              Value.StructTuple
                                                                                                                "openvm_instructions::SystemOpcode::TERMINATE"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            let~ _ :
                                                                                                Ty.tuple
                                                                                                  [] :=
                                                                                              M.write (|
                                                                                                did_terminate,
                                                                                                Value.Bool
                                                                                                  true
                                                                                              |) in
                                                                                            let~ _ :
                                                                                                Ty.tuple
                                                                                                  [] :=
                                                                                              M.call_closure (|
                                                                                                Ty.tuple
                                                                                                  [],
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "openvm_circuit::system::connector::VmConnectorChip")
                                                                                                    []
                                                                                                    [
                                                                                                      F
                                                                                                    ],
                                                                                                  "end",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.MutRef,
                                                                                                    M.deref (|
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&mut")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "openvm_circuit::system::connector::VmConnectorChip")
                                                                                                              []
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "openvm_circuit::arch::extensions::VmChipComplex")
                                                                                                            []
                                                                                                            [
                                                                                                              F;
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_circuit::arch::config::VmConfig"
                                                                                                                []
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                                VC
                                                                                                                "Executor";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_circuit::arch::config::VmConfig"
                                                                                                                []
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                                VC
                                                                                                                "Periphery"
                                                                                                            ],
                                                                                                          "connector_chip_mut",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.MutRef,
                                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  self
                                                                                                                |)
                                                                                                              |),
                                                                                                              "openvm_circuit::arch::segment::ExecutionSegment",
                                                                                                              "chip_complex"
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "openvm_circuit::arch::execution::ExecutionState")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "u32"
                                                                                                      ],
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "openvm_circuit::arch::execution::ExecutionState")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "u32"
                                                                                                        ],
                                                                                                      "new",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "u32";
                                                                                                        Ty.path
                                                                                                          "u32"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        pc
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        timestamp
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  Value.StructTuple
                                                                                                    "core::option::Option::Some"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "u32"
                                                                                                    ]
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "u32",
                                                                                                        M.get_trait_method (|
                                                                                                          "p3_field::field::PrimeField32",
                                                                                                          F,
                                                                                                          [],
                                                                                                          [],
                                                                                                          "as_canonical_u32",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            c
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                ]
                                                                                              |) in
                                                                                            M.break (||)
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (Value.Tuple
                                                                                          []))
                                                                                  ]
                                                                                |) in
                                                                              let~ _ :
                                                                                  Ty.tuple [] :=
                                                                                M.match_operator (|
                                                                                  Ty.tuple [],
                                                                                  M.alloc (|
                                                                                    Ty.tuple [],
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              Ty.path
                                                                                                "bool",
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "bool",
                                                                                                M.get_trait_method (|
                                                                                                  "core::cmp::PartialEq",
                                                                                                  Ty.path
                                                                                                    "openvm_instructions::VmOpcode",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "openvm_instructions::VmOpcode"
                                                                                                  ],
                                                                                                  "eq",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    opcode
                                                                                                  |);
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Ty.path
                                                                                                        "openvm_instructions::VmOpcode",
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "openvm_instructions::VmOpcode",
                                                                                                        M.get_trait_method (|
                                                                                                          "openvm_instructions::LocalOpcode",
                                                                                                          Ty.path
                                                                                                            "openvm_instructions::SystemOpcode",
                                                                                                          [],
                                                                                                          [],
                                                                                                          "global_opcode",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              Ty.path
                                                                                                                "openvm_instructions::SystemOpcode",
                                                                                                              Value.StructTuple
                                                                                                                "openvm_instructions::SystemOpcode::PHANTOM"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.read (|
                                                                                          let~
                                                                                                discriminant :
                                                                                              Ty.path
                                                                                                "u16" :=
                                                                                            M.cast
                                                                                              (Ty.path
                                                                                                "u16")
                                                                                              (M.call_closure (|
                                                                                                Ty.path
                                                                                                  "u32",
                                                                                                M.get_trait_method (|
                                                                                                  "p3_field::field::PrimeField32",
                                                                                                  F,
                                                                                                  [],
                                                                                                  [],
                                                                                                  "as_canonical_u32",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    c
                                                                                                  |)
                                                                                                ]
                                                                                              |)) in
                                                                                          let~
                                                                                                phantom :
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_instructions::phantom::SysPhantom"
                                                                                                ] :=
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_instructions::phantom::SysPhantom"
                                                                                                ],
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "openvm_instructions::phantom::SysPhantom",
                                                                                                "from_repr",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  discriminant
                                                                                                |)
                                                                                              ]
                                                                                            |) in
                                                                                          let~ _ :
                                                                                              Ty.tuple
                                                                                                [] :=
                                                                                            M.read (|
                                                                                              let~
                                                                                                    enabled :
                                                                                                  Ty.path
                                                                                                    "bool" :=
                                                                                                LogicalOp.and (|
                                                                                                  LogicalOp.and (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "bool",
                                                                                                      M.get_trait_method (|
                                                                                                        "core::cmp::PartialOrd",
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Level",
                                                                                                        [],
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::LevelFilter"
                                                                                                        ],
                                                                                                        "le",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          get_associated_constant (|
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::Level",
                                                                                                            "TRACE",
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::Level"
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          get_constant (|
                                                                                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |),
                                                                                                    ltac:(M.monadic
                                                                                                      (M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "bool",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::cmp::PartialOrd",
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::Level",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                          ],
                                                                                                          "le",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            get_associated_constant (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Level",
                                                                                                              "TRACE",
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Level"
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::LevelFilter",
                                                                                                              M.call_closure (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::LevelFilter",
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                                                  "current",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)))
                                                                                                  |),
                                                                                                  ltac:(M.monadic
                                                                                                    (M.read (|
                                                                                                      let~
                                                                                                            interest :
                                                                                                          Ty.path
                                                                                                            "tracing_core::subscriber::Interest" :=
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "tracing_core::subscriber::Interest",
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.path
                                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                                            "interest",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  get_constant (|
                                                                                                                    "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE'1",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                                      ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |) in
                                                                                                      M.alloc (|
                                                                                                        Ty.path
                                                                                                          "bool",
                                                                                                        LogicalOp.and (|
                                                                                                          UnOp.not (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "bool",
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                "is_never",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  interest
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |),
                                                                                                          ltac:(M.monadic
                                                                                                            (M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "bool",
                                                                                                              M.get_function (|
                                                                                                                "tracing::__macro_support::__is_enabled",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::metadata::Metadata"
                                                                                                                        ],
                                                                                                                      M.get_trait_method (|
                                                                                                                        "tracing_core::callsite::Callsite",
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::callsite::DefaultCallsite",
                                                                                                                        [],
                                                                                                                        [],
                                                                                                                        "metadata",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              get_constant (|
                                                                                                                                "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE'1",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "&")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                                                                                  ]
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  interest
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)))
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)))
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                Ty.tuple
                                                                                                  [],
                                                                                                M.match_operator (|
                                                                                                  Ty.tuple
                                                                                                    [],
                                                                                                  M.alloc (|
                                                                                                    Ty.tuple
                                                                                                      [],
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            enabled in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.read (|
                                                                                                          let~
                                                                                                                _ :
                                                                                                              Ty.tuple
                                                                                                                [] :=
                                                                                                            M.call_closure (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::ops::function::Fn",
                                                                                                                Ty.function
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::ValueSet"
                                                                                                                  ]
                                                                                                                  (Ty.tuple
                                                                                                                    []),
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "tracing_core::field::ValueSet"
                                                                                                                    ]
                                                                                                                ],
                                                                                                                "call",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.alloc (|
                                                                                                                    Ty.function
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::field::ValueSet"
                                                                                                                      ]
                                                                                                                      (Ty.tuple
                                                                                                                        []),
                                                                                                                    M.closure
                                                                                                                      (fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          match
                                                                                                                            γ
                                                                                                                          with
                                                                                                                          | [
                                                                                                                                α0
                                                                                                                              ] =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (M.match_operator (|
                                                                                                                                Ty.tuple
                                                                                                                                  [],
                                                                                                                                M.alloc (|
                                                                                                                                  Ty.path
                                                                                                                                    "tracing_core::field::ValueSet",
                                                                                                                                  α0
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  fun
                                                                                                                                      γ =>
                                                                                                                                    ltac:(M.monadic
                                                                                                                                      (let
                                                                                                                                            value_set :=
                                                                                                                                        M.copy (|
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::field::ValueSet",
                                                                                                                                          γ
                                                                                                                                        |) in
                                                                                                                                      M.read (|
                                                                                                                                        let~
                                                                                                                                              meta :
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "&")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Metadata"
                                                                                                                                              ] :=
                                                                                                                                          M.call_closure (|
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "&")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Metadata"
                                                                                                                                              ],
                                                                                                                                            M.get_trait_method (|
                                                                                                                                              "tracing_core::callsite::Callsite",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::callsite::DefaultCallsite",
                                                                                                                                              [],
                                                                                                                                              [],
                                                                                                                                              "metadata",
                                                                                                                                              [],
                                                                                                                                              []
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.deref (|
                                                                                                                                                  M.read (|
                                                                                                                                                    get_constant (|
                                                                                                                                                      "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE'1",
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                        ]
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                          |) in
                                                                                                                                        let~
                                                                                                                                              _ :
                                                                                                                                            Ty.tuple
                                                                                                                                              [] :=
                                                                                                                                          M.call_closure (|
                                                                                                                                            Ty.tuple
                                                                                                                                              [],
                                                                                                                                            M.get_associated_function (|
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::event::Event",
                                                                                                                                              "dispatch",
                                                                                                                                              [],
                                                                                                                                              []
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.deref (|
                                                                                                                                                  M.read (|
                                                                                                                                                    meta
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |);
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.deref (|
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    value_set
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                          |) in
                                                                                                                                        M.alloc (|
                                                                                                                                          Ty.tuple
                                                                                                                                            [],
                                                                                                                                          Value.Tuple
                                                                                                                                            []
                                                                                                                                        |)
                                                                                                                                      |)))
                                                                                                                                ]
                                                                                                                              |)))
                                                                                                                          | _ =>
                                                                                                                            M.impossible
                                                                                                                              "wrong number of arguments"
                                                                                                                          end))
                                                                                                                  |)
                                                                                                                |);
                                                                                                                Value.Tuple
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      let~
                                                                                                                            iter :
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::field::Iter" :=
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::field::Iter",
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::field::FieldSet",
                                                                                                                            "iter",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.Ref,
                                                                                                                              M.deref (|
                                                                                                                                M.call_closure (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::field::FieldSet"
                                                                                                                                    ],
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                                                    "fields",
                                                                                                                                    [],
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    M.borrow (|
                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                      M.deref (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Metadata"
                                                                                                                                            ],
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "tracing_core::callsite::Callsite",
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                                                                            [],
                                                                                                                                            [],
                                                                                                                                            "metadata",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.read (|
                                                                                                                                                  get_constant (|
                                                                                                                                                    "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE'1",
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "&")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                      ]
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |) in
                                                                                                                      M.alloc (|
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::field::ValueSet",
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::field::ValueSet",
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::field::FieldSet",
                                                                                                                            "value_set",
                                                                                                                            [],
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    1
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "&")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::field::Field"
                                                                                                                                        ];
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "core::option::Option")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.dyn
                                                                                                                                                [
                                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                                    [])
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.Ref,
                                                                                                                              M.deref (|
                                                                                                                                M.call_closure (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::field::FieldSet"
                                                                                                                                    ],
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                                                    "fields",
                                                                                                                                    [],
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    M.borrow (|
                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                      M.deref (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Metadata"
                                                                                                                                            ],
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "tracing_core::callsite::Callsite",
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::callsite::DefaultCallsite",
                                                                                                                                            [],
                                                                                                                                            [],
                                                                                                                                            "metadata",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.read (|
                                                                                                                                                  get_constant (|
                                                                                                                                                    "openvm_circuit::arch::segment::execute_from_pc::__CALLSITE'1",
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "&")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                      ]
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |);
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.Ref,
                                                                                                                              M.deref (|
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.alloc (|
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "array")
                                                                                                                                      [
                                                                                                                                        Value.Integer
                                                                                                                                          IntegerKind.Usize
                                                                                                                                          1
                                                                                                                                      ]
                                                                                                                                      [
                                                                                                                                        Ty.tuple
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "&")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::field::Field"
                                                                                                                                              ];
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "core::option::Option")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "&")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.dyn
                                                                                                                                                      [
                                                                                                                                                        ("tracing_core::field::Value::Trait",
                                                                                                                                                          [])
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                              ]
                                                                                                                                          ]
                                                                                                                                      ],
                                                                                                                                    Value.Array
                                                                                                                                      [
                                                                                                                                        Value.Tuple
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.alloc (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::field::Field",
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::field::Field",
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "core::option::Option")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "tracing_core::field::Field"
                                                                                                                                                      ],
                                                                                                                                                    "expect",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    M.call_closure (|
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "core::option::Option")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "tracing_core::field::Field"
                                                                                                                                                        ],
                                                                                                                                                      M.get_trait_method (|
                                                                                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                                                                                        Ty.path
                                                                                                                                                          "tracing_core::field::Iter",
                                                                                                                                                        [],
                                                                                                                                                        [],
                                                                                                                                                        "next",
                                                                                                                                                        [],
                                                                                                                                                        []
                                                                                                                                                      |),
                                                                                                                                                      [
                                                                                                                                                        M.borrow (|
                                                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                                                          M.deref (|
                                                                                                                                                            M.borrow (|
                                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                                              iter
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        |)
                                                                                                                                                      ]
                                                                                                                                                    |);
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                      M.deref (|
                                                                                                                                                        mk_str (|
                                                                                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::option::Option::Some"
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "&")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.dyn
                                                                                                                                                      [
                                                                                                                                                        ("tracing_core::field::Value::Trait",
                                                                                                                                                          [])
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                              ]
                                                                                                                                              [
                                                                                                                                                M.read (|
                                                                                                                                                  M.use
                                                                                                                                                    (M.alloc (|
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.dyn
                                                                                                                                                            [
                                                                                                                                                              ("tracing_core::field::Value::Trait",
                                                                                                                                                                [])
                                                                                                                                                            ]
                                                                                                                                                        ],
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "&")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Ty.dyn
                                                                                                                                                              [
                                                                                                                                                                ("tracing_core::field::Value::Trait",
                                                                                                                                                                  [])
                                                                                                                                                              ]
                                                                                                                                                          ],
                                                                                                                                                        M.pointer_coercion
                                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                                          (Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.path
                                                                                                                                                                "core::fmt::Arguments"
                                                                                                                                                            ])
                                                                                                                                                          (Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.dyn
                                                                                                                                                                [
                                                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                                                    [])
                                                                                                                                                                ]
                                                                                                                                                            ]),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                M.alloc (|
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "core::fmt::Arguments",
                                                                                                                                                                  M.call_closure (|
                                                                                                                                                                    Ty.path
                                                                                                                                                                      "core::fmt::Arguments",
                                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                                      Ty.path
                                                                                                                                                                        "core::fmt::Arguments",
                                                                                                                                                                      "new_v1_formatted",
                                                                                                                                                                      [],
                                                                                                                                                                      []
                                                                                                                                                                    |),
                                                                                                                                                                    [
                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "&")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Ty.apply
                                                                                                                                                                              (Ty.path
                                                                                                                                                                                "slice")
                                                                                                                                                                              []
                                                                                                                                                                              [
                                                                                                                                                                                Ty.apply
                                                                                                                                                                                  (Ty.path
                                                                                                                                                                                    "&")
                                                                                                                                                                                  []
                                                                                                                                                                                  [
                                                                                                                                                                                    Ty.path
                                                                                                                                                                                      "str"
                                                                                                                                                                                  ]
                                                                                                                                                                              ]
                                                                                                                                                                          ],
                                                                                                                                                                        M.pointer_coercion
                                                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                                                          (Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "array")
                                                                                                                                                                                [
                                                                                                                                                                                  Value.Integer
                                                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                                                    2
                                                                                                                                                                                ]
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "&")
                                                                                                                                                                                    []
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.path
                                                                                                                                                                                        "str"
                                                                                                                                                                                    ]
                                                                                                                                                                                ]
                                                                                                                                                                            ])
                                                                                                                                                                          (Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "slice")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "&")
                                                                                                                                                                                    []
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.path
                                                                                                                                                                                        "str"
                                                                                                                                                                                    ]
                                                                                                                                                                                ]
                                                                                                                                                                            ]),
                                                                                                                                                                        [
                                                                                                                                                                          M.borrow (|
                                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                                            M.deref (|
                                                                                                                                                                              M.borrow (|
                                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                                M.alloc (|
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "array")
                                                                                                                                                                                    [
                                                                                                                                                                                      Value.Integer
                                                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                                                        2
                                                                                                                                                                                    ]
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.apply
                                                                                                                                                                                        (Ty.path
                                                                                                                                                                                          "&")
                                                                                                                                                                                        []
                                                                                                                                                                                        [
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "str"
                                                                                                                                                                                        ]
                                                                                                                                                                                    ],
                                                                                                                                                                                  Value.Array
                                                                                                                                                                                    [
                                                                                                                                                                                      mk_str (|
                                                                                                                                                                                        "pc: "
                                                                                                                                                                                      |);
                                                                                                                                                                                      mk_str (|
                                                                                                                                                                                        " | system phantom: "
                                                                                                                                                                                      |)
                                                                                                                                                                                    ]
                                                                                                                                                                                |)
                                                                                                                                                                              |)
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        ]
                                                                                                                                                                      |);
                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "&")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Ty.apply
                                                                                                                                                                              (Ty.path
                                                                                                                                                                                "slice")
                                                                                                                                                                              []
                                                                                                                                                                              [
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Argument"
                                                                                                                                                                              ]
                                                                                                                                                                          ],
                                                                                                                                                                        M.pointer_coercion
                                                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                                                          (Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "array")
                                                                                                                                                                                [
                                                                                                                                                                                  Value.Integer
                                                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                                                    2
                                                                                                                                                                                ]
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "core::fmt::rt::Argument"
                                                                                                                                                                                ]
                                                                                                                                                                            ])
                                                                                                                                                                          (Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "slice")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "core::fmt::rt::Argument"
                                                                                                                                                                                ]
                                                                                                                                                                            ]),
                                                                                                                                                                        [
                                                                                                                                                                          M.borrow (|
                                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                                            M.deref (|
                                                                                                                                                                              M.borrow (|
                                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                                M.alloc (|
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "array")
                                                                                                                                                                                    [
                                                                                                                                                                                      Value.Integer
                                                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                                                        2
                                                                                                                                                                                    ]
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.path
                                                                                                                                                                                        "core::fmt::rt::Argument"
                                                                                                                                                                                    ],
                                                                                                                                                                                  Value.Array
                                                                                                                                                                                    [
                                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                                        Ty.path
                                                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                                                          "new_lower_hex",
                                                                                                                                                                                          [],
                                                                                                                                                                                          [
                                                                                                                                                                                            Ty.path
                                                                                                                                                                                              "u32"
                                                                                                                                                                                          ]
                                                                                                                                                                                        |),
                                                                                                                                                                                        [
                                                                                                                                                                                          M.borrow (|
                                                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                                                            M.deref (|
                                                                                                                                                                                              M.borrow (|
                                                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                                                pc
                                                                                                                                                                                              |)
                                                                                                                                                                                            |)
                                                                                                                                                                                          |)
                                                                                                                                                                                        ]
                                                                                                                                                                                      |);
                                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                                        Ty.path
                                                                                                                                                                                          "core::fmt::rt::Argument",
                                                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                                                                          "new_debug",
                                                                                                                                                                                          [],
                                                                                                                                                                                          [
                                                                                                                                                                                            Ty.apply
                                                                                                                                                                                              (Ty.path
                                                                                                                                                                                                "core::option::Option")
                                                                                                                                                                                              []
                                                                                                                                                                                              [
                                                                                                                                                                                                Ty.path
                                                                                                                                                                                                  "openvm_instructions::phantom::SysPhantom"
                                                                                                                                                                                              ]
                                                                                                                                                                                          ]
                                                                                                                                                                                        |),
                                                                                                                                                                                        [
                                                                                                                                                                                          M.borrow (|
                                                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                                                            M.deref (|
                                                                                                                                                                                              M.borrow (|
                                                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                                                phantom
                                                                                                                                                                                              |)
                                                                                                                                                                                            |)
                                                                                                                                                                                          |)
                                                                                                                                                                                        ]
                                                                                                                                                                                      |)
                                                                                                                                                                                    ]
                                                                                                                                                                                |)
                                                                                                                                                                              |)
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        ]
                                                                                                                                                                      |);
                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "&")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Ty.apply
                                                                                                                                                                              (Ty.path
                                                                                                                                                                                "slice")
                                                                                                                                                                              []
                                                                                                                                                                              [
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "core::fmt::rt::Placeholder"
                                                                                                                                                                              ]
                                                                                                                                                                          ],
                                                                                                                                                                        M.pointer_coercion
                                                                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                                                                          (Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "array")
                                                                                                                                                                                [
                                                                                                                                                                                  Value.Integer
                                                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                                                    2
                                                                                                                                                                                ]
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "core::fmt::rt::Placeholder"
                                                                                                                                                                                ]
                                                                                                                                                                            ])
                                                                                                                                                                          (Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "slice")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "core::fmt::rt::Placeholder"
                                                                                                                                                                                ]
                                                                                                                                                                            ]),
                                                                                                                                                                        [
                                                                                                                                                                          M.borrow (|
                                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                                            M.deref (|
                                                                                                                                                                              M.borrow (|
                                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                                M.alloc (|
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "array")
                                                                                                                                                                                    [
                                                                                                                                                                                      Value.Integer
                                                                                                                                                                                        IntegerKind.Usize
                                                                                                                                                                                        2
                                                                                                                                                                                    ]
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.path
                                                                                                                                                                                        "core::fmt::rt::Placeholder"
                                                                                                                                                                                    ],
                                                                                                                                                                                  Value.Array
                                                                                                                                                                                    [
                                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                                        Ty.path
                                                                                                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                                                                          "new",
                                                                                                                                                                                          [],
                                                                                                                                                                                          []
                                                                                                                                                                                        |),
                                                                                                                                                                                        [
                                                                                                                                                                                          Value.Integer
                                                                                                                                                                                            IntegerKind.Usize
                                                                                                                                                                                            0;
                                                                                                                                                                                          Value.UnicodeChar
                                                                                                                                                                                            32;
                                                                                                                                                                                          Value.StructTuple
                                                                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                            [];
                                                                                                                                                                                          Value.Integer
                                                                                                                                                                                            IntegerKind.U32
                                                                                                                                                                                            4;
                                                                                                                                                                                          Value.StructTuple
                                                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                            [];
                                                                                                                                                                                          Value.StructTuple
                                                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                        ]
                                                                                                                                                                                      |);
                                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                                        Ty.path
                                                                                                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                                                                          "new",
                                                                                                                                                                                          [],
                                                                                                                                                                                          []
                                                                                                                                                                                        |),
                                                                                                                                                                                        [
                                                                                                                                                                                          Value.Integer
                                                                                                                                                                                            IntegerKind.Usize
                                                                                                                                                                                            1;
                                                                                                                                                                                          Value.UnicodeChar
                                                                                                                                                                                            32;
                                                                                                                                                                                          Value.StructTuple
                                                                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                            [];
                                                                                                                                                                                          Value.Integer
                                                                                                                                                                                            IntegerKind.U32
                                                                                                                                                                                            0;
                                                                                                                                                                                          Value.StructTuple
                                                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                            [];
                                                                                                                                                                                          Value.StructTuple
                                                                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                            []
                                                                                                                                                                                        ]
                                                                                                                                                                                      |)
                                                                                                                                                                                    ]
                                                                                                                                                                                |)
                                                                                                                                                                              |)
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        ]
                                                                                                                                                                      |);
                                                                                                                                                                      M.call_closure (|
                                                                                                                                                                        Ty.path
                                                                                                                                                                          "core::fmt::rt::UnsafeArg",
                                                                                                                                                                        M.get_associated_function (|
                                                                                                                                                                          Ty.path
                                                                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                                                                          "new",
                                                                                                                                                                          [],
                                                                                                                                                                          []
                                                                                                                                                                        |),
                                                                                                                                                                        []
                                                                                                                                                                      |)
                                                                                                                                                                    ]
                                                                                                                                                                  |)
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    |))
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                          ]
                                                                                                                                      ]
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |) in
                                                                                                          M.alloc (|
                                                                                                            Ty.tuple
                                                                                                              [],
                                                                                                            Value.Tuple
                                                                                                              []
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (Value.Tuple
                                                                                                          []))
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Ty.tuple
                                                                                              [],
                                                                                            M.match_operator (|
                                                                                              Ty.tuple
                                                                                                [],
                                                                                              phantom,
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ0_0 :=
                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                        γ,
                                                                                                        "core::option::Option::Some",
                                                                                                        0
                                                                                                      |) in
                                                                                                    let
                                                                                                          _ :=
                                                                                                      M.is_struct_tuple (|
                                                                                                        γ0_0,
                                                                                                        "openvm_instructions::phantom::SysPhantom::DebugPanic"
                                                                                                      |) in
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        let~
                                                                                                              _ :
                                                                                                            Ty.tuple
                                                                                                              [] :=
                                                                                                          M.match_operator (|
                                                                                                            Ty.tuple
                                                                                                              [],
                                                                                                            M.alloc (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            |),
                                                                                                            [
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (let
                                                                                                                        γ :=
                                                                                                                    prev_backtrace in
                                                                                                                  let
                                                                                                                        γ0_0 :=
                                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                                      γ,
                                                                                                                      "core::option::Option::Some",
                                                                                                                      0
                                                                                                                    |) in
                                                                                                                  let
                                                                                                                        backtrace :=
                                                                                                                    M.copy (|
                                                                                                                      Ty.path
                                                                                                                        "backtrace::capture::Backtrace",
                                                                                                                      γ0_0
                                                                                                                    |) in
                                                                                                                  M.read (|
                                                                                                                    let~
                                                                                                                          _ :
                                                                                                                        Ty.tuple
                                                                                                                          [] :=
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.tuple
                                                                                                                          [],
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "backtrace::capture::Backtrace",
                                                                                                                          "resolve",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.MutRef,
                                                                                                                            backtrace
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |) in
                                                                                                                    let~
                                                                                                                          _ :
                                                                                                                        Ty.tuple
                                                                                                                          [] :=
                                                                                                                      M.read (|
                                                                                                                        let~
                                                                                                                              _ :
                                                                                                                            Ty.tuple
                                                                                                                              [] :=
                                                                                                                          M.call_closure (|
                                                                                                                            Ty.tuple
                                                                                                                              [],
                                                                                                                            M.get_function (|
                                                                                                                              "std::io::stdio::_eprint",
                                                                                                                              [],
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.path
                                                                                                                                  "core::fmt::Arguments",
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments",
                                                                                                                                  "new_v1",
                                                                                                                                  [
                                                                                                                                    Value.Integer
                                                                                                                                      IntegerKind.Usize
                                                                                                                                      2;
                                                                                                                                    Value.Integer
                                                                                                                                      IntegerKind.Usize
                                                                                                                                      1
                                                                                                                                  ],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                        M.alloc (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "array")
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                IntegerKind.Usize
                                                                                                                                                2
                                                                                                                                            ]
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "str"
                                                                                                                                                ]
                                                                                                                                            ],
                                                                                                                                          Value.Array
                                                                                                                                            [
                                                                                                                                              mk_str (|
                                                                                                                                                "openvm program failure; backtrace:
"
                                                                                                                                              |);
                                                                                                                                              mk_str (|
                                                                                                                                                "
"
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |);
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                        M.alloc (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "array")
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                IntegerKind.Usize
                                                                                                                                                1
                                                                                                                                            ]
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "core::fmt::rt::Argument"
                                                                                                                                            ],
                                                                                                                                          Value.Array
                                                                                                                                            [
                                                                                                                                              M.call_closure (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::fmt::rt::Argument",
                                                                                                                                                M.get_associated_function (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                                  "new_debug",
                                                                                                                                                  [],
                                                                                                                                                  [
                                                                                                                                                    Ty.path
                                                                                                                                                      "backtrace::capture::Backtrace"
                                                                                                                                                  ]
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    M.deref (|
                                                                                                                                                      M.borrow (|
                                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                                        backtrace
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |) in
                                                                                                                        M.alloc (|
                                                                                                                          Ty.tuple
                                                                                                                            [],
                                                                                                                          Value.Tuple
                                                                                                                            []
                                                                                                                        |)
                                                                                                                      |) in
                                                                                                                    M.alloc (|
                                                                                                                      Ty.tuple
                                                                                                                        [],
                                                                                                                      Value.Tuple
                                                                                                                        []
                                                                                                                    |)
                                                                                                                  |)));
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (M.read (|
                                                                                                                    let~
                                                                                                                          _ :
                                                                                                                        Ty.tuple
                                                                                                                          [] :=
                                                                                                                      M.read (|
                                                                                                                        let~
                                                                                                                              _ :
                                                                                                                            Ty.tuple
                                                                                                                              [] :=
                                                                                                                          M.call_closure (|
                                                                                                                            Ty.tuple
                                                                                                                              [],
                                                                                                                            M.get_function (|
                                                                                                                              "std::io::stdio::_eprint",
                                                                                                                              [],
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.path
                                                                                                                                  "core::fmt::Arguments",
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::Arguments",
                                                                                                                                  "new_const",
                                                                                                                                  [
                                                                                                                                    Value.Integer
                                                                                                                                      IntegerKind.Usize
                                                                                                                                      1
                                                                                                                                  ],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                        M.alloc (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "array")
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                IntegerKind.Usize
                                                                                                                                                1
                                                                                                                                            ]
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "str"
                                                                                                                                                ]
                                                                                                                                            ],
                                                                                                                                          Value.Array
                                                                                                                                            [
                                                                                                                                              mk_str (|
                                                                                                                                                "openvm program failure; no backtrace
"
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |) in
                                                                                                                        M.alloc (|
                                                                                                                          Ty.tuple
                                                                                                                            [],
                                                                                                                          Value.Tuple
                                                                                                                            []
                                                                                                                        |)
                                                                                                                      |) in
                                                                                                                    M.alloc (|
                                                                                                                      Ty.tuple
                                                                                                                        [],
                                                                                                                      Value.Tuple
                                                                                                                        []
                                                                                                                    |)
                                                                                                                  |)))
                                                                                                            ]
                                                                                                          |) in
                                                                                                        M.return_ (|
                                                                                                          Value.StructTuple
                                                                                                            "core::result::Result::Err"
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_circuit::arch::segment::ExecutionSegmentState";
                                                                                                              Ty.path
                                                                                                                "openvm_circuit::arch::execution::ExecutionError"
                                                                                                            ]
                                                                                                            [
                                                                                                              Value.mkStructRecord
                                                                                                                "openvm_circuit::arch::execution::ExecutionError::Fail"
                                                                                                                []
                                                                                                                []
                                                                                                                [
                                                                                                                  ("pc",
                                                                                                                    M.read (|
                                                                                                                      pc
                                                                                                                    |))
                                                                                                                ]
                                                                                                            ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)));
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ0_0 :=
                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                        γ,
                                                                                                        "core::option::Option::Some",
                                                                                                        0
                                                                                                      |) in
                                                                                                    let
                                                                                                          _ :=
                                                                                                      M.is_struct_tuple (|
                                                                                                        γ0_0,
                                                                                                        "openvm_instructions::phantom::SysPhantom::CtStart"
                                                                                                      |) in
                                                                                                    M.call_closure (|
                                                                                                      Ty.tuple
                                                                                                        [],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "openvm_circuit::metrics::cycle_tracker::CycleTracker",
                                                                                                        "start",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.MutRef,
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.deref (|
                                                                                                              M.read (|
                                                                                                                metrics
                                                                                                              |)
                                                                                                            |),
                                                                                                            "openvm_circuit::metrics::VmMetrics",
                                                                                                            "cycle_tracker"
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::option::Option")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "alloc::string::String"
                                                                                                              ],
                                                                                                            "unwrap_or",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String"
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::option::Option")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "alloc::string::String"
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                "cloned",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  dsl_instr
                                                                                                                |)
                                                                                                              ]
                                                                                                            |);
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "alloc::string::String",
                                                                                                              M.get_trait_method (|
                                                                                                                "alloc::string::ToString",
                                                                                                                Ty.path
                                                                                                                  "str",
                                                                                                                [],
                                                                                                                [],
                                                                                                                "to_string",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    mk_str (|
                                                                                                                      "Default"
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)));
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ0_0 :=
                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                        γ,
                                                                                                        "core::option::Option::Some",
                                                                                                        0
                                                                                                      |) in
                                                                                                    let
                                                                                                          _ :=
                                                                                                      M.is_struct_tuple (|
                                                                                                        γ0_0,
                                                                                                        "openvm_instructions::phantom::SysPhantom::CtEnd"
                                                                                                      |) in
                                                                                                    M.call_closure (|
                                                                                                      Ty.tuple
                                                                                                        [],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "openvm_circuit::metrics::cycle_tracker::CycleTracker",
                                                                                                        "end",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.MutRef,
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.deref (|
                                                                                                              M.read (|
                                                                                                                metrics
                                                                                                              |)
                                                                                                            |),
                                                                                                            "openvm_circuit::metrics::VmMetrics",
                                                                                                            "cycle_tracker"
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::option::Option")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "alloc::string::String"
                                                                                                              ],
                                                                                                            "unwrap_or",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String"
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::option::Option")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "alloc::string::String"
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                "cloned",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  dsl_instr
                                                                                                                |)
                                                                                                              ]
                                                                                                            |);
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "alloc::string::String",
                                                                                                              M.get_trait_method (|
                                                                                                                "alloc::string::ToString",
                                                                                                                Ty.path
                                                                                                                  "str",
                                                                                                                [],
                                                                                                                [],
                                                                                                                "to_string",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    mk_str (|
                                                                                                                      "Default"
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)));
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (Value.Tuple
                                                                                                      []))
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (Value.Tuple
                                                                                          []))
                                                                                  ]
                                                                                |) in
                                                                              let~ _ :
                                                                                  Ty.tuple [] :=
                                                                                M.write (|
                                                                                  prev_backtrace,
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "backtrace::capture::Backtrace"
                                                                                      ],
                                                                                    M.get_associated_function (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "backtrace::capture::Backtrace"
                                                                                            ]
                                                                                        ],
                                                                                      "cloned",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        trace
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let~ _ :
                                                                                  Ty.tuple [] :=
                                                                                M.match_operator (|
                                                                                  Ty.tuple [],
                                                                                  M.alloc (|
                                                                                    Ty.tuple [],
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.alloc (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&mut")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_circuit::arch::config::VmConfig"
                                                                                                      []
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                      VC
                                                                                                      "Executor"
                                                                                                  ]
                                                                                              ],
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&mut")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_circuit::arch::config::VmConfig"
                                                                                                        []
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                        VC
                                                                                                        "Executor"
                                                                                                    ]
                                                                                                ],
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "openvm_circuit::arch::extensions::VmInventory")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_circuit::arch::config::VmConfig"
                                                                                                      []
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                      VC
                                                                                                      "Executor";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_circuit::arch::config::VmConfig"
                                                                                                      []
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                      VC
                                                                                                      "Periphery"
                                                                                                  ],
                                                                                                "get_mut_executor",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                    M.deref (|
                                                                                                      M.read (|
                                                                                                        chip_complex
                                                                                                      |)
                                                                                                    |),
                                                                                                    "openvm_circuit::arch::extensions::VmChipComplex",
                                                                                                    "inventory"
                                                                                                  |)
                                                                                                |);
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      opcode
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        let γ0_0 :=
                                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                                            γ,
                                                                                            "core::option::Option::Some",
                                                                                            0
                                                                                          |) in
                                                                                        let
                                                                                              executor :=
                                                                                          M.copy (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&mut")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_circuit::arch::config::VmConfig"
                                                                                                  []
                                                                                                  [
                                                                                                    F
                                                                                                  ]
                                                                                                  VC
                                                                                                  "Executor"
                                                                                              ],
                                                                                            γ0_0
                                                                                          |) in
                                                                                        M.read (|
                                                                                          let~
                                                                                                next_state :
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "openvm_circuit::arch::execution::ExecutionState")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "u32"
                                                                                                ] :=
                                                                                            M.match_operator (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "openvm_circuit::arch::execution::ExecutionState")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "u32"
                                                                                                ],
                                                                                              M.alloc (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::ops::control_flow::ControlFlow")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.path
                                                                                                          "openvm_circuit::arch::execution::ExecutionError"
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "openvm_circuit::arch::execution::ExecutionState")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "u32"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::ops::control_flow::ControlFlow")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::result::Result")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "core::convert::Infallible";
                                                                                                          Ty.path
                                                                                                            "openvm_circuit::arch::execution::ExecutionError"
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "openvm_circuit::arch::execution::ExecutionState")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "u32"
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::try_trait::Try",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "openvm_circuit::arch::execution::ExecutionState")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "u32"
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "openvm_circuit::arch::execution::ExecutionError"
                                                                                                      ],
                                                                                                    [],
                                                                                                    [],
                                                                                                    "branch",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::result::Result")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "openvm_circuit::arch::execution::ExecutionState")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "u32"
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "openvm_circuit::arch::execution::ExecutionError"
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "openvm_circuit::arch::execution::InstructionExecutor",
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_circuit::arch::config::VmConfig"
                                                                                                          []
                                                                                                          [
                                                                                                            F
                                                                                                          ]
                                                                                                          VC
                                                                                                          "Executor",
                                                                                                        [],
                                                                                                        [
                                                                                                          F
                                                                                                        ],
                                                                                                        "execute",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.MutRef,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              executor
                                                                                                            |)
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.MutRef,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              memory_controller
                                                                                                            |)
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              instruction
                                                                                                            |)
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "openvm_circuit::arch::execution::ExecutionState")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "u32"
                                                                                                            ],
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "openvm_circuit::arch::execution::ExecutionState")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "u32"
                                                                                                              ],
                                                                                                            "new",
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "u32";
                                                                                                              Ty.path
                                                                                                                "u32"
                                                                                                            ]
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              pc
                                                                                                            |);
                                                                                                            M.read (|
                                                                                                              timestamp
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ0_0 :=
                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                        γ,
                                                                                                        "core::ops::control_flow::ControlFlow::Break",
                                                                                                        0
                                                                                                      |) in
                                                                                                    let
                                                                                                          residual :=
                                                                                                      M.copy (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::result::Result")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "core::convert::Infallible";
                                                                                                            Ty.path
                                                                                                              "openvm_circuit::arch::execution::ExecutionError"
                                                                                                          ],
                                                                                                        γ0_0
                                                                                                      |) in
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        M.return_ (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "openvm_circuit::arch::segment::ExecutionSegmentState";
                                                                                                                Ty.path
                                                                                                                  "openvm_circuit::arch::execution::ExecutionError"
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::FromResidual",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_circuit::arch::segment::ExecutionSegmentState";
                                                                                                                  Ty.path
                                                                                                                    "openvm_circuit::arch::execution::ExecutionError"
                                                                                                                ],
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "core::convert::Infallible";
                                                                                                                    Ty.path
                                                                                                                      "openvm_circuit::arch::execution::ExecutionError"
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "from_residual",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                residual
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)));
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ0_0 :=
                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                        γ,
                                                                                                        "core::ops::control_flow::ControlFlow::Continue",
                                                                                                        0
                                                                                                      |) in
                                                                                                    let
                                                                                                          val :=
                                                                                                      M.copy (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "openvm_circuit::arch::execution::ExecutionState")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "u32"
                                                                                                          ],
                                                                                                        γ0_0
                                                                                                      |) in
                                                                                                    M.read (|
                                                                                                      val
                                                                                                    |)))
                                                                                              ]
                                                                                            |) in
                                                                                          let~ _ :
                                                                                              Ty.tuple
                                                                                                [] :=
                                                                                            M.match_operator (|
                                                                                              Ty.tuple
                                                                                                [],
                                                                                              M.alloc (|
                                                                                                Ty.tuple
                                                                                                  [],
                                                                                                Value.Tuple
                                                                                                  []
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          γ :=
                                                                                                      M.use
                                                                                                        (M.alloc (|
                                                                                                          Ty.path
                                                                                                            "bool",
                                                                                                          UnOp.not (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "bool",
                                                                                                              BinOp.gt,
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                                    next_state,
                                                                                                                    "openvm_circuit::arch::execution::ExecutionState",
                                                                                                                    "timestamp"
                                                                                                                  |)
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  timestamp
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)) in
                                                                                                    let
                                                                                                          _ :=
                                                                                                      is_constant_or_break_match (|
                                                                                                        M.read (|
                                                                                                          γ
                                                                                                        |),
                                                                                                        Value.Bool
                                                                                                          true
                                                                                                      |) in
                                                                                                    M.never_to_any (|
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "never",
                                                                                                        M.get_function (|
                                                                                                          "core::panicking::panic",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          mk_str (|
                                                                                                            "assertion failed: next_state.timestamp > timestamp"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)));
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (Value.Tuple
                                                                                                      []))
                                                                                              ]
                                                                                            |) in
                                                                                          let~ _ :
                                                                                              Ty.tuple
                                                                                                [] :=
                                                                                            M.write (|
                                                                                              pc,
                                                                                              M.read (|
                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                  next_state,
                                                                                                  "openvm_circuit::arch::execution::ExecutionState",
                                                                                                  "pc"
                                                                                                |)
                                                                                              |)
                                                                                            |) in
                                                                                          let~ _ :
                                                                                              Ty.tuple
                                                                                                [] :=
                                                                                            M.write (|
                                                                                              timestamp,
                                                                                              M.read (|
                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                  next_state,
                                                                                                  "openvm_circuit::arch::execution::ExecutionState",
                                                                                                  "timestamp"
                                                                                                |)
                                                                                              |)
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Ty.tuple
                                                                                              [],
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.return_ (|
                                                                                              Value.StructTuple
                                                                                                "core::result::Result::Err"
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_circuit::arch::segment::ExecutionSegmentState";
                                                                                                  Ty.path
                                                                                                    "openvm_circuit::arch::execution::ExecutionError"
                                                                                                ]
                                                                                                [
                                                                                                  Value.mkStructRecord
                                                                                                    "openvm_circuit::arch::execution::ExecutionError::DisabledOperation"
                                                                                                    []
                                                                                                    []
                                                                                                    [
                                                                                                      ("pc",
                                                                                                        M.read (|
                                                                                                          pc
                                                                                                        |));
                                                                                                      ("opcode",
                                                                                                        M.read (|
                                                                                                          opcode
                                                                                                        |))
                                                                                                    ]
                                                                                                ]
                                                                                            |)
                                                                                          |)
                                                                                        |)))
                                                                                  ]
                                                                                |) in
                                                                              M.alloc (|
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.path
                                                                                      "openvm_instructions::VmOpcode";
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "alloc::string::String"
                                                                                      ]
                                                                                  ],
                                                                                Value.Tuple
                                                                                  [
                                                                                    M.read (|
                                                                                      opcode
                                                                                    |);
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "alloc::string::String"
                                                                                        ],
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "alloc::string::String"
                                                                                              ]
                                                                                          ],
                                                                                        "cloned",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          dsl_instr
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                              |)
                                                                            |)))
                                                                      ]
                                                                    |)))
                                                              ]
                                                            |)
                                                          |)
                                                        |)))
                                                  ]
                                                |)))
                                          ]
                                        |)))
                                  ]
                                |)
                              |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                    let opcode :=
                                      M.copy (| Ty.path "openvm_instructions::VmOpcode", γ0_0 |) in
                                    let dsl_instr :=
                                      M.copy (|
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [ Ty.path "alloc::string::String" ],
                                        γ0_1
                                      |) in
                                    M.read (|
                                      let~ _ : Ty.tuple [] :=
                                        M.call_closure (|
                                          Ty.tuple [],
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path
                                                "openvm_circuit::arch::segment::ExecutionSegment")
                                              []
                                              [ F; VC ],
                                            "update_instruction_metrics",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| self |) |)
                                            |);
                                            M.read (| pc |);
                                            M.read (| opcode |);
                                            M.read (| dsl_instr |)
                                          ]
                                        |) in
                                      M.alloc (|
                                        Ty.tuple [],
                                        M.match_operator (|
                                          Ty.tuple [],
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ :=
                                                  M.use
                                                    (M.alloc (|
                                                      Ty.path "bool",
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_circuit::arch::segment::ExecutionSegment")
                                                            []
                                                            [ F; VC ],
                                                          "should_segment",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.deref (| M.read (| self |) |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)) in
                                                let _ :=
                                                  is_constant_or_break_match (|
                                                    M.read (| γ |),
                                                    Value.Bool true
                                                  |) in
                                                M.never_to_any (|
                                                  M.read (|
                                                    let~ _ : Ty.tuple [] :=
                                                      M.call_closure (|
                                                        Ty.tuple [],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_circuit::system::connector::VmConnectorChip")
                                                            []
                                                            [ F ],
                                                          "end",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.deref (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&mut")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_circuit::system::connector::VmConnectorChip")
                                                                      []
                                                                      [ F ]
                                                                  ],
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_circuit::arch::extensions::VmChipComplex")
                                                                    []
                                                                    [
                                                                      F;
                                                                      Ty.associated_in_trait
                                                                        "openvm_circuit::arch::config::VmConfig"
                                                                        []
                                                                        [ F ]
                                                                        VC
                                                                        "Executor";
                                                                      Ty.associated_in_trait
                                                                        "openvm_circuit::arch::config::VmConfig"
                                                                        []
                                                                        [ F ]
                                                                        VC
                                                                        "Periphery"
                                                                    ],
                                                                  "connector_chip_mut",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.SubPointer.get_struct_record_field (|
                                                                      M.deref (|
                                                                        M.read (| self |)
                                                                      |),
                                                                      "openvm_circuit::arch::segment::ExecutionSegment",
                                                                      "chip_complex"
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |);
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_circuit::arch::execution::ExecutionState")
                                                              []
                                                              [ Ty.path "u32" ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_circuit::arch::execution::ExecutionState")
                                                                []
                                                                [ Ty.path "u32" ],
                                                              "new",
                                                              [],
                                                              [ Ty.path "u32"; Ty.path "u32" ]
                                                            |),
                                                            [
                                                              M.read (| pc |);
                                                              M.read (| timestamp |)
                                                            ]
                                                          |);
                                                          Value.StructTuple
                                                            "core::option::Option::None"
                                                            []
                                                            [ Ty.path "u32" ]
                                                            []
                                                        ]
                                                      |) in
                                                    M.break (||)
                                                  |)
                                                |)));
                                            fun γ => ltac:(M.monadic (Value.Tuple []))
                                          ]
                                        |)
                                      |)
                                    |)))
                              ]
                            |)
                          |)))
                      |)
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.write (|
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "openvm_circuit::arch::segment::ExecutionSegment",
                        "final_memory"
                      |),
                      Value.StructTuple
                        "core::option::Option::Some"
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                            [ Value.Integer IntegerKind.Usize 4096 ]
                            [ F ]
                        ]
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                              [ Value.Integer IntegerKind.Usize 4096 ]
                              [ F ],
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "openvm_circuit::system::memory::paged_vec::AddressMap")
                                [ Value.Integer IntegerKind.Usize 4096 ]
                                [ F ],
                              [],
                              [],
                              "clone",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_circuit::system::memory::paged_vec::AddressMap")
                                          [ Value.Integer IntegerKind.Usize 4096 ]
                                          [ F ]
                                      ],
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path
                                          "openvm_circuit::system::memory::controller::MemoryController")
                                        []
                                        [ F ],
                                      "memory_image",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.SubPointer.get_struct_record_field (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.SubPointer.get_struct_record_field (|
                                              M.deref (| M.read (| self |) |),
                                              "openvm_circuit::arch::segment::ExecutionSegment",
                                              "chip_complex"
                                            |),
                                            "openvm_circuit::arch::extensions::VmChipComplex",
                                            "base"
                                          |),
                                          "openvm_circuit::arch::extensions::SystemBase",
                                          "memory_controller"
                                        |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            ]
                          |)
                        ]
                    |) in
                  M.alloc (|
                    Ty.apply
                      (Ty.path "core::result::Result")
                      []
                      [
                        Ty.path "openvm_circuit::arch::segment::ExecutionSegmentState";
                        Ty.path "openvm_circuit::arch::execution::ExecutionError"
                      ],
                    Value.StructTuple
                      "core::result::Result::Ok"
                      []
                      [
                        Ty.path "openvm_circuit::arch::segment::ExecutionSegmentState";
                        Ty.path "openvm_circuit::arch::execution::ExecutionError"
                      ]
                      [
                        Value.mkStructRecord
                          "openvm_circuit::arch::segment::ExecutionSegmentState"
                          []
                          []
                          [ ("pc", M.read (| pc |)); ("is_terminated", M.read (| did_terminate |)) ]
                      ]
                  |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_execute_from_pc :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C (Self F VC) "execute_from_pc" (execute_from_pc F VC).
      Admitted.
      Global Typeclasses Opaque execute_from_pc.
      
      (*
          pub fn generate_proof_input<SC: StarkGenericConfig>(
              #[allow(unused_mut)] mut self,
              cached_program: Option<CommittedTraceData<SC>>,
          ) -> Result<ProofInput<SC>, GenerationError>
          where
              Domain<SC>: PolynomialSpace<Val = F>,
              VC::Executor: Chip<SC>,
              VC::Periphery: Chip<SC>,
          {
              metrics_span("trace_gen_time_ms", || {
                  self.chip_complex.generate_proof_input(
                      cached_program,
                      &self.trace_height_constraints,
                      #[cfg(feature = "bench-metrics")]
                      &mut self.metrics,
                  )
              })
          }
      *)
      Definition generate_proof_input
          (F VC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [], [ SC ], [ self; cached_program ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply (Ty.path "openvm_circuit::arch::segment::ExecutionSegment") [] [ F; VC ],
                self
              |) in
            let cached_program :=
              M.alloc (|
                Ty.apply
                  (Ty.path "core::option::Option")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::types::CommittedTraceData")
                      []
                      [ SC ]
                  ],
                cached_program
              |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.apply (Ty.path "openvm_stark_backend::prover::types::ProofInput") [] [ SC ];
                  Ty.path "openvm_circuit::arch::vm::GenerationError"
                ],
              M.get_function (|
                "openvm_stark_backend::utils::metrics_span",
                [],
                [
                  Ty.apply
                    (Ty.path "core::result::Result")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_stark_backend::prover::types::ProofInput")
                        []
                        [ SC ];
                      Ty.path "openvm_circuit::arch::vm::GenerationError"
                    ];
                  Ty.function
                    []
                    (Ty.apply
                      (Ty.path "core::result::Result")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_stark_backend::prover::types::ProofInput")
                          []
                          [ SC ];
                        Ty.path "openvm_circuit::arch::vm::GenerationError"
                      ]);
                  Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                ]
              |),
              [
                mk_str (| "trace_gen_time_ms" |);
                M.closure
                  (fun γ =>
                    ltac:(M.monadic
                      match γ with
                      | [ α0 ] =>
                        ltac:(M.monadic
                          (M.match_operator (|
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::types::ProofInput")
                                  []
                                  [ SC ];
                                Ty.path "openvm_circuit::arch::vm::GenerationError"
                              ],
                            M.alloc (| Ty.tuple [], α0 |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (M.call_closure (|
                                    Ty.apply
                                      (Ty.path "core::result::Result")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_stark_backend::prover::types::ProofInput")
                                          []
                                          [ SC ];
                                        Ty.path "openvm_circuit::arch::vm::GenerationError"
                                      ],
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                                        []
                                        [
                                          F;
                                          Ty.associated_in_trait
                                            "openvm_circuit::arch::config::VmConfig"
                                            []
                                            [ F ]
                                            VC
                                            "Executor";
                                          Ty.associated_in_trait
                                            "openvm_circuit::arch::config::VmConfig"
                                            []
                                            [ F ]
                                            VC
                                            "Periphery"
                                        ],
                                      "generate_proof_input",
                                      [],
                                      [ SC ]
                                    |),
                                    [
                                      M.read (|
                                        M.SubPointer.get_struct_record_field (|
                                          self,
                                          "openvm_circuit::arch::segment::ExecutionSegment",
                                          "chip_complex"
                                        |)
                                      |);
                                      M.read (| cached_program |);
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (|
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "slice")
                                                  []
                                                  [
                                                    Ty.path
                                                      "openvm_stark_backend::keygen::types::LinearConstraint"
                                                  ]
                                              ],
                                            M.get_trait_method (|
                                              "core::ops::deref::Deref",
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.path
                                                    "openvm_stark_backend::keygen::types::LinearConstraint";
                                                  Ty.path "alloc::alloc::Global"
                                                ],
                                              [],
                                              [],
                                              "deref",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.SubPointer.get_struct_record_field (|
                                                      self,
                                                      "openvm_circuit::arch::segment::ExecutionSegment",
                                                      "trace_height_constraints"
                                                    |)
                                                  |)
                                                |)
                                              |)
                                            ]
                                          |)
                                        |)
                                      |);
                                      M.borrow (|
                                        Pointer.Kind.MutRef,
                                        M.deref (|
                                          M.borrow (|
                                            Pointer.Kind.MutRef,
                                            M.SubPointer.get_struct_record_field (|
                                              self,
                                              "openvm_circuit::arch::segment::ExecutionSegment",
                                              "metrics"
                                            |)
                                          |)
                                        |)
                                      |)
                                    ]
                                  |)))
                            ]
                          |)))
                      | _ => M.impossible "wrong number of arguments"
                      end))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_generate_proof_input :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C (Self F VC) "generate_proof_input" (generate_proof_input F VC).
      Admitted.
      Global Typeclasses Opaque generate_proof_input.
      
      (*
          fn should_segment(&mut self) -> bool {
              if !self.system_config().continuation_enabled {
                  return false;
              }
              // Avoid checking segment too often.
              if self.since_last_segment_check != SEGMENT_CHECK_INTERVAL {
                  self.since_last_segment_check += 1;
                  return false;
              }
              self.since_last_segment_check = 0;
              let segmentation_strategy = &self.system_config().segmentation_strategy;
              segmentation_strategy.should_segment(
                  &self.air_names,
                  &self
                      .chip_complex
                      .dynamic_trace_heights()
                      .collect::<Vec<_>>(),
                  &self.chip_complex.current_trace_cells(),
              )
          }
      *)
      Definition should_segment
          (F VC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&mut")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::segment::ExecutionSegment")
                      []
                      [ F; VC ]
                  ],
                self
              |) in
            M.catch_return (Ty.path "bool") (|
              ltac:(M.monadic
                (M.read (|
                  let~ _ : Ty.tuple [] :=
                    M.match_operator (|
                      Ty.tuple [],
                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ :=
                              M.use
                                (M.alloc (|
                                  Ty.path "bool",
                                  UnOp.not (|
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (|
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.path "openvm_circuit::arch::config::SystemConfig"
                                              ],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_circuit::arch::segment::ExecutionSegment")
                                                []
                                                [ F; VC ],
                                              "system_config",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| self |) |)
                                              |)
                                            ]
                                          |)
                                        |),
                                        "openvm_circuit::arch::config::SystemConfig",
                                        "continuation_enabled"
                                      |)
                                    |)
                                  |)
                                |)) in
                            let _ :=
                              is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                            M.never_to_any (| M.read (| M.return_ (| Value.Bool false |) |) |)));
                        fun γ => ltac:(M.monadic (Value.Tuple []))
                      ]
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.match_operator (|
                      Ty.tuple [],
                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ :=
                              M.use
                                (M.alloc (|
                                  Ty.path "bool",
                                  M.call_closure (|
                                    Ty.path "bool",
                                    BinOp.ne,
                                    [
                                      M.read (|
                                        M.SubPointer.get_struct_record_field (|
                                          M.deref (| M.read (| self |) |),
                                          "openvm_circuit::arch::segment::ExecutionSegment",
                                          "since_last_segment_check"
                                        |)
                                      |);
                                      M.read (|
                                        get_constant (|
                                          "openvm_circuit::arch::segment::SEGMENT_CHECK_INTERVAL",
                                          Ty.path "usize"
                                        |)
                                      |)
                                    ]
                                  |)
                                |)) in
                            let _ :=
                              is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                            M.never_to_any (|
                              M.read (|
                                let~ _ : Ty.tuple [] :=
                                  let β :=
                                    M.SubPointer.get_struct_record_field (|
                                      M.deref (| M.read (| self |) |),
                                      "openvm_circuit::arch::segment::ExecutionSegment",
                                      "since_last_segment_check"
                                    |) in
                                  M.write (|
                                    β,
                                    M.call_closure (|
                                      Ty.path "usize",
                                      BinOp.Wrap.add,
                                      [ M.read (| β |); Value.Integer IntegerKind.Usize 1 ]
                                    |)
                                  |) in
                                M.return_ (| Value.Bool false |)
                              |)
                            |)));
                        fun γ => ltac:(M.monadic (Value.Tuple []))
                      ]
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.write (|
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "openvm_circuit::arch::segment::ExecutionSegment",
                        "since_last_segment_check"
                      |),
                      Value.Integer IntegerKind.Usize 0
                    |) in
                  let~ segmentation_strategy :
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::sync::Arc")
                            []
                            [
                              Ty.dyn
                                [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", [])
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ] :=
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [ Ty.path "openvm_circuit::arch::config::SystemConfig" ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "openvm_circuit::arch::segment::ExecutionSegment")
                                []
                                [ F; VC ],
                              "system_config",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                          |)
                        |),
                        "openvm_circuit::arch::config::SystemConfig",
                        "segmentation_strategy"
                      |)
                    |) in
                  M.alloc (|
                    Ty.path "bool",
                    M.call_closure (|
                      Ty.path "bool",
                      M.get_trait_method (|
                        "openvm_circuit::arch::segment::SegmentationStrategy",
                        Ty.dyn
                          [ ("openvm_circuit::arch::segment::SegmentationStrategy::Trait", []) ],
                        [],
                        [],
                        "should_segment",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.dyn
                                    [
                                      ("openvm_circuit::arch::segment::SegmentationStrategy::Trait",
                                        [])
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::ops::deref::Deref",
                                Ty.apply
                                  (Ty.path "alloc::sync::Arc")
                                  []
                                  [
                                    Ty.dyn
                                      [
                                        ("openvm_circuit::arch::segment::SegmentationStrategy::Trait",
                                          [])
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ],
                                [],
                                [],
                                "deref",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (| M.read (| segmentation_strategy |) |)
                                |)
                              ]
                            |)
                          |)
                        |);
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [ Ty.apply (Ty.path "slice") [] [ Ty.path "alloc::string::String" ]
                                ],
                              M.get_trait_method (|
                                "core::ops::deref::Deref",
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Ty.path "alloc::string::String"; Ty.path "alloc::alloc::Global"
                                  ],
                                [],
                                [],
                                "deref",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "openvm_circuit::arch::segment::ExecutionSegment",
                                        "air_names"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          |)
                        |);
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [ Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ] ],
                              M.get_trait_method (|
                                "core::ops::deref::Deref",
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                [],
                                [],
                                "deref",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                          M.get_trait_method (|
                                            "core::iter::traits::iterator::Iterator",
                                            Ty.associated_unknown,
                                            [],
                                            [],
                                            "collect",
                                            [],
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ]
                                            ]
                                          |),
                                          [
                                            M.call_closure (|
                                              Ty.associated_unknown,
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_circuit::arch::extensions::VmChipComplex")
                                                  []
                                                  [
                                                    F;
                                                    Ty.associated_in_trait
                                                      "openvm_circuit::arch::config::VmConfig"
                                                      []
                                                      [ F ]
                                                      VC
                                                      "Executor";
                                                    Ty.associated_in_trait
                                                      "openvm_circuit::arch::config::VmConfig"
                                                      []
                                                      [ F ]
                                                      VC
                                                      "Periphery"
                                                  ],
                                                "dynamic_trace_heights",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.deref (| M.read (| self |) |),
                                                    "openvm_circuit::arch::segment::ExecutionSegment",
                                                    "chip_complex"
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          |)
                        |);
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [ Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ] ],
                              M.get_trait_method (|
                                "core::ops::deref::Deref",
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                [],
                                [],
                                "deref",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path
                                                "openvm_circuit::arch::extensions::VmChipComplex")
                                              []
                                              [
                                                F;
                                                Ty.associated_in_trait
                                                  "openvm_circuit::arch::config::VmConfig"
                                                  []
                                                  [ F ]
                                                  VC
                                                  "Executor";
                                                Ty.associated_in_trait
                                                  "openvm_circuit::arch::config::VmConfig"
                                                  []
                                                  [ F ]
                                                  VC
                                                  "Periphery"
                                              ],
                                            "current_trace_cells",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| self |) |),
                                                "openvm_circuit::arch::segment::ExecutionSegment",
                                                "chip_complex"
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          |)
                        |)
                      ]
                    |)
                  |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_should_segment :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C (Self F VC) "should_segment" (should_segment F VC).
      Admitted.
      Global Typeclasses Opaque should_segment.
      
      (*
          pub fn current_trace_cells(&self) -> Vec<usize> {
              self.chip_complex.current_trace_cells()
          }
      *)
      Definition current_trace_cells
          (F VC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self F VC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_circuit::arch::segment::ExecutionSegment")
                      []
                      [ F; VC ]
                  ],
                self
              |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
              M.get_associated_function (|
                Ty.apply
                  (Ty.path "openvm_circuit::arch::extensions::VmChipComplex")
                  []
                  [
                    F;
                    Ty.associated_in_trait
                      "openvm_circuit::arch::config::VmConfig"
                      []
                      [ F ]
                      VC
                      "Executor";
                    Ty.associated_in_trait
                      "openvm_circuit::arch::config::VmConfig"
                      []
                      [ F ]
                      VC
                      "Periphery"
                  ],
                "current_trace_cells",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| self |) |),
                    "openvm_circuit::arch::segment::ExecutionSegment",
                    "chip_complex"
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_current_trace_cells :
        forall (F VC : Ty.t),
        M.IsAssociatedFunction.C (Self F VC) "current_trace_cells" (current_trace_cells F VC).
      Admitted.
      Global Typeclasses Opaque current_trace_cells.
    End Impl_openvm_circuit_arch_segment_ExecutionSegment_F_VC.
  End segment.
End arch.
