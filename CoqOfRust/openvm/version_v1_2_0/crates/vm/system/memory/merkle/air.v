(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module system.
  Module memory.
    Module merkle.
      Module air.
        (* StructRecord
          {
            name := "MemoryMerkleAir";
            const_params := [ "CHUNK" ];
            ty_params := [];
            fields :=
              [
                ("memory_dimensions",
                  Ty.path
                    "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions");
                ("merkle_bus", Ty.path "openvm_stark_backend::interaction::PermutationCheckBus");
                ("compression_bus",
                  Ty.path "openvm_stark_backend::interaction::PermutationCheckBus")
              ];
          } *)
        
        Module Impl_core_clone_Clone_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          (* Clone *)
          Definition clone
              (CHUNK : Value.t)
              (ε : list Value.t)
              (τ : list Ty.t)
              (α : list Value.t)
              : M :=
            let Self : Ty.t := Self CHUNK in
            match ε, τ, α with
            | [], [], [ self ] =>
              ltac:(M.monadic
                (let self :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                          [ CHUNK ]
                          []
                      ],
                    self
                  |) in
                Value.mkStructRecord
                  "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir"
                  [ CHUNK ]
                  []
                  [
                    ("memory_dimensions",
                      M.call_closure (|
                        Ty.path
                          "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions",
                        M.get_trait_method (|
                          "core::clone::Clone",
                          Ty.path
                            "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions",
                          [],
                          [],
                          "clone",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| self |) |),
                                  "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                  "memory_dimensions"
                                |)
                              |)
                            |)
                          |)
                        ]
                      |));
                    ("merkle_bus",
                      M.call_closure (|
                        Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                        M.get_trait_method (|
                          "core::clone::Clone",
                          Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                          [],
                          [],
                          "clone",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| self |) |),
                                  "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                  "merkle_bus"
                                |)
                              |)
                            |)
                          |)
                        ]
                      |));
                    ("compression_bus",
                      M.call_closure (|
                        Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                        M.get_trait_method (|
                          "core::clone::Clone",
                          Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                          [],
                          [],
                          "clone",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| self |) |),
                                  "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                  "compression_bus"
                                |)
                              |)
                            |)
                          |)
                        ]
                      |))
                  ]))
            | _, _, _ => M.impossible "wrong number of arguments"
            end.
          
          Axiom Implements :
            forall (CHUNK : Value.t),
            M.IsTraitInstance
              "core::clone::Clone"
              (* Trait polymorphic consts *) []
              (* Trait polymorphic types *) []
              (Self CHUNK)
              (* Instance *) [ ("clone", InstanceField.Method (clone CHUNK)) ].
        End Impl_core_clone_Clone_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
        
        Module Impl_core_fmt_Debug_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          (* Debug *)
          Definition fmt
              (CHUNK : Value.t)
              (ε : list Value.t)
              (τ : list Ty.t)
              (α : list Value.t)
              : M :=
            let Self : Ty.t := Self CHUNK in
            match ε, τ, α with
            | [], [], [ self; f ] =>
              ltac:(M.monadic
                (let self :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                          [ CHUNK ]
                          []
                      ],
                    self
                  |) in
                let f :=
                  M.alloc (|
                    Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ],
                    f
                  |) in
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::result::Result")
                    []
                    [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                  M.get_associated_function (|
                    Ty.path "core::fmt::Formatter",
                    "debug_struct_field3_finish",
                    [],
                    []
                  |),
                  [
                    M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "MemoryMerkleAir" |) |) |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "memory_dimensions" |) |) |);
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                      M.pointer_coercion
                        M.PointerCoercion.Unsize
                        (Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.path
                              "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions"
                          ])
                        (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| self |) |),
                                "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                "memory_dimensions"
                              |)
                            |)
                          |)
                        |)
                      ]
                    |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "merkle_bus" |) |) |);
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                      M.pointer_coercion
                        M.PointerCoercion.Unsize
                        (Ty.apply
                          (Ty.path "&")
                          []
                          [ Ty.path "openvm_stark_backend::interaction::PermutationCheckBus" ])
                        (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| self |) |),
                                "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                "merkle_bus"
                              |)
                            |)
                          |)
                        |)
                      ]
                    |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "compression_bus" |) |) |);
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                      M.pointer_coercion
                        M.PointerCoercion.Unsize
                        (Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [ Ty.path "openvm_stark_backend::interaction::PermutationCheckBus" ]
                          ])
                        (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.alloc (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [ Ty.path "openvm_stark_backend::interaction::PermutationCheckBus"
                                  ],
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                    "compression_bus"
                                  |)
                                |)
                              |)
                            |)
                          |)
                        |)
                      ]
                    |)
                  ]
                |)))
            | _, _, _ => M.impossible "wrong number of arguments"
            end.
          
          Axiom Implements :
            forall (CHUNK : Value.t),
            M.IsTraitInstance
              "core::fmt::Debug"
              (* Trait polymorphic consts *) []
              (* Trait polymorphic types *) []
              (Self CHUNK)
              (* Instance *) [ ("fmt", InstanceField.Method (fmt CHUNK)) ].
        End Impl_core_fmt_Debug_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
        
        Module Impl_openvm_stark_backend_rap_PartitionedBaseAir_where_p3_field_field_Field_F_F_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) (F : Ty.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          Axiom Implements :
            forall (CHUNK : Value.t) (F : Ty.t),
            M.IsTraitInstance
              "openvm_stark_backend::rap::PartitionedBaseAir"
              (* Trait polymorphic consts *) []
              (* Trait polymorphic types *) [ F ]
              (Self CHUNK F)
              (* Instance *) [].
        End Impl_openvm_stark_backend_rap_PartitionedBaseAir_where_p3_field_field_Field_F_F_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
        
        Module Impl_p3_air_air_BaseAir_where_p3_field_field_Field_F_F_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) (F : Ty.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          (*
              fn width(&self) -> usize {
                  MemoryMerkleCols::<F, CHUNK>::width()
              }
          *)
          Definition width
              (CHUNK : Value.t)
              (F : Ty.t)
              (ε : list Value.t)
              (τ : list Ty.t)
              (α : list Value.t)
              : M :=
            let Self : Ty.t := Self CHUNK F in
            match ε, τ, α with
            | [], [], [ self ] =>
              ltac:(M.monadic
                (let self :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                          [ CHUNK ]
                          []
                      ],
                    self
                  |) in
                M.call_closure (|
                  Ty.path "usize",
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                      [ CHUNK ]
                      [ F ],
                    "width",
                    [],
                    []
                  |),
                  []
                |)))
            | _, _, _ => M.impossible "wrong number of arguments"
            end.
          
          Axiom Implements :
            forall (CHUNK : Value.t) (F : Ty.t),
            M.IsTraitInstance
              "p3_air::air::BaseAir"
              (* Trait polymorphic consts *) []
              (* Trait polymorphic types *) [ F ]
              (Self CHUNK F)
              (* Instance *) [ ("width", InstanceField.Method (width CHUNK F)) ].
        End Impl_p3_air_air_BaseAir_where_p3_field_field_Field_F_F_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
        
        Module Impl_openvm_stark_backend_rap_BaseAirWithPublicValues_where_p3_field_field_Field_F_F_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) (F : Ty.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          (*
              fn num_public_values(&self) -> usize {
                  MemoryMerklePvs::<F, CHUNK>::width()
              }
          *)
          Definition num_public_values
              (CHUNK : Value.t)
              (F : Ty.t)
              (ε : list Value.t)
              (τ : list Ty.t)
              (α : list Value.t)
              : M :=
            let Self : Ty.t := Self CHUNK F in
            match ε, τ, α with
            | [], [], [ self ] =>
              ltac:(M.monadic
                (let self :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                          [ CHUNK ]
                          []
                      ],
                    self
                  |) in
                M.call_closure (|
                  Ty.path "usize",
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_circuit::system::memory::merkle::columns::MemoryMerklePvs")
                      [ CHUNK ]
                      [ F ],
                    "width",
                    [],
                    []
                  |),
                  []
                |)))
            | _, _, _ => M.impossible "wrong number of arguments"
            end.
          
          Axiom Implements :
            forall (CHUNK : Value.t) (F : Ty.t),
            M.IsTraitInstance
              "openvm_stark_backend::rap::BaseAirWithPublicValues"
              (* Trait polymorphic consts *) []
              (* Trait polymorphic types *) [ F ]
              (Self CHUNK F)
              (* Instance *)
              [ ("num_public_values", InstanceField.Method (num_public_values CHUNK F)) ].
        End Impl_openvm_stark_backend_rap_BaseAirWithPublicValues_where_p3_field_field_Field_F_F_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
        
        Module Impl_p3_air_air_Air_where_openvm_stark_backend_interaction_InteractionBuilder_AB_where_p3_air_air_AirBuilderWithPublicValues_AB_AB_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) (AB : Ty.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          (*
              fn eval(&self, builder: &mut AB) {
                  let main = builder.main();
                  let (local, next) = (main.row_slice(0), main.row_slice(1));
                  let local: &MemoryMerkleCols<_, CHUNK> = ( *local).borrow();
                  let next: &MemoryMerkleCols<_, CHUNK> = ( *next).borrow();
          
                  // `expand_direction` should be -1, 0, 1
                  builder.assert_eq(
                      local.expand_direction,
                      local.expand_direction * local.expand_direction * local.expand_direction,
                  );
          
                  builder.assert_bool(local.left_direction_different);
                  builder.assert_bool(local.right_direction_different);
          
                  // if `expand_direction` != -1, then `*_direction_different` should be 0
                  builder
                      .when_ne(local.expand_direction, AB::F::NEG_ONE)
                      .assert_zero(local.left_direction_different);
                  builder
                      .when_ne(local.expand_direction, AB::F::NEG_ONE)
                      .assert_zero(local.right_direction_different);
          
                  // rows should be sorted in descending order
                  // independently by `parent_height`, `height_section`, `is_root`
                  builder
                      .when_transition()
                      .assert_bool(local.parent_height - next.parent_height);
                  builder
                      .when_transition()
                      .assert_bool(local.height_section - next.height_section);
                  builder
                      .when_transition()
                      .assert_bool(local.is_root - next.is_root);
          
                  // row with greatest height should have `height_section` = 1
                  builder.when_first_row().assert_one(local.height_section);
                  // two rows with greatest height should have `is_root` = 1
                  builder.when_first_row().assert_one(local.is_root);
                  builder.when_first_row().assert_one(next.is_root);
                  // row with least height should have `height_section` = 0, `is_root` = 0
                  builder.when_last_row().assert_zero(local.height_section);
                  builder.when_last_row().assert_zero(local.is_root);
                  // `height_section` changes from 0 to 1 only when `parent_height` changes from
                  // `address_height` to `address_height` + 1
                  builder
                      .when_transition()
                      .when_ne(
                          local.parent_height,
                          AB::F::from_canonical_usize(self.memory_dimensions.address_height + 1),
                      )
                      .assert_eq(local.height_section, next.height_section);
                  builder
                      .when_transition()
                      .when_ne(
                          next.parent_height,
                          AB::F::from_canonical_usize(self.memory_dimensions.address_height),
                      )
                      .assert_eq(local.height_section, next.height_section);
                  // two adjacent rows with `is_root` = 1 should have
                  // the first `expand_direction` = 1, the second `expand_direction` = -1
                  builder
                      .when(local.is_root)
                      .when(next.is_root)
                      .assert_eq(local.expand_direction - next.expand_direction, AB::F::TWO);
          
                  // roots should have correct height
                  builder.when(local.is_root).assert_eq(
                      local.parent_height,
                      AB::Expr::from_canonical_usize(self.memory_dimensions.overall_height()),
                  );
          
                  // constrain public values
                  let &MemoryMerklePvs::<_, CHUNK> {
                      initial_root,
                      final_root,
                  } = builder.public_values().borrow();
                  for i in 0..CHUNK {
                      builder
                          .when_first_row()
                          .assert_eq(local.parent_hash[i], initial_root[i]);
                      builder
                          .when_first_row()
                          .assert_eq(next.parent_hash[i], final_root[i]);
                  }
          
                  self.eval_interactions(builder, local);
              }
          *)
          Definition eval
              (CHUNK : Value.t)
              (AB : Ty.t)
              (ε : list Value.t)
              (τ : list Ty.t)
              (α : list Value.t)
              : M :=
            let Self : Ty.t := Self CHUNK AB in
            match ε, τ, α with
            | [], [], [ self; builder ] =>
              ltac:(M.monadic
                (let self :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                          [ CHUNK ]
                          []
                      ],
                    self
                  |) in
                let builder := M.alloc (| Ty.apply (Ty.path "&mut") [] [ AB ], builder |) in
                M.read (|
                  let~ main : Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M" :=
                    M.call_closure (|
                      Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M",
                      M.get_trait_method (|
                        "p3_air::air::AirBuilder",
                        AB,
                        [],
                        [],
                        "main",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| builder |) |) |) ]
                    |) in
                  M.alloc (|
                    Ty.tuple [],
                    M.match_operator (|
                      Ty.tuple [],
                      M.alloc (|
                        Ty.tuple
                          [
                            Ty.associated_in_trait
                              "p3_matrix::Matrix"
                              []
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                              (Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M")
                              "{{synthetic}}'2";
                            Ty.associated_in_trait
                              "p3_matrix::Matrix"
                              []
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                              (Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M")
                              "{{synthetic}}'2"
                          ],
                        Value.Tuple
                          [
                            M.call_closure (|
                              Ty.associated_in_trait
                                "p3_matrix::Matrix"
                                []
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                                (Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M")
                                "{{synthetic}}'2",
                              M.get_trait_method (|
                                "p3_matrix::Matrix",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                                "row_slice",
                                [],
                                []
                              |),
                              [
                                M.borrow (| Pointer.Kind.Ref, main |);
                                Value.Integer IntegerKind.Usize 0
                              ]
                            |);
                            M.call_closure (|
                              Ty.associated_in_trait
                                "p3_matrix::Matrix"
                                []
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                                (Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M")
                                "{{synthetic}}'2",
                              M.get_trait_method (|
                                "p3_matrix::Matrix",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                                "row_slice",
                                [],
                                []
                              |),
                              [
                                M.borrow (| Pointer.Kind.Ref, main |);
                                Value.Integer IntegerKind.Usize 1
                              ]
                            |)
                          ]
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                            let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                            let local :=
                              M.copy (|
                                Ty.associated_in_trait
                                  "p3_matrix::Matrix"
                                  []
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ]
                                  (Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M")
                                  "{{synthetic}}'2",
                                γ0_0
                              |) in
                            let next :=
                              M.copy (|
                                Ty.associated_in_trait
                                  "p3_matrix::Matrix"
                                  []
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ]
                                  (Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "M")
                                  "{{synthetic}}'2",
                                γ0_1
                              |) in
                            M.read (|
                              let~ local :
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                                        [ CHUNK ]
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ]
                                    ] :=
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                                            [ CHUNK ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::borrow::Borrow",
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                                            [ CHUNK ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                        ],
                                        "borrow",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Var"
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.associated_in_trait
                                                  "p3_matrix::Matrix"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Var"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "M")
                                                  "{{synthetic}}'2",
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [ M.borrow (| Pointer.Kind.Ref, local |) ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)
                                |) in
                              let~ next :
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                                        [ CHUNK ]
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ]
                                    ] :=
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                                            [ CHUNK ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::borrow::Borrow",
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                                            [ CHUNK ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                        ],
                                        "borrow",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Var"
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.associated_in_trait
                                                  "p3_matrix::Matrix"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Var"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "M")
                                                  "{{synthetic}}'2",
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [ M.borrow (| Pointer.Kind.Ref, next |) ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    AB,
                                    [],
                                    [],
                                    "assert_eq",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var";
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.deref (| M.read (| builder |) |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "expand_direction"
                                      |)
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Mul",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ],
                                            "mul",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "expand_direction"
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "expand_direction"
                                              |)
                                            |)
                                          ]
                                        |);
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "expand_direction"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    AB,
                                    [],
                                    [],
                                    "assert_bool",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.deref (| M.read (| builder |) |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "left_direction_different"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    AB,
                                    [],
                                    [],
                                    "assert_bool",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.deref (| M.read (| builder |) |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "right_direction_different"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_zero",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_ne",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var";
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "expand_direction"
                                              |)
                                            |);
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::NEG_ONE",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "F"
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "left_direction_different"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_zero",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_ne",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var";
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "expand_direction"
                                              |)
                                            |);
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::NEG_ONE",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "F"
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "right_direction_different"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_bool",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_transition",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Sub",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                        "sub",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_height"
                                          |)
                                        |);
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| next |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_height"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_bool",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_transition",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Sub",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                        "sub",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "height_section"
                                          |)
                                        |);
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| next |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "height_section"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_bool",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_transition",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Sub",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                        "sub",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "is_root"
                                          |)
                                        |);
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| next |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "is_root"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_one",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_first_row",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "height_section"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_one",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_first_row",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "is_root"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_one",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_first_row",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| next |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "is_root"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_zero",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_last_row",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "height_section"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_zero",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when_last_row",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "is_root"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply
                                      (Ty.path "p3_air::air::FilteredAirBuilder")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ]
                                      ],
                                    [],
                                    [],
                                    "assert_eq",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var";
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_air::air::FilteredAirBuilder")
                                              []
                                              [ AB ]
                                          ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_air::air::FilteredAirBuilder")
                                                []
                                                [ AB ]
                                            ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            Ty.apply
                                              (Ty.path "p3_air::air::FilteredAirBuilder")
                                              []
                                              [ AB ],
                                            [],
                                            [],
                                            "when_ne",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var";
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.alloc (|
                                                Ty.apply
                                                  (Ty.path "p3_air::air::FilteredAirBuilder")
                                                  []
                                                  [ AB ],
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "p3_air::air::FilteredAirBuilder")
                                                    []
                                                    [ AB ],
                                                  M.get_trait_method (|
                                                    "p3_air::air::AirBuilder",
                                                    AB,
                                                    [],
                                                    [],
                                                    "when_transition",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.MutRef,
                                                      M.deref (| M.read (| builder |) |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "parent_height"
                                              |)
                                            |);
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F",
                                              M.get_trait_method (|
                                                "p3_field::field::FieldAlgebra",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "F",
                                                [],
                                                [],
                                                "from_canonical_usize",
                                                [],
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  Ty.path "usize",
                                                  BinOp.Wrap.add,
                                                  [
                                                    M.read (|
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| self |) |),
                                                          "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                                          "memory_dimensions"
                                                        |),
                                                        "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions",
                                                        "address_height"
                                                      |)
                                                    |);
                                                    Value.Integer IntegerKind.Usize 1
                                                  ]
                                                |)
                                              ]
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "height_section"
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| next |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "height_section"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply
                                      (Ty.path "p3_air::air::FilteredAirBuilder")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ]
                                      ],
                                    [],
                                    [],
                                    "assert_eq",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var";
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_air::air::FilteredAirBuilder")
                                              []
                                              [ AB ]
                                          ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_air::air::FilteredAirBuilder")
                                                []
                                                [ AB ]
                                            ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            Ty.apply
                                              (Ty.path "p3_air::air::FilteredAirBuilder")
                                              []
                                              [ AB ],
                                            [],
                                            [],
                                            "when_ne",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var";
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.alloc (|
                                                Ty.apply
                                                  (Ty.path "p3_air::air::FilteredAirBuilder")
                                                  []
                                                  [ AB ],
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "p3_air::air::FilteredAirBuilder")
                                                    []
                                                    [ AB ],
                                                  M.get_trait_method (|
                                                    "p3_air::air::AirBuilder",
                                                    AB,
                                                    [],
                                                    [],
                                                    "when_transition",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.MutRef,
                                                      M.deref (| M.read (| builder |) |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| next |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "parent_height"
                                              |)
                                            |);
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F",
                                              M.get_trait_method (|
                                                "p3_field::field::FieldAlgebra",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "F",
                                                [],
                                                [],
                                                "from_canonical_usize",
                                                [],
                                                []
                                              |),
                                              [
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.SubPointer.get_struct_record_field (|
                                                      M.deref (| M.read (| self |) |),
                                                      "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                                      "memory_dimensions"
                                                    |),
                                                    "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions",
                                                    "address_height"
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "height_section"
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| next |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "height_section"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply
                                      (Ty.path "p3_air::air::FilteredAirBuilder")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ]
                                      ],
                                    [],
                                    [],
                                    "assert_eq",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr";
                                      Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "F"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_air::air::FilteredAirBuilder")
                                              []
                                              [ AB ]
                                          ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_air::air::FilteredAirBuilder")
                                                []
                                                [ AB ]
                                            ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            Ty.apply
                                              (Ty.path "p3_air::air::FilteredAirBuilder")
                                              []
                                              [ AB ],
                                            [],
                                            [],
                                            "when",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.alloc (|
                                                Ty.apply
                                                  (Ty.path "p3_air::air::FilteredAirBuilder")
                                                  []
                                                  [ AB ],
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "p3_air::air::FilteredAirBuilder")
                                                    []
                                                    [ AB ],
                                                  M.get_trait_method (|
                                                    "p3_air::air::AirBuilder",
                                                    AB,
                                                    [],
                                                    [],
                                                    "when",
                                                    [],
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Var"
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.MutRef,
                                                      M.deref (| M.read (| builder |) |)
                                                    |);
                                                    M.read (|
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.deref (| M.read (| local |) |),
                                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                        "is_root"
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| next |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "is_root"
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Sub",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                        "sub",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "expand_direction"
                                          |)
                                        |);
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| next |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "expand_direction"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.read (|
                                      get_constant (|
                                        "p3_field::field::FieldAlgebra::TWO",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "F"
                                      |)
                                    |)
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "p3_air::air::AirBuilder",
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    [],
                                    [],
                                    "assert_eq",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var";
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "p3_air::air::FilteredAirBuilder")
                                          []
                                          [ AB ],
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "p3_air::air::FilteredAirBuilder")
                                            []
                                            [ AB ],
                                          M.get_trait_method (|
                                            "p3_air::air::AirBuilder",
                                            AB,
                                            [],
                                            [],
                                            "when",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.MutRef,
                                              M.deref (| M.read (| builder |) |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "is_root"
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "parent_height"
                                      |)
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "p3_field::field::FieldAlgebra",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [],
                                        "from_canonical_usize",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.path "usize",
                                          M.get_associated_function (|
                                            Ty.path
                                              "openvm_circuit::system::memory::controller::dimensions::MemoryDimensions",
                                            "overall_height",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| self |) |),
                                                "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                                                "memory_dimensions"
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |)
                                  ]
                                |) in
                              M.alloc (|
                                Ty.tuple [],
                                M.match_operator (|
                                  Ty.tuple [],
                                  M.alloc (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerklePvs")
                                          [ CHUNK ]
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilderWithPublicValues"
                                              []
                                              []
                                              AB
                                              "PublicVar"
                                          ]
                                      ],
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_circuit::system::memory::merkle::columns::MemoryMerklePvs")
                                            [ CHUNK ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilderWithPublicValues"
                                                []
                                                []
                                                AB
                                                "PublicVar"
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::borrow::Borrow",
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilderWithPublicValues"
                                              []
                                              []
                                              AB
                                              "PublicVar"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_circuit::system::memory::merkle::columns::MemoryMerklePvs")
                                            [ CHUNK ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilderWithPublicValues"
                                                []
                                                []
                                                AB
                                                "PublicVar"
                                            ]
                                        ],
                                        "borrow",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilderWithPublicValues"
                                                        []
                                                        []
                                                        AB
                                                        "PublicVar"
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "p3_air::air::AirBuilderWithPublicValues",
                                                AB,
                                                [],
                                                [],
                                                "public_values",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| builder |) |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ := M.deref (| M.read (| γ |) |) in
                                        let γ1_0 :=
                                          M.SubPointer.get_struct_record_field (|
                                            γ,
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerklePvs",
                                            "initial_root"
                                          |) in
                                        let γ1_1 :=
                                          M.SubPointer.get_struct_record_field (|
                                            γ,
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerklePvs",
                                            "final_root"
                                          |) in
                                        let initial_root :=
                                          M.copy (|
                                            Ty.apply
                                              (Ty.path "array")
                                              [ CHUNK ]
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilderWithPublicValues"
                                                  []
                                                  []
                                                  AB
                                                  "PublicVar"
                                              ],
                                            γ1_0
                                          |) in
                                        let final_root :=
                                          M.copy (|
                                            Ty.apply
                                              (Ty.path "array")
                                              [ CHUNK ]
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilderWithPublicValues"
                                                  []
                                                  []
                                                  AB
                                                  "PublicVar"
                                              ],
                                            γ1_1
                                          |) in
                                        M.read (|
                                          let~ _ : Ty.tuple [] :=
                                            M.read (|
                                              M.use
                                                (M.alloc (|
                                                  Ty.tuple [],
                                                  M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (|
                                                      Ty.apply
                                                        (Ty.path "core::ops::range::Range")
                                                        []
                                                        [ Ty.path "usize" ],
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::ops::range::Range")
                                                          []
                                                          [ Ty.path "usize" ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::collect::IntoIterator",
                                                          Ty.apply
                                                            (Ty.path "core::ops::range::Range")
                                                            []
                                                            [ Ty.path "usize" ],
                                                          [],
                                                          [],
                                                          "into_iter",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          Value.mkStructRecord
                                                            "core::ops::range::Range"
                                                            []
                                                            [ Ty.path "usize" ]
                                                            [
                                                              ("start",
                                                                Value.Integer IntegerKind.Usize 0);
                                                              ("end_", CHUNK)
                                                            ]
                                                        ]
                                                      |)
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let iter :=
                                                            M.copy (|
                                                              Ty.apply
                                                                (Ty.path "core::ops::range::Range")
                                                                []
                                                                [ Ty.path "usize" ],
                                                              γ
                                                            |) in
                                                          M.read (|
                                                            M.loop (|
                                                              Ty.tuple [],
                                                              ltac:(M.monadic
                                                                (let~ _ : Ty.tuple [] :=
                                                                  M.match_operator (|
                                                                    Ty.tuple [],
                                                                    M.alloc (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [ Ty.path "usize" ],
                                                                      M.call_closure (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [ Ty.path "usize" ],
                                                                        M.get_trait_method (|
                                                                          "core::iter::traits::iterator::Iterator",
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::ops::range::Range")
                                                                            []
                                                                            [ Ty.path "usize" ],
                                                                          [],
                                                                          [],
                                                                          "next",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.borrow (|
                                                                            Pointer.Kind.MutRef,
                                                                            M.deref (|
                                                                              M.borrow (|
                                                                                Pointer.Kind.MutRef,
                                                                                iter
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let _ :=
                                                                            M.is_struct_tuple (|
                                                                              γ,
                                                                              "core::option::Option::None"
                                                                            |) in
                                                                          M.never_to_any (|
                                                                            M.read (|
                                                                              M.break (||)
                                                                            |)
                                                                          |)));
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let γ0_0 :=
                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                              γ,
                                                                              "core::option::Option::Some",
                                                                              0
                                                                            |) in
                                                                          let i :=
                                                                            M.copy (|
                                                                              Ty.path "usize",
                                                                              γ0_0
                                                                            |) in
                                                                          M.read (|
                                                                            let~ _ : Ty.tuple [] :=
                                                                              M.call_closure (|
                                                                                Ty.tuple [],
                                                                                M.get_trait_method (|
                                                                                  "p3_air::air::AirBuilder",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_air::air::FilteredAirBuilder")
                                                                                    []
                                                                                    [ AB ],
                                                                                  [],
                                                                                  [],
                                                                                  "assert_eq",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Var";
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilderWithPublicValues"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "PublicVar"
                                                                                  ]
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.MutRef,
                                                                                    M.alloc (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_air::air::FilteredAirBuilder")
                                                                                        []
                                                                                        [ AB ],
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_air::air::FilteredAirBuilder")
                                                                                          []
                                                                                          [ AB ],
                                                                                        M.get_trait_method (|
                                                                                          "p3_air::air::AirBuilder",
                                                                                          AB,
                                                                                          [],
                                                                                          [],
                                                                                          "when_first_row",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.MutRef,
                                                                                            M.deref (|
                                                                                              M.read (|
                                                                                                builder
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |);
                                                                                  M.read (|
                                                                                    M.SubPointer.get_array_field (|
                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            local
                                                                                          |)
                                                                                        |),
                                                                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                                                        "parent_hash"
                                                                                      |),
                                                                                      M.read (| i |)
                                                                                    |)
                                                                                  |);
                                                                                  M.read (|
                                                                                    M.SubPointer.get_array_field (|
                                                                                      initial_root,
                                                                                      M.read (| i |)
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |) in
                                                                            let~ _ : Ty.tuple [] :=
                                                                              M.call_closure (|
                                                                                Ty.tuple [],
                                                                                M.get_trait_method (|
                                                                                  "p3_air::air::AirBuilder",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_air::air::FilteredAirBuilder")
                                                                                    []
                                                                                    [ AB ],
                                                                                  [],
                                                                                  [],
                                                                                  "assert_eq",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Var";
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilderWithPublicValues"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "PublicVar"
                                                                                  ]
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.MutRef,
                                                                                    M.alloc (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_air::air::FilteredAirBuilder")
                                                                                        []
                                                                                        [ AB ],
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_air::air::FilteredAirBuilder")
                                                                                          []
                                                                                          [ AB ],
                                                                                        M.get_trait_method (|
                                                                                          "p3_air::air::AirBuilder",
                                                                                          AB,
                                                                                          [],
                                                                                          [],
                                                                                          "when_first_row",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.MutRef,
                                                                                            M.deref (|
                                                                                              M.read (|
                                                                                                builder
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |);
                                                                                  M.read (|
                                                                                    M.SubPointer.get_array_field (|
                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            next
                                                                                          |)
                                                                                        |),
                                                                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                                                        "parent_hash"
                                                                                      |),
                                                                                      M.read (| i |)
                                                                                    |)
                                                                                  |);
                                                                                  M.read (|
                                                                                    M.SubPointer.get_array_field (|
                                                                                      final_root,
                                                                                      M.read (| i |)
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Ty.tuple [],
                                                                              Value.Tuple []
                                                                            |)
                                                                          |)))
                                                                    ]
                                                                  |) in
                                                                M.alloc (|
                                                                  Ty.tuple [],
                                                                  Value.Tuple []
                                                                |)))
                                                            |)
                                                          |)))
                                                    ]
                                                  |)
                                                |))
                                            |) in
                                          let~ _ : Ty.tuple [] :=
                                            M.call_closure (|
                                              Ty.tuple [],
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                                                  [ CHUNK ]
                                                  [],
                                                "eval_interactions",
                                                [],
                                                [ AB ]
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| self |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.MutRef,
                                                  M.deref (| M.read (| builder |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| local |) |)
                                                |)
                                              ]
                                            |) in
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                        |)))
                                  ]
                                |)
                              |)
                            |)))
                      ]
                    |)
                  |)
                |)))
            | _, _, _ => M.impossible "wrong number of arguments"
            end.
          
          Axiom Implements :
            forall (CHUNK : Value.t) (AB : Ty.t),
            M.IsTraitInstance
              "p3_air::air::Air"
              (* Trait polymorphic consts *) []
              (* Trait polymorphic types *) [ AB ]
              (Self CHUNK AB)
              (* Instance *) [ ("eval", InstanceField.Method (eval CHUNK AB)) ].
        End Impl_p3_air_air_Air_where_openvm_stark_backend_interaction_InteractionBuilder_AB_where_p3_air_air_AirBuilderWithPublicValues_AB_AB_for_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
        
        Module Impl_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
          Definition Self (CHUNK : Value.t) : Ty.t :=
            Ty.apply
              (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
              [ CHUNK ]
              [].
          
          (*
              pub fn eval_interactions<AB: InteractionBuilder>(
                  &self,
                  builder: &mut AB,
                  local: &MemoryMerkleCols<AB::Var, CHUNK>,
              ) {
                  // interaction does not occur for first two rows;
                  // for those, parent hash value comes from public values
                  self.merkle_bus.interact(
                      builder,
                      [
                          local.expand_direction.into(),
                          local.parent_height.into(),
                          local.parent_as_label.into(),
                          local.parent_address_label.into(),
                      ]
                      .into_iter()
                      .chain(local.parent_hash.into_iter().map(Into::into)),
                      // count can probably be made degree 1 if necessary
                      (AB::Expr::ONE - local.is_root) * local.expand_direction,
                  );
          
                  self.merkle_bus.interact(
                      builder,
                      [
                          local.expand_direction + (local.left_direction_different * AB::F::TWO),
                          local.parent_height - AB::F::ONE,
                          local.parent_as_label * (AB::Expr::ONE + local.height_section),
                          local.parent_address_label * (AB::Expr::TWO - local.height_section),
                      ]
                      .into_iter()
                      .chain(local.left_child_hash.into_iter().map(Into::into)),
                      -local.expand_direction.into(),
                  );
          
                  self.merkle_bus.interact(
                      builder,
                      [
                          local.expand_direction + (local.right_direction_different * AB::F::TWO),
                          local.parent_height - AB::F::ONE,
                          (local.parent_as_label * (AB::Expr::ONE + local.height_section))
                              + local.height_section,
                          (local.parent_address_label * (AB::Expr::TWO - local.height_section))
                              + (AB::Expr::ONE - local.height_section),
                      ]
                      .into_iter()
                      .chain(local.right_child_hash.into_iter().map(Into::into)),
                      -local.expand_direction.into(),
                  );
          
                  let compress_fields = iter::empty()
                      .chain(local.left_child_hash)
                      .chain(local.right_child_hash)
                      .chain(local.parent_hash);
                  self.compression_bus.interact(
                      builder,
                      compress_fields,
                      local.expand_direction * local.expand_direction,
                  );
              }
          *)
          Definition eval_interactions
              (CHUNK : Value.t)
              (ε : list Value.t)
              (τ : list Ty.t)
              (α : list Value.t)
              : M :=
            let Self : Ty.t := Self CHUNK in
            match ε, τ, α with
            | [], [ AB ], [ self; builder; local ] =>
              ltac:(M.monadic
                (let self :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir")
                          [ CHUNK ]
                          []
                      ],
                    self
                  |) in
                let builder := M.alloc (| Ty.apply (Ty.path "&mut") [] [ AB ], builder |) in
                let local :=
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path
                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols")
                          [ CHUNK ]
                          [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                      ],
                    local
                  |) in
                M.read (|
                  let~ _ : Ty.tuple [] :=
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                        "interact",
                        [],
                        [
                          AB;
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ];
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                            "merkle_bus"
                          |)
                        |);
                        M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| builder |) |) |);
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::array::iter::IntoIter")
                              [ Value.Integer IntegerKind.Usize 4 ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" ],
                            [],
                            [],
                            "chain",
                            [],
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::collect::IntoIterator",
                                Ty.apply
                                  (Ty.path "array")
                                  [ Value.Integer IntegerKind.Usize 4 ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  ],
                                [],
                                [],
                                "into_iter",
                                [],
                                []
                              |),
                              [
                                Value.Array
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::convert::Into",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "into",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "expand_direction"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::convert::Into",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "into",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_height"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::convert::Into",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "into",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_as_label"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::convert::Into",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "into",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_address_label"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                              ]
                            |);
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::array::iter::IntoIter")
                                  [ CHUNK ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ],
                                [],
                                [],
                                "map",
                                [],
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::collect::IntoIterator",
                                    Ty.apply
                                      (Ty.path "array")
                                      [ CHUNK ]
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var"
                                      ],
                                    [],
                                    [],
                                    "into_iter",
                                    [],
                                    []
                                  |),
                                  [
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "parent_hash"
                                      |)
                                    |)
                                  ]
                                |);
                                M.get_trait_method (|
                                  "core::convert::Into",
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                                  [],
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  ],
                                  "into",
                                  [],
                                  []
                                |)
                              ]
                            |)
                          ]
                        |);
                        M.call_closure (|
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                          M.get_trait_method (|
                            "core::ops::arith::Mul",
                            Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                            [],
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                            "mul",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::ops::arith::Sub",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                                "sub",
                                [],
                                []
                              |),
                              [
                                M.read (|
                                  get_constant (|
                                    "p3_field::field::FieldAlgebra::ONE",
                                    Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  |)
                                |);
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| local |) |),
                                    "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                    "is_root"
                                  |)
                                |)
                              ]
                            |);
                            M.read (|
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| local |) |),
                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                "expand_direction"
                              |)
                            |)
                          ]
                        |)
                      ]
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                        "interact",
                        [],
                        [
                          AB;
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ];
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                            "merkle_bus"
                          |)
                        |);
                        M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| builder |) |) |);
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::array::iter::IntoIter")
                              [ Value.Integer IntegerKind.Usize 4 ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" ],
                            [],
                            [],
                            "chain",
                            [],
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::collect::IntoIterator",
                                Ty.apply
                                  (Ty.path "array")
                                  [ Value.Integer IntegerKind.Usize 4 ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  ],
                                [],
                                [],
                                "into_iter",
                                [],
                                []
                              |),
                              [
                                Value.Array
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Add",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "add",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "expand_direction"
                                          |)
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Mul",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F"
                                            ],
                                            "mul",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "left_direction_different"
                                              |)
                                            |);
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::TWO",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "F"
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Sub",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "F"
                                        ],
                                        "sub",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_height"
                                          |)
                                        |);
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::FieldAlgebra::ONE",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "F"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_as_label"
                                          |)
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Add",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ],
                                            "add",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::ONE",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "height_section"
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_address_label"
                                          |)
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Sub",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ],
                                            "sub",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::TWO",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "height_section"
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |)
                                  ]
                              ]
                            |);
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::array::iter::IntoIter")
                                  [ CHUNK ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ],
                                [],
                                [],
                                "map",
                                [],
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::collect::IntoIterator",
                                    Ty.apply
                                      (Ty.path "array")
                                      [ CHUNK ]
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var"
                                      ],
                                    [],
                                    [],
                                    "into_iter",
                                    [],
                                    []
                                  |),
                                  [
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "left_child_hash"
                                      |)
                                    |)
                                  ]
                                |);
                                M.get_trait_method (|
                                  "core::convert::Into",
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                                  [],
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  ],
                                  "into",
                                  [],
                                  []
                                |)
                              ]
                            |)
                          ]
                        |);
                        M.call_closure (|
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                          M.get_trait_method (|
                            "core::ops::arith::Neg",
                            Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                            [],
                            [],
                            "neg",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::convert::Into",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                                "into",
                                [],
                                []
                              |),
                              [
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| local |) |),
                                    "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                    "expand_direction"
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                        "interact",
                        [],
                        [
                          AB;
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ];
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                            "merkle_bus"
                          |)
                        |);
                        M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| builder |) |) |);
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::array::iter::IntoIter")
                              [ Value.Integer IntegerKind.Usize 4 ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" ],
                            [],
                            [],
                            "chain",
                            [],
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ Value.Integer IntegerKind.Usize 4 ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::collect::IntoIterator",
                                Ty.apply
                                  (Ty.path "array")
                                  [ Value.Integer IntegerKind.Usize 4 ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  ],
                                [],
                                [],
                                "into_iter",
                                [],
                                []
                              |),
                              [
                                Value.Array
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Add",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "add",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "expand_direction"
                                          |)
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Mul",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "F"
                                            ],
                                            "mul",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "right_direction_different"
                                              |)
                                            |);
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::TWO",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "F"
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Sub",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "F"
                                        ],
                                        "sub",
                                        [],
                                        []
                                      |),
                                      [
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "parent_height"
                                          |)
                                        |);
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::FieldAlgebra::ONE",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "F"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Add",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                        "add",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Mul",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ],
                                            "mul",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "parent_as_label"
                                              |)
                                            |);
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::ops::arith::Add",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                [],
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                                "add",
                                                [],
                                                []
                                              |),
                                              [
                                                M.read (|
                                                  get_constant (|
                                                    "p3_field::field::FieldAlgebra::ONE",
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr"
                                                  |)
                                                |);
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.deref (| M.read (| local |) |),
                                                    "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                    "height_section"
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                        |);
                                        M.read (|
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| local |) |),
                                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                            "height_section"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Add",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "add",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Mul",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ],
                                            "mul",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "parent_address_label"
                                              |)
                                            |);
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::ops::arith::Sub",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                [],
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                                "sub",
                                                [],
                                                []
                                              |),
                                              [
                                                M.read (|
                                                  get_constant (|
                                                    "p3_field::field::FieldAlgebra::TWO",
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr"
                                                  |)
                                                |);
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.deref (| M.read (| local |) |),
                                                    "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                    "height_section"
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Sub",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ],
                                            "sub",
                                            [],
                                            []
                                          |),
                                          [
                                            M.read (|
                                              get_constant (|
                                                "p3_field::field::FieldAlgebra::ONE",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              |)
                                            |);
                                            M.read (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| local |) |),
                                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                                "height_section"
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |)
                                  ]
                              ]
                            |);
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::array::iter::IntoIter")
                                  [ CHUNK ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ],
                                [],
                                [],
                                "map",
                                [],
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::collect::IntoIterator",
                                    Ty.apply
                                      (Ty.path "array")
                                      [ CHUNK ]
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var"
                                      ],
                                    [],
                                    [],
                                    "into_iter",
                                    [],
                                    []
                                  |),
                                  [
                                    M.read (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| local |) |),
                                        "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                        "right_child_hash"
                                      |)
                                    |)
                                  ]
                                |);
                                M.get_trait_method (|
                                  "core::convert::Into",
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                                  [],
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  ],
                                  "into",
                                  [],
                                  []
                                |)
                              ]
                            |)
                          ]
                        |);
                        M.call_closure (|
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                          M.get_trait_method (|
                            "core::ops::arith::Neg",
                            Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                            [],
                            [],
                            "neg",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::convert::Into",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                                "into",
                                [],
                                []
                              |),
                              [
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| local |) |),
                                    "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                    "expand_direction"
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |) in
                  let~ compress_fields :
                      Ty.apply
                        (Ty.path "core::iter::adapters::chain::Chain")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::sources::empty::Empty")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ CHUNK ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                            ];
                          Ty.apply
                            (Ty.path "core::array::iter::IntoIter")
                            [ CHUNK ]
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                        ] :=
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::chain::Chain")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::sources::empty::Empty")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ CHUNK ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                            ];
                          Ty.apply
                            (Ty.path "core::array::iter::IntoIter")
                            [ CHUNK ]
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::iter::adapters::chain::Chain")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::iter::adapters::chain::Chain")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::sources::empty::Empty")
                                  []
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ];
                                Ty.apply
                                  (Ty.path "core::array::iter::IntoIter")
                                  [ CHUNK ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ]
                              ];
                            Ty.apply
                              (Ty.path "core::array::iter::IntoIter")
                              [ CHUNK ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                          ],
                        [],
                        [],
                        "chain",
                        [],
                        [
                          Ty.apply
                            (Ty.path "array")
                            [ CHUNK ]
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::sources::empty::Empty")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ CHUNK ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::iter::adapters::chain::Chain")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::sources::empty::Empty")
                                  []
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ];
                                Ty.apply
                                  (Ty.path "core::array::iter::IntoIter")
                                  [ CHUNK ]
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ]
                              ],
                            [],
                            [],
                            "chain",
                            [],
                            [
                              Ty.apply
                                (Ty.path "array")
                                [ CHUNK ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::sources::empty::Empty")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ];
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::iter::sources::empty::Empty")
                                  []
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ],
                                [],
                                [],
                                "chain",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::sources::empty::Empty")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ],
                                  M.get_function (|
                                    "core::iter::sources::empty::empty",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                  |),
                                  []
                                |);
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| local |) |),
                                    "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                    "left_child_hash"
                                  |)
                                |)
                              ]
                            |);
                            M.read (|
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| local |) |),
                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                "right_child_hash"
                              |)
                            |)
                          ]
                        |);
                        M.read (|
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| local |) |),
                            "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                            "parent_hash"
                          |)
                        |)
                      ]
                    |) in
                  let~ _ : Ty.tuple [] :=
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "openvm_stark_backend::interaction::PermutationCheckBus",
                        "interact",
                        [],
                        [
                          AB;
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var";
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::sources::empty::Empty")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ];
                                      Ty.apply
                                        (Ty.path "core::array::iter::IntoIter")
                                        [ CHUNK ]
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::array::iter::IntoIter")
                                    [ CHUNK ]
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [ CHUNK ]
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                            ];
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_circuit::system::memory::merkle::air::MemoryMerkleAir",
                            "compression_bus"
                          |)
                        |);
                        M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| builder |) |) |);
                        M.read (| compress_fields |);
                        M.call_closure (|
                          Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                          M.get_trait_method (|
                            "core::ops::arith::Mul",
                            Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                            [],
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                            "mul",
                            [],
                            []
                          |),
                          [
                            M.read (|
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| local |) |),
                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                "expand_direction"
                              |)
                            |);
                            M.read (|
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| local |) |),
                                "openvm_circuit::system::memory::merkle::columns::MemoryMerkleCols",
                                "expand_direction"
                              |)
                            |)
                          ]
                        |)
                      ]
                    |) in
                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                |)))
            | _, _, _ => M.impossible "wrong number of arguments"
            end.
          
          Global Instance AssociatedFunction_eval_interactions :
            forall (CHUNK : Value.t),
            M.IsAssociatedFunction.C (Self CHUNK) "eval_interactions" (eval_interactions CHUNK).
          Admitted.
          Global Typeclasses Opaque eval_interactions.
        End Impl_openvm_circuit_system_memory_merkle_air_MemoryMerkleAir_CHUNK.
      End air.
    End merkle.
  End memory.
End system.
