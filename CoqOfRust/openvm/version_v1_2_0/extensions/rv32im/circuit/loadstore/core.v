(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module loadstore.
  Module core.
    (*
    Enum InstructionOpcode
    {
      const_params := [];
      ty_params := [];
      variants :=
        [
          {
            name := "LoadW0";
            item := StructTuple [];
          };
          {
            name := "LoadHu0";
            item := StructTuple [];
          };
          {
            name := "LoadHu2";
            item := StructTuple [];
          };
          {
            name := "LoadBu0";
            item := StructTuple [];
          };
          {
            name := "LoadBu1";
            item := StructTuple [];
          };
          {
            name := "LoadBu2";
            item := StructTuple [];
          };
          {
            name := "LoadBu3";
            item := StructTuple [];
          };
          {
            name := "StoreW0";
            item := StructTuple [];
          };
          {
            name := "StoreH0";
            item := StructTuple [];
          };
          {
            name := "StoreH2";
            item := StructTuple [];
          };
          {
            name := "StoreB0";
            item := StructTuple [];
          };
          {
            name := "StoreB1";
            item := StructTuple [];
          };
          {
            name := "StoreB2";
            item := StructTuple [];
          };
          {
            name := "StoreB3";
            item := StructTuple [];
          }
        ];
    }
    *)
    
    Axiom IsDiscriminant_InstructionOpcode_LoadW0 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0" 0.
    Axiom IsDiscriminant_InstructionOpcode_LoadHu0 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu0" 1.
    Axiom IsDiscriminant_InstructionOpcode_LoadHu2 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2" 2.
    Axiom IsDiscriminant_InstructionOpcode_LoadBu0 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu0" 3.
    Axiom IsDiscriminant_InstructionOpcode_LoadBu1 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu1" 4.
    Axiom IsDiscriminant_InstructionOpcode_LoadBu2 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu2" 5.
    Axiom IsDiscriminant_InstructionOpcode_LoadBu3 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu3" 6.
    Axiom IsDiscriminant_InstructionOpcode_StoreW0 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0" 7.
    Axiom IsDiscriminant_InstructionOpcode_StoreH0 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0" 8.
    Axiom IsDiscriminant_InstructionOpcode_StoreH2 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2" 9.
    Axiom IsDiscriminant_InstructionOpcode_StoreB0 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0" 10.
    Axiom IsDiscriminant_InstructionOpcode_StoreB1 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1" 11.
    Axiom IsDiscriminant_InstructionOpcode_StoreB2 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2" 12.
    Axiom IsDiscriminant_InstructionOpcode_StoreB3 :
      M.IsDiscriminant "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3" 13.
    
    Module Impl_core_fmt_Debug_for_openvm_rv32im_circuit_loadstore_core_InstructionOpcode.
      Definition Self : Ty.t := Ty.path "openvm_rv32im_circuit::loadstore::core::InstructionOpcode".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_rv32im_circuit::loadstore::core::InstructionOpcode" ],
                self
              |) in
            let f :=
              M.alloc (| Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ], f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (| Ty.path "core::fmt::Formatter", "write_str", [], [] |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.match_operator (|
                  Ty.apply (Ty.path "&") [] [ Ty.path "str" ],
                  self,
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadW0" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu0"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadHu0" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadHu2" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu0"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadBu0" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu1"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadBu1" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu2"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadBu2" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu3"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadBu3" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreW0" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreH0" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreH2" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreB0" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreB1" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreB2" |) |) |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.deref (| M.read (| γ |) |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                          |) in
                        M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "StoreB3" |) |) |)))
                  ]
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_openvm_rv32im_circuit_loadstore_core_InstructionOpcode.
    
    Module Impl_core_clone_Clone_for_openvm_rv32im_circuit_loadstore_core_InstructionOpcode.
      Definition Self : Ty.t := Ty.path "openvm_rv32im_circuit::loadstore::core::InstructionOpcode".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.path "openvm_rv32im_circuit::loadstore::core::InstructionOpcode" ],
                self
              |) in
            M.read (| M.deref (| M.read (| self |) |) |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_openvm_rv32im_circuit_loadstore_core_InstructionOpcode.
    
    Module Impl_core_marker_Copy_for_openvm_rv32im_circuit_loadstore_core_InstructionOpcode.
      Definition Self : Ty.t := Ty.path "openvm_rv32im_circuit::loadstore::core::InstructionOpcode".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::Copy"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [].
    End Impl_core_marker_Copy_for_openvm_rv32im_circuit_loadstore_core_InstructionOpcode.
    
    (* StructRecord
      {
        name := "LoadStoreCoreCols";
        const_params := [ "NUM_CELLS" ];
        ty_params := [ "T" ];
        fields :=
          [
            ("flags", Ty.apply (Ty.path "array") [ Value.Integer IntegerKind.Usize 4 ] [ T ]);
            ("is_valid", T);
            ("is_load", T);
            ("read_data", Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ]);
            ("prev_data", Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ]);
            ("write_data", Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_where_core_fmt_Debug_T_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T.
      Definition Self (NUM_CELLS : Value.t) (T : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
          [ NUM_CELLS ]
          [ T ].
      
      (* Debug *)
      Definition fmt
          (NUM_CELLS : Value.t)
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS T in
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                      [ NUM_CELLS ]
                      [ T ]
                  ],
                self
              |) in
            let f :=
              M.alloc (| Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ], f |) in
            M.read (|
              let~ names :
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.apply
                        (Ty.path "array")
                        [ Value.Integer IntegerKind.Usize 6 ]
                        [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                    ] :=
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.alloc (|
                        Ty.apply
                          (Ty.path "array")
                          [ Value.Integer IntegerKind.Usize 6 ]
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ],
                        Value.Array
                          [
                            mk_str (| "flags" |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "is_valid" |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "is_load" |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "read_data" |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "prev_data" |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "write_data" |) |) |)
                          ]
                      |)
                    |)
                  |)
                |) in
              let~ values :
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.apply
                        (Ty.path "slice")
                        []
                        [ Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ] ]
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.apply
                        (Ty.path "slice")
                        []
                        [ Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ] ]
                    ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "array")
                          [ Value.Integer IntegerKind.Usize 6 ]
                          [ Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]
                          ]
                      ])
                    (Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "slice")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]
                          ]
                      ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Ty.apply
                              (Ty.path "array")
                              [ Value.Integer IntegerKind.Usize 6 ]
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]
                              ],
                            Value.Array
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                                  M.pointer_coercion
                                    M.PointerCoercion.Unsize
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "array")
                                          [ Value.Integer IntegerKind.Usize 4 ]
                                          [ T ]
                                      ])
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| self |) |),
                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                                            "flags"
                                          |)
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                                  M.pointer_coercion
                                    M.PointerCoercion.Unsize
                                    (Ty.apply (Ty.path "&") [] [ T ])
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| self |) |),
                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                                            "is_valid"
                                          |)
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                                  M.pointer_coercion
                                    M.PointerCoercion.Unsize
                                    (Ty.apply (Ty.path "&") [] [ T ])
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| self |) |),
                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                                            "is_load"
                                          |)
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                                  M.pointer_coercion
                                    M.PointerCoercion.Unsize
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ] ])
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| self |) |),
                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                                            "read_data"
                                          |)
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                                  M.pointer_coercion
                                    M.PointerCoercion.Unsize
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ] ])
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| self |) |),
                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                                            "prev_data"
                                          |)
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                                  M.pointer_coercion
                                    M.PointerCoercion.Unsize
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ] ]
                                      ])
                                    (Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.alloc (|
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ] ],
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| self |) |),
                                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                                                "write_data"
                                              |)
                                            |)
                                          |)
                                        |)
                                      |)
                                    |)
                                  ]
                                |)
                              ]
                          |)
                        |)
                      |)
                    |)
                  ]
                |) in
              M.alloc (|
                Ty.apply
                  (Ty.path "core::result::Result")
                  []
                  [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::result::Result")
                    []
                    [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                  M.get_associated_function (|
                    Ty.path "core::fmt::Formatter",
                    "debug_struct_fields_finish",
                    [],
                    []
                  |),
                  [
                    M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadStoreCoreCols" |) |) |);
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.apply
                            (Ty.path "slice")
                            []
                            [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                        ],
                      M.pointer_coercion
                        M.PointerCoercion.Unsize
                        (Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "array")
                              [ Value.Integer IntegerKind.Usize 6 ]
                              [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                          ])
                        (Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                          ]),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| names |) |) |) ]
                    |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| values |) |) |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (T : Ty.t),
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS T)
          (* Instance *) [ ("fmt", InstanceField.Method (fmt NUM_CELLS T)) ].
    End Impl_core_fmt_Debug_where_core_fmt_Debug_T_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T.
    
    Module Impl_core_clone_Clone_where_core_clone_Clone_T_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T.
      Definition Self (NUM_CELLS : Value.t) (T : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
          [ NUM_CELLS ]
          [ T ].
      
      (* Clone *)
      Definition clone
          (NUM_CELLS : Value.t)
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                      [ NUM_CELLS ]
                      [ T ]
                  ],
                self
              |) in
            Value.mkStructRecord
              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols"
              [ NUM_CELLS ]
              [ T ]
              [
                ("flags",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ Value.Integer IntegerKind.Usize 4 ] [ T ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ Value.Integer IntegerKind.Usize 4 ] [ T ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                              "flags"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("is_valid",
                  M.call_closure (|
                    T,
                    M.get_trait_method (| "core::clone::Clone", T, [], [], "clone", [], [] |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                              "is_valid"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("is_load",
                  M.call_closure (|
                    T,
                    M.get_trait_method (| "core::clone::Clone", T, [], [], "clone", [], [] |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                              "is_load"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("read_data",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                              "read_data"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("prev_data",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                              "prev_data"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("write_data",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ NUM_CELLS ] [ T ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                              "write_data"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (T : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS T)
          (* Instance *) [ ("clone", InstanceField.Method (clone NUM_CELLS T)) ].
    End Impl_core_clone_Clone_where_core_clone_Clone_T_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T.
    
    Module Impl_core_borrow_Borrow_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T_for_slice_T.
      Definition Self (NUM_CELLS : Value.t) (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "slice") [] [ T ].
      
      (* AlignedBorrow *)
      Definition borrow
          (NUM_CELLS : Value.t)
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ],
                self
              |) in
            M.read (|
              let~ _ : Ty.tuple [] :=
                M.match_operator (|
                  Ty.tuple [],
                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        M.read (|
                          let~ _ : Ty.tuple [] :=
                            M.match_operator (|
                              Ty.tuple [],
                              M.alloc (|
                                Ty.tuple
                                  [
                                    Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                    Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                  ],
                                Value.Tuple
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.path "usize",
                                        M.call_closure (|
                                          Ty.path "usize",
                                          M.get_associated_function (|
                                            Ty.apply (Ty.path "slice") [] [ T ],
                                            "len",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.path "usize",
                                        M.call_closure (|
                                          Ty.path "usize",
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path
                                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                              [ NUM_CELLS ]
                                              [ T ],
                                            "width",
                                            [],
                                            []
                                          |),
                                          []
                                        |)
                                      |)
                                    |)
                                  ]
                              |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                    let left_val :=
                                      M.copy (|
                                        Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                        γ0_0
                                      |) in
                                    let right_val :=
                                      M.copy (|
                                        Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                        γ0_1
                                      |) in
                                    M.match_operator (|
                                      Ty.tuple [],
                                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                      [
                                        fun γ =>
                                          ltac:(M.monadic
                                            (let γ :=
                                              M.use
                                                (M.alloc (|
                                                  Ty.path "bool",
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      BinOp.eq,
                                                      [
                                                        M.read (|
                                                          M.deref (| M.read (| left_val |) |)
                                                        |);
                                                        M.read (|
                                                          M.deref (| M.read (| right_val |) |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)) in
                                            let _ :=
                                              is_constant_or_break_match (|
                                                M.read (| γ |),
                                                Value.Bool true
                                              |) in
                                            M.never_to_any (|
                                              M.read (|
                                                let~ kind : Ty.path "core::panicking::AssertKind" :=
                                                  Value.StructTuple
                                                    "core::panicking::AssertKind::Eq"
                                                    []
                                                    []
                                                    [] in
                                                M.alloc (|
                                                  Ty.path "never",
                                                  M.call_closure (|
                                                    Ty.path "never",
                                                    M.get_function (|
                                                      "core::panicking::assert_failed",
                                                      [],
                                                      [ Ty.path "usize"; Ty.path "usize" ]
                                                    |),
                                                    [
                                                      M.read (| kind |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (| M.read (| left_val |) |)
                                                          |)
                                                        |)
                                                      |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (| M.read (| right_val |) |)
                                                          |)
                                                        |)
                                                      |);
                                                      Value.StructTuple
                                                        "core::option::Option::None"
                                                        []
                                                        [ Ty.path "core::fmt::Arguments" ]
                                                        []
                                                    ]
                                                  |)
                                                |)
                                              |)
                                            |)));
                                        fun γ => ltac:(M.monadic (Value.Tuple []))
                                      ]
                                    |)))
                              ]
                            |) in
                          M.alloc (| Ty.tuple [], Value.Tuple [] |)
                        |)));
                    fun γ => ltac:(M.monadic (Value.Tuple []))
                  ]
                |) in
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                      [ NUM_CELLS ]
                      [ T ]
                  ],
                M.match_operator (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                        [ NUM_CELLS ]
                        [ T ]
                    ],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ];
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                  [ NUM_CELLS ]
                                  [ T ]
                              ]
                          ];
                        Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ]
                      ],
                    M.call_closure (|
                      Ty.tuple
                        [
                          Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ];
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                    [ NUM_CELLS ]
                                    [ T ]
                                ]
                            ];
                          Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ]
                        ],
                      M.get_associated_function (|
                        Ty.apply (Ty.path "slice") [] [ T ],
                        "align_to",
                        [],
                        [
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                            [ NUM_CELLS ]
                            [ T ]
                        ]
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let γ0_2 := M.SubPointer.get_tuple_field (| γ, 2 |) in
                        let prefix :=
                          M.copy (|
                            Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ],
                            γ0_0
                          |) in
                        let shorts :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                      [ NUM_CELLS ]
                                      [ T ]
                                  ]
                              ],
                            γ0_1
                          |) in
                        let _suffix :=
                          M.copy (|
                            Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ T ] ],
                            γ0_2
                          |) in
                        M.read (|
                          let~ _ : Ty.tuple [] :=
                            M.match_operator (|
                              Ty.tuple [],
                              M.alloc (| Ty.tuple [], Value.Tuple [] |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let γ :=
                                      M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                                    let _ :=
                                      is_constant_or_break_match (|
                                        M.read (| γ |),
                                        Value.Bool true
                                      |) in
                                    M.read (|
                                      let~ _ : Ty.tuple [] :=
                                        M.match_operator (|
                                          Ty.tuple [],
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ :=
                                                  M.use
                                                    (M.alloc (|
                                                      Ty.path "bool",
                                                      UnOp.not (|
                                                        M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_associated_function (|
                                                            Ty.apply (Ty.path "slice") [] [ T ],
                                                            "is_empty",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| prefix |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)) in
                                                let _ :=
                                                  is_constant_or_break_match (|
                                                    M.read (| γ |),
                                                    Value.Bool true
                                                  |) in
                                                M.never_to_any (|
                                                  M.call_closure (|
                                                    Ty.path "never",
                                                    M.get_function (|
                                                      "core::panicking::panic_fmt",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.path "core::fmt::Arguments",
                                                        M.get_associated_function (|
                                                          Ty.path "core::fmt::Arguments",
                                                          "new_const",
                                                          [ Value.Integer IntegerKind.Usize 1 ],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.alloc (|
                                                                  Ty.apply
                                                                    (Ty.path "array")
                                                                    [
                                                                      Value.Integer
                                                                        IntegerKind.Usize
                                                                        1
                                                                    ]
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [ Ty.path "str" ]
                                                                    ],
                                                                  Value.Array
                                                                    [
                                                                      mk_str (|
                                                                        "Alignment should match"
                                                                      |)
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                |)));
                                            fun γ => ltac:(M.monadic (Value.Tuple []))
                                          ]
                                        |) in
                                      M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                    |)));
                                fun γ => ltac:(M.monadic (Value.Tuple []))
                              ]
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.match_operator (|
                              Ty.tuple [],
                              M.alloc (| Ty.tuple [], Value.Tuple [] |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let γ :=
                                      M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                                    let _ :=
                                      is_constant_or_break_match (|
                                        M.read (| γ |),
                                        Value.Bool true
                                      |) in
                                    M.read (|
                                      let~ _ : Ty.tuple [] :=
                                        M.match_operator (|
                                          Ty.tuple [],
                                          M.alloc (|
                                            Ty.tuple
                                              [
                                                Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                                Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                              ],
                                            Value.Tuple
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.alloc (|
                                                    Ty.path "usize",
                                                    M.call_closure (|
                                                      Ty.path "usize",
                                                      M.get_associated_function (|
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                                              [ NUM_CELLS ]
                                                              [ T ]
                                                          ],
                                                        "len",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (| M.read (| shorts |) |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.alloc (|
                                                    Ty.path "usize",
                                                    Value.Integer IntegerKind.Usize 1
                                                  |)
                                                |)
                                              ]
                                          |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ0_0 :=
                                                  M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                let γ0_1 :=
                                                  M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                let left_val :=
                                                  M.copy (|
                                                    Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                                    γ0_0
                                                  |) in
                                                let right_val :=
                                                  M.copy (|
                                                    Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                                    γ0_1
                                                  |) in
                                                M.match_operator (|
                                                  Ty.tuple [],
                                                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let γ :=
                                                          M.use
                                                            (M.alloc (|
                                                              Ty.path "bool",
                                                              UnOp.not (|
                                                                M.call_closure (|
                                                                  Ty.path "bool",
                                                                  BinOp.eq,
                                                                  [
                                                                    M.read (|
                                                                      M.deref (|
                                                                        M.read (| left_val |)
                                                                      |)
                                                                    |);
                                                                    M.read (|
                                                                      M.deref (|
                                                                        M.read (| right_val |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |)) in
                                                        let _ :=
                                                          is_constant_or_break_match (|
                                                            M.read (| γ |),
                                                            Value.Bool true
                                                          |) in
                                                        M.never_to_any (|
                                                          M.read (|
                                                            let~ kind :
                                                                Ty.path
                                                                  "core::panicking::AssertKind" :=
                                                              Value.StructTuple
                                                                "core::panicking::AssertKind::Eq"
                                                                []
                                                                []
                                                                [] in
                                                            M.alloc (|
                                                              Ty.path "never",
                                                              M.call_closure (|
                                                                Ty.path "never",
                                                                M.get_function (|
                                                                  "core::panicking::assert_failed",
                                                                  [],
                                                                  [ Ty.path "usize"; Ty.path "usize"
                                                                  ]
                                                                |),
                                                                [
                                                                  M.read (| kind |);
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| left_val |)
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |);
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| right_val |)
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |);
                                                                  Value.StructTuple
                                                                    "core::option::Option::None"
                                                                    []
                                                                    [ Ty.path "core::fmt::Arguments"
                                                                    ]
                                                                    []
                                                                ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)));
                                                    fun γ => ltac:(M.monadic (Value.Tuple []))
                                                  ]
                                                |)))
                                          ]
                                        |) in
                                      M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                    |)));
                                fun γ => ltac:(M.monadic (Value.Tuple []))
                              ]
                            |) in
                          M.alloc (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                  [ NUM_CELLS ]
                                  [ T ]
                              ],
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_array_field (|
                                    M.deref (| M.read (| shorts |) |),
                                    Value.Integer IntegerKind.Usize 0
                                  |)
                                |)
                              |)
                            |)
                          |)
                        |)))
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (T : Ty.t),
        M.IsTraitInstance
          "core::borrow::Borrow"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [
            Ty.apply
              (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
              [ NUM_CELLS ]
              [ T ]
          ]
          (Self NUM_CELLS T)
          (* Instance *) [ ("borrow", InstanceField.Method (borrow NUM_CELLS T)) ].
    End Impl_core_borrow_Borrow_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T_for_slice_T.
    
    Module Impl_core_borrow_BorrowMut_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T_for_slice_T.
      Definition Self (NUM_CELLS : Value.t) (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "slice") [] [ T ].
      
      (* AlignedBorrow *)
      Definition borrow_mut
          (NUM_CELLS : Value.t)
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ T ] ],
                self
              |) in
            M.borrow (|
              Pointer.Kind.MutRef,
              M.deref (|
                M.read (|
                  let~ _ : Ty.tuple [] :=
                    M.match_operator (|
                      Ty.tuple [],
                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ := M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                            let _ :=
                              is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                            M.read (|
                              let~ _ : Ty.tuple [] :=
                                M.match_operator (|
                                  Ty.tuple [],
                                  M.alloc (|
                                    Ty.tuple
                                      [
                                        Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                        Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                      ],
                                    Value.Tuple
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.alloc (|
                                            Ty.path "usize",
                                            M.call_closure (|
                                              Ty.path "usize",
                                              M.get_associated_function (|
                                                Ty.apply (Ty.path "slice") [] [ T ],
                                                "len",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| self |) |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.alloc (|
                                            Ty.path "usize",
                                            M.call_closure (|
                                              Ty.path "usize",
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                                  [ NUM_CELLS ]
                                                  [ T ],
                                                "width",
                                                [],
                                                []
                                              |),
                                              []
                                            |)
                                          |)
                                        |)
                                      ]
                                  |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                        let left_val :=
                                          M.copy (|
                                            Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                            γ0_0
                                          |) in
                                        let right_val :=
                                          M.copy (|
                                            Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                            γ0_1
                                          |) in
                                        M.match_operator (|
                                          Ty.tuple [],
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ :=
                                                  M.use
                                                    (M.alloc (|
                                                      Ty.path "bool",
                                                      UnOp.not (|
                                                        M.call_closure (|
                                                          Ty.path "bool",
                                                          BinOp.eq,
                                                          [
                                                            M.read (|
                                                              M.deref (| M.read (| left_val |) |)
                                                            |);
                                                            M.read (|
                                                              M.deref (| M.read (| right_val |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)) in
                                                let _ :=
                                                  is_constant_or_break_match (|
                                                    M.read (| γ |),
                                                    Value.Bool true
                                                  |) in
                                                M.never_to_any (|
                                                  M.read (|
                                                    let~ kind :
                                                        Ty.path "core::panicking::AssertKind" :=
                                                      Value.StructTuple
                                                        "core::panicking::AssertKind::Eq"
                                                        []
                                                        []
                                                        [] in
                                                    M.alloc (|
                                                      Ty.path "never",
                                                      M.call_closure (|
                                                        Ty.path "never",
                                                        M.get_function (|
                                                          "core::panicking::assert_failed",
                                                          [],
                                                          [ Ty.path "usize"; Ty.path "usize" ]
                                                        |),
                                                        [
                                                          M.read (| kind |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| left_val |) |)
                                                              |)
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| right_val |) |)
                                                              |)
                                                            |)
                                                          |);
                                                          Value.StructTuple
                                                            "core::option::Option::None"
                                                            []
                                                            [ Ty.path "core::fmt::Arguments" ]
                                                            []
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                |)));
                                            fun γ => ltac:(M.monadic (Value.Tuple []))
                                          ]
                                        |)))
                                  ]
                                |) in
                              M.alloc (| Ty.tuple [], Value.Tuple [] |)
                            |)));
                        fun γ => ltac:(M.monadic (Value.Tuple []))
                      ]
                    |) in
                  M.alloc (|
                    Ty.apply
                      (Ty.path "&mut")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                          [ NUM_CELLS ]
                          [ T ]
                      ],
                    M.match_operator (|
                      Ty.apply
                        (Ty.path "&mut")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                            [ NUM_CELLS ]
                            [ T ]
                        ],
                      M.alloc (|
                        Ty.tuple
                          [
                            Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ T ] ];
                            Ty.apply
                              (Ty.path "&mut")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                      [ NUM_CELLS ]
                                      [ T ]
                                  ]
                              ];
                            Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ T ] ]
                          ],
                        M.call_closure (|
                          Ty.tuple
                            [
                              Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ T ] ];
                              Ty.apply
                                (Ty.path "&mut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "slice")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                        [ NUM_CELLS ]
                                        [ T ]
                                    ]
                                ];
                              Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ T ] ]
                            ],
                          M.get_associated_function (|
                            Ty.apply (Ty.path "slice") [] [ T ],
                            "align_to_mut",
                            [],
                            [
                              Ty.apply
                                (Ty.path
                                  "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                [ NUM_CELLS ]
                                [ T ]
                            ]
                          |),
                          [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                            let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                            let γ0_2 := M.SubPointer.get_tuple_field (| γ, 2 |) in
                            let prefix :=
                              M.copy (|
                                Ty.apply
                                  (Ty.path "&mut")
                                  []
                                  [ Ty.apply (Ty.path "slice") [] [ T ] ],
                                γ0_0
                              |) in
                            let shorts :=
                              M.copy (|
                                Ty.apply
                                  (Ty.path "&mut")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "slice")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                          [ NUM_CELLS ]
                                          [ T ]
                                      ]
                                  ],
                                γ0_1
                              |) in
                            let _suffix :=
                              M.copy (|
                                Ty.apply
                                  (Ty.path "&mut")
                                  []
                                  [ Ty.apply (Ty.path "slice") [] [ T ] ],
                                γ0_2
                              |) in
                            M.read (|
                              let~ _ : Ty.tuple [] :=
                                M.match_operator (|
                                  Ty.tuple [],
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ :=
                                          M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                                        let _ :=
                                          is_constant_or_break_match (|
                                            M.read (| γ |),
                                            Value.Bool true
                                          |) in
                                        M.read (|
                                          let~ _ : Ty.tuple [] :=
                                            M.match_operator (|
                                              Ty.tuple [],
                                              M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                              [
                                                fun γ =>
                                                  ltac:(M.monadic
                                                    (let γ :=
                                                      M.use
                                                        (M.alloc (|
                                                          Ty.path "bool",
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.apply (Ty.path "slice") [] [ T ],
                                                                "is_empty",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (| M.read (| prefix |) |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)) in
                                                    let _ :=
                                                      is_constant_or_break_match (|
                                                        M.read (| γ |),
                                                        Value.Bool true
                                                      |) in
                                                    M.never_to_any (|
                                                      M.call_closure (|
                                                        Ty.path "never",
                                                        M.get_function (|
                                                          "core::panicking::panic_fmt",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.path "core::fmt::Arguments",
                                                            M.get_associated_function (|
                                                              Ty.path "core::fmt::Arguments",
                                                              "new_const",
                                                              [ Value.Integer IntegerKind.Usize 1 ],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.alloc (|
                                                                      Ty.apply
                                                                        (Ty.path "array")
                                                                        [
                                                                          Value.Integer
                                                                            IntegerKind.Usize
                                                                            1
                                                                        ]
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [ Ty.path "str" ]
                                                                        ],
                                                                      Value.Array
                                                                        [
                                                                          mk_str (|
                                                                            "Alignment should match"
                                                                          |)
                                                                        ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    |)));
                                                fun γ => ltac:(M.monadic (Value.Tuple []))
                                              ]
                                            |) in
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                        |)));
                                    fun γ => ltac:(M.monadic (Value.Tuple []))
                                  ]
                                |) in
                              let~ _ : Ty.tuple [] :=
                                M.match_operator (|
                                  Ty.tuple [],
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ :=
                                          M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                                        let _ :=
                                          is_constant_or_break_match (|
                                            M.read (| γ |),
                                            Value.Bool true
                                          |) in
                                        M.read (|
                                          let~ _ : Ty.tuple [] :=
                                            M.match_operator (|
                                              Ty.tuple [],
                                              M.alloc (|
                                                Ty.tuple
                                                  [
                                                    Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                                    Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                                  ],
                                                Value.Tuple
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.path "usize",
                                                        M.call_closure (|
                                                          Ty.path "usize",
                                                          M.get_associated_function (|
                                                            Ty.apply
                                                              (Ty.path "slice")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                                                  [ NUM_CELLS ]
                                                                  [ T ]
                                                              ],
                                                            "len",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| shorts |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.path "usize",
                                                        Value.Integer IntegerKind.Usize 1
                                                      |)
                                                    |)
                                                  ]
                                              |),
                                              [
                                                fun γ =>
                                                  ltac:(M.monadic
                                                    (let γ0_0 :=
                                                      M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                    let γ0_1 :=
                                                      M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                    let left_val :=
                                                      M.copy (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.path "usize" ],
                                                        γ0_0
                                                      |) in
                                                    let right_val :=
                                                      M.copy (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.path "usize" ],
                                                        γ0_1
                                                      |) in
                                                    M.match_operator (|
                                                      Ty.tuple [],
                                                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ :=
                                                              M.use
                                                                (M.alloc (|
                                                                  Ty.path "bool",
                                                                  UnOp.not (|
                                                                    M.call_closure (|
                                                                      Ty.path "bool",
                                                                      BinOp.eq,
                                                                      [
                                                                        M.read (|
                                                                          M.deref (|
                                                                            M.read (| left_val |)
                                                                          |)
                                                                        |);
                                                                        M.read (|
                                                                          M.deref (|
                                                                            M.read (| right_val |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)) in
                                                            let _ :=
                                                              is_constant_or_break_match (|
                                                                M.read (| γ |),
                                                                Value.Bool true
                                                              |) in
                                                            M.never_to_any (|
                                                              M.read (|
                                                                let~ kind :
                                                                    Ty.path
                                                                      "core::panicking::AssertKind" :=
                                                                  Value.StructTuple
                                                                    "core::panicking::AssertKind::Eq"
                                                                    []
                                                                    []
                                                                    [] in
                                                                M.alloc (|
                                                                  Ty.path "never",
                                                                  M.call_closure (|
                                                                    Ty.path "never",
                                                                    M.get_function (|
                                                                      "core::panicking::assert_failed",
                                                                      [],
                                                                      [
                                                                        Ty.path "usize";
                                                                        Ty.path "usize"
                                                                      ]
                                                                    |),
                                                                    [
                                                                      M.read (| kind |);
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (| left_val |)
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |);
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (| right_val |)
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |);
                                                                      Value.StructTuple
                                                                        "core::option::Option::None"
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "core::fmt::Arguments"
                                                                        ]
                                                                        []
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)));
                                                        fun γ => ltac:(M.monadic (Value.Tuple []))
                                                      ]
                                                    |)))
                                              ]
                                            |) in
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                        |)));
                                    fun γ => ltac:(M.monadic (Value.Tuple []))
                                  ]
                                |) in
                              M.alloc (|
                                Ty.apply
                                  (Ty.path "&mut")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                                      [ NUM_CELLS ]
                                      [ T ]
                                  ],
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| shorts |) |),
                                        Value.Integer IntegerKind.Usize 0
                                      |)
                                    |)
                                  |)
                                |)
                              |)
                            |)))
                      ]
                    |)
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (T : Ty.t),
        M.IsTraitInstance
          "core::borrow::BorrowMut"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [
            Ty.apply
              (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
              [ NUM_CELLS ]
              [ T ]
          ]
          (Self NUM_CELLS T)
          (* Instance *) [ ("borrow_mut", InstanceField.Method (borrow_mut NUM_CELLS T)) ].
    End Impl_core_borrow_BorrowMut_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T_for_slice_T.
    
    Module Impl_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T.
      Definition Self (NUM_CELLS : Value.t) (T : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
          [ NUM_CELLS ]
          [ T ].
      
      (* AlignedBorrow *)
      Definition width
          (NUM_CELLS : Value.t)
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS T in
        match ε, τ, α with
        | [], [], [] =>
          ltac:(M.monadic
            (M.call_closure (|
              Ty.path "usize",
              M.get_function (|
                "core::mem::size_of",
                [],
                [
                  Ty.apply
                    (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                    [ NUM_CELLS ]
                    [ Ty.path "u8" ]
                ]
              |),
              []
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_width :
        forall (NUM_CELLS : Value.t) (T : Ty.t),
        M.IsAssociatedFunction.C (Self NUM_CELLS T) "width" (width NUM_CELLS T).
      Admitted.
      Global Typeclasses Opaque width.
    End Impl_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreCols_NUM_CELLS_T.
    
    (* StructRecord
      {
        name := "LoadStoreCoreRecord";
        const_params := [ "NUM_CELLS" ];
        ty_params := [ "F" ];
        fields :=
          [
            ("opcode", Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode");
            ("shift", Ty.path "u32");
            ("read_data", Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ]);
            ("prev_data", Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ]);
            ("write_data", Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_where_core_fmt_Debug_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
      Definition Self (NUM_CELLS : Value.t) (F : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
          [ NUM_CELLS ]
          [ F ].
      
      (* Debug *)
      Definition fmt
          (NUM_CELLS : Value.t)
          (F : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F in
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                      [ NUM_CELLS ]
                      [ F ]
                  ],
                self
              |) in
            let f :=
              M.alloc (| Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ], f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field5_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadStoreCoreRecord" |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "opcode" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply
                      (Ty.path "&")
                      []
                      [ Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode" ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                            "opcode"
                          |)
                        |)
                      |)
                    |)
                  ]
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "shift" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply (Ty.path "&") [] [ Ty.path "u32" ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                            "shift"
                          |)
                        |)
                      |)
                    |)
                  ]
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "read_data" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                            "read_data"
                          |)
                        |)
                      |)
                    |)
                  ]
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "prev_data" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                            "prev_data"
                          |)
                        |)
                      |)
                    |)
                  ]
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "write_data" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply
                      (Ty.path "&")
                      []
                      [ Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ]
                      ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ],
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| self |) |),
                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                                "write_data"
                              |)
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (F : Ty.t),
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS F)
          (* Instance *) [ ("fmt", InstanceField.Method (fmt NUM_CELLS F)) ].
    End Impl_core_fmt_Debug_where_core_fmt_Debug_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
    
    Module Impl_core_clone_Clone_where_core_clone_Clone_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
      Definition Self (NUM_CELLS : Value.t) (F : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
          [ NUM_CELLS ]
          [ F ].
      
      (* Clone *)
      Definition clone
          (NUM_CELLS : Value.t)
          (F : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                      [ NUM_CELLS ]
                      [ F ]
                  ],
                self
              |) in
            Value.mkStructRecord
              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord"
              [ NUM_CELLS ]
              [ F ]
              [
                ("opcode",
                  M.call_closure (|
                    Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                              "opcode"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("shift",
                  M.call_closure (|
                    Ty.path "u32",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "u32",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                              "shift"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("read_data",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                              "read_data"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("prev_data",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                              "prev_data"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("write_data",
                  M.call_closure (|
                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                              "write_data"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (F : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS F)
          (* Instance *) [ ("clone", InstanceField.Method (clone NUM_CELLS F)) ].
    End Impl_core_clone_Clone_where_core_clone_Clone_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
    
    Module underscore.
      Module Impl_serde_ser_Serialize_where_serde_ser_Serialize_F_where_serde_de_DeserializeOwned_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
        Definition Self (NUM_CELLS : Value.t) (F : Ty.t) : Ty.t :=
          Ty.apply
            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
            [ NUM_CELLS ]
            [ F ].
        
        (* Serialize *)
        Definition serialize
            (NUM_CELLS : Value.t)
            (F : Ty.t)
            (ε : list Value.t)
            (τ : list Ty.t)
            (α : list Value.t)
            : M :=
          let Self : Ty.t := Self NUM_CELLS F in
          match ε, τ, α with
          | [], [ __S ], [ self; __serializer ] =>
            ltac:(M.monadic
              (let self :=
                M.alloc (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                        [ NUM_CELLS ]
                        [ F ]
                    ],
                  self
                |) in
              let __serializer := M.alloc (| __S, __serializer |) in
              M.catch_return
                (Ty.apply
                  (Ty.path "core::result::Result")
                  []
                  [
                    Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                    Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                  ]) (|
                ltac:(M.monadic
                  (M.read (|
                    let~ __serde_state :
                        Ty.associated_in_trait
                          "serde::ser::Serializer"
                          []
                          []
                          __S
                          "SerializeStruct" :=
                      M.match_operator (|
                        Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "SerializeStruct",
                        M.alloc (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.associated_in_trait
                                "serde::ser::Serializer"
                                []
                                []
                                __S
                                "SerializeStruct"
                            ],
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct"
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "SerializeStruct";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::Serializer",
                                  __S,
                                  [],
                                  [],
                                  "serialize_struct",
                                  [],
                                  []
                                |),
                                [
                                  M.read (| __serializer |);
                                  mk_str (| "LoadStoreCoreRecord" |);
                                  M.call_closure (|
                                    Ty.path "usize",
                                    BinOp.Wrap.add,
                                    [
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.add,
                                        [
                                          M.call_closure (|
                                            Ty.path "usize",
                                            BinOp.Wrap.add,
                                            [
                                              M.call_closure (|
                                                Ty.path "usize",
                                                BinOp.Wrap.add,
                                                [
                                                  M.call_closure (|
                                                    Ty.path "usize",
                                                    BinOp.Wrap.add,
                                                    [
                                                      M.cast (Ty.path "usize") (Value.Bool false);
                                                      Value.Integer IntegerKind.Usize 1
                                                    ]
                                                  |);
                                                  Value.Integer IntegerKind.Usize 1
                                                ]
                                              |);
                                              Value.Integer IntegerKind.Usize 1
                                            ]
                                          |);
                                          Value.Integer IntegerKind.Usize 1
                                        ]
                                      |);
                                      Value.Integer IntegerKind.Usize 1
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual :=
                                M.copy (|
                                  Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.path "core::convert::Infallible";
                                      Ty.associated_in_trait
                                        "serde::ser::Serializer"
                                        []
                                        []
                                        __S
                                        "Error"
                                    ],
                                  γ0_0
                                |) in
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val :=
                                M.copy (|
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct",
                                  γ0_0
                                |) in
                              M.read (| val |)))
                        ]
                      |) in
                    let~ _ : Ty.tuple [] :=
                      M.match_operator (|
                        Ty.tuple [],
                        M.alloc (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.tuple []
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.tuple [];
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::SerializeStruct",
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct",
                                  [],
                                  [],
                                  "serialize_field",
                                  [],
                                  [
                                    Ty.path
                                      "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                  ]
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.MutRef,
                                    M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                  |);
                                  mk_str (| "opcode" |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.SubPointer.get_struct_record_field (|
                                          M.deref (| M.read (| self |) |),
                                          "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                                          "opcode"
                                        |)
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual :=
                                M.copy (|
                                  Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.path "core::convert::Infallible";
                                      Ty.associated_in_trait
                                        "serde::ser::Serializer"
                                        []
                                        []
                                        __S
                                        "Error"
                                    ],
                                  γ0_0
                                |) in
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| Ty.tuple [], γ0_0 |) in
                              M.read (| val |)))
                        ]
                      |) in
                    let~ _ : Ty.tuple [] :=
                      M.match_operator (|
                        Ty.tuple [],
                        M.alloc (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.tuple []
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.tuple [];
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::SerializeStruct",
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct",
                                  [],
                                  [],
                                  "serialize_field",
                                  [],
                                  [ Ty.path "u32" ]
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.MutRef,
                                    M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                  |);
                                  mk_str (| "shift" |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.SubPointer.get_struct_record_field (|
                                          M.deref (| M.read (| self |) |),
                                          "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                                          "shift"
                                        |)
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual :=
                                M.copy (|
                                  Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.path "core::convert::Infallible";
                                      Ty.associated_in_trait
                                        "serde::ser::Serializer"
                                        []
                                        []
                                        __S
                                        "Error"
                                    ],
                                  γ0_0
                                |) in
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| Ty.tuple [], γ0_0 |) in
                              M.read (| val |)))
                        ]
                      |) in
                    let~ _ : Ty.tuple [] :=
                      M.match_operator (|
                        Ty.tuple [],
                        M.alloc (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.tuple []
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.tuple [];
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::SerializeStruct",
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct",
                                  [],
                                  [],
                                  "serialize_field",
                                  [],
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith")
                                      [ NUM_CELLS ]
                                      [ F ]
                                  ]
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.MutRef,
                                    M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                  |);
                                  mk_str (| "read_data" |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path
                                              "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith")
                                            [ NUM_CELLS ]
                                            [ F ],
                                          Value.mkStructRecord
                                            "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith"
                                            [ NUM_CELLS ]
                                            [ F ]
                                            [
                                              ("values",
                                                Value.Tuple
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.deref (| M.read (| self |) |),
                                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                                                            "read_data"
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]);
                                              ("phantom",
                                                Value.StructTuple
                                                  "core::marker::PhantomData"
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                                                      [ NUM_CELLS ]
                                                      [ F ]
                                                  ]
                                                  [])
                                            ]
                                        |)
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual :=
                                M.copy (|
                                  Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.path "core::convert::Infallible";
                                      Ty.associated_in_trait
                                        "serde::ser::Serializer"
                                        []
                                        []
                                        __S
                                        "Error"
                                    ],
                                  γ0_0
                                |) in
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| Ty.tuple [], γ0_0 |) in
                              M.read (| val |)))
                        ]
                      |) in
                    let~ _ : Ty.tuple [] :=
                      M.match_operator (|
                        Ty.tuple [],
                        M.alloc (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.tuple []
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.tuple [];
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::SerializeStruct",
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct",
                                  [],
                                  [],
                                  "serialize_field",
                                  [],
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith'1")
                                      [ NUM_CELLS ]
                                      [ F ]
                                  ]
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.MutRef,
                                    M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                  |);
                                  mk_str (| "prev_data" |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path
                                              "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith'1")
                                            [ NUM_CELLS ]
                                            [ F ],
                                          Value.mkStructRecord
                                            "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith'1"
                                            [ NUM_CELLS ]
                                            [ F ]
                                            [
                                              ("values",
                                                Value.Tuple
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.deref (| M.read (| self |) |),
                                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                                                            "prev_data"
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]);
                                              ("phantom",
                                                Value.StructTuple
                                                  "core::marker::PhantomData"
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                                                      [ NUM_CELLS ]
                                                      [ F ]
                                                  ]
                                                  [])
                                            ]
                                        |)
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual :=
                                M.copy (|
                                  Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.path "core::convert::Infallible";
                                      Ty.associated_in_trait
                                        "serde::ser::Serializer"
                                        []
                                        []
                                        __S
                                        "Error"
                                    ],
                                  γ0_0
                                |) in
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| Ty.tuple [], γ0_0 |) in
                              M.read (| val |)))
                        ]
                      |) in
                    let~ _ : Ty.tuple [] :=
                      M.match_operator (|
                        Ty.tuple [],
                        M.alloc (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.tuple []
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.tuple [];
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::SerializeStruct",
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct",
                                  [],
                                  [],
                                  "serialize_field",
                                  [],
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith'2")
                                      [ NUM_CELLS ]
                                      [ F ]
                                  ]
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.MutRef,
                                    M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                  |);
                                  mk_str (| "write_data" |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path
                                              "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith'2")
                                            [ NUM_CELLS ]
                                            [ F ],
                                          Value.mkStructRecord
                                            "openvm_rv32im_circuit::loadstore::core::_::serialize::__SerializeWith'2"
                                            [ NUM_CELLS ]
                                            [ F ]
                                            [
                                              ("values",
                                                Value.Tuple
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.deref (| M.read (| self |) |),
                                                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                                                            "write_data"
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]);
                                              ("phantom",
                                                Value.StructTuple
                                                  "core::marker::PhantomData"
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                                                      [ NUM_CELLS ]
                                                      [ F ]
                                                  ]
                                                  [])
                                            ]
                                        |)
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual :=
                                M.copy (|
                                  Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.path "core::convert::Infallible";
                                      Ty.associated_in_trait
                                        "serde::ser::Serializer"
                                        []
                                        []
                                        __S
                                        "Error"
                                    ],
                                  γ0_0
                                |) in
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| Ty.tuple [], γ0_0 |) in
                              M.read (| val |)))
                        ]
                      |) in
                    M.alloc (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                        ],
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::result::Result")
                          []
                          [
                            Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                            Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                          ],
                        M.get_trait_method (|
                          "serde::ser::SerializeStruct",
                          Ty.associated_in_trait
                            "serde::ser::Serializer"
                            []
                            []
                            __S
                            "SerializeStruct",
                          [],
                          [],
                          "end",
                          [],
                          []
                        |),
                        [ M.read (| __serde_state |) ]
                      |)
                    |)
                  |)))
              |)))
          | _, _, _ => M.impossible "wrong number of arguments"
          end.
        
        Axiom Implements :
          forall (NUM_CELLS : Value.t) (F : Ty.t),
          M.IsTraitInstance
            "serde::ser::Serialize"
            (* Trait polymorphic consts *) []
            (* Trait polymorphic types *) []
            (Self NUM_CELLS F)
            (* Instance *) [ ("serialize", InstanceField.Method (serialize NUM_CELLS F)) ].
      End Impl_serde_ser_Serialize_where_serde_ser_Serialize_F_where_serde_de_DeserializeOwned_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
      Module Impl_serde_de_Deserialize_where_serde_ser_Serialize_F_where_serde_de_DeserializeOwned_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
        Definition Self (NUM_CELLS : Value.t) (F : Ty.t) : Ty.t :=
          Ty.apply
            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
            [ NUM_CELLS ]
            [ F ].
        
        (* Deserialize *)
        Definition deserialize
            (NUM_CELLS : Value.t)
            (F : Ty.t)
            (ε : list Value.t)
            (τ : list Ty.t)
            (α : list Value.t)
            : M :=
          let Self : Ty.t := Self NUM_CELLS F in
          match ε, τ, α with
          | [], [ __D ], [ __deserializer ] =>
            ltac:(M.monadic
              (let __deserializer := M.alloc (| __D, __deserializer |) in
              M.call_closure (|
                Ty.apply
                  (Ty.path "core::result::Result")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                      [ NUM_CELLS ]
                      [ F ];
                    Ty.associated_in_trait "serde::de::Deserializer" [] [] __D "Error"
                  ],
                M.get_trait_method (|
                  "serde::de::Deserializer",
                  __D,
                  [],
                  [],
                  "deserialize_struct",
                  [],
                  [
                    Ty.apply
                      (Ty.path
                        "openvm_rv32im_circuit::loadstore::core::_'1::deserialize::__Visitor")
                      [ NUM_CELLS ]
                      [ F ]
                  ]
                |),
                [
                  M.read (| __deserializer |);
                  mk_str (| "LoadStoreCoreRecord" |);
                  M.read (|
                    get_constant (|
                      "openvm_rv32im_circuit::loadstore::core::_'1::deserialize::FIELDS",
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.apply
                            (Ty.path "slice")
                            []
                            [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                        ]
                    |)
                  |);
                  Value.mkStructRecord
                    "openvm_rv32im_circuit::loadstore::core::_'1::deserialize::__Visitor"
                    [ NUM_CELLS ]
                    [ F ]
                    [
                      ("marker",
                        Value.StructTuple
                          "core::marker::PhantomData"
                          []
                          [
                            Ty.apply
                              (Ty.path
                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                              [ NUM_CELLS ]
                              [ F ]
                          ]
                          []);
                      ("lifetime",
                        Value.StructTuple
                          "core::marker::PhantomData"
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.tuple [] ] ]
                          [])
                    ]
                ]
              |)))
          | _, _, _ => M.impossible "wrong number of arguments"
          end.
        
        Axiom Implements :
          forall (NUM_CELLS : Value.t) (F : Ty.t),
          M.IsTraitInstance
            "serde::de::Deserialize"
            (* Trait polymorphic consts *) []
            (* Trait polymorphic types *) []
            (Self NUM_CELLS F)
            (* Instance *) [ ("deserialize", InstanceField.Method (deserialize NUM_CELLS F)) ].
      End Impl_serde_de_Deserialize_where_serde_ser_Serialize_F_where_serde_de_DeserializeOwned_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreRecord_NUM_CELLS_F.
    End underscore.
    
    
    (* StructRecord
      {
        name := "LoadStoreCoreAir";
        const_params := [ "NUM_CELLS" ];
        ty_params := [];
        fields := [ ("offset", Ty.path "usize") ];
      } *)
    
    Module Impl_core_fmt_Debug_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
          [ NUM_CELLS ]
          [].
      
      (* Debug *)
      Definition fmt
          (NUM_CELLS : Value.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS in
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            let f :=
              M.alloc (| Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ], f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field1_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadStoreCoreAir" |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "offset" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| self |) |),
                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir",
                                "offset"
                              |)
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t),
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS)
          (* Instance *) [ ("fmt", InstanceField.Method (fmt NUM_CELLS)) ].
    End Impl_core_fmt_Debug_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
    
    Module Impl_core_clone_Clone_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
          [ NUM_CELLS ]
          [].
      
      (* Clone *)
      Definition clone
          (NUM_CELLS : Value.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            Value.mkStructRecord
              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir"
              [ NUM_CELLS ]
              []
              [
                ("offset",
                  M.call_closure (|
                    Ty.path "usize",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "usize",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir",
                              "offset"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS)
          (* Instance *) [ ("clone", InstanceField.Method (clone NUM_CELLS)) ].
    End Impl_core_clone_Clone_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
    
    Module Impl_p3_air_air_BaseAir_where_p3_field_field_Field_F_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) (F : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
          [ NUM_CELLS ]
          [].
      
      (*
          fn width(&self) -> usize {
              LoadStoreCoreCols::<F, NUM_CELLS>::width()
          }
      *)
      Definition width
          (NUM_CELLS : Value.t)
          (F : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            M.call_closure (|
              Ty.path "usize",
              M.get_associated_function (|
                Ty.apply
                  (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                  [ NUM_CELLS ]
                  [ F ],
                "width",
                [],
                []
              |),
              []
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (F : Ty.t),
        M.IsTraitInstance
          "p3_air::air::BaseAir"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) [ F ]
          (Self NUM_CELLS F)
          (* Instance *) [ ("width", InstanceField.Method (width NUM_CELLS F)) ].
    End Impl_p3_air_air_BaseAir_where_p3_field_field_Field_F_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
    
    Module Impl_openvm_stark_backend_rap_BaseAirWithPublicValues_where_p3_field_field_Field_F_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) (F : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
          [ NUM_CELLS ]
          [].
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (F : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::rap::BaseAirWithPublicValues"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) [ F ]
          (Self NUM_CELLS F)
          (* Instance *) [].
    End Impl_openvm_stark_backend_rap_BaseAirWithPublicValues_where_p3_field_field_Field_F_F_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
    
    Module Impl_openvm_circuit_arch_integration_api_VmCoreAir_where_openvm_stark_backend_interaction_InteractionBuilder_AB_where_openvm_circuit_arch_integration_api_VmAdapterInterface_I_associated_in_trait_p3_air_air_AirBuilder___AB_Expr_where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__associated_in_trait_p3_air_air_AirBuilder___AB_Expr_I_Reads_Tuple_array_NUM_CELLS_associated_in_trait_p3_air_air_AirBuilder___AB_Var_array_NUM_CELLS_associated_in_trait_p3_air_air_AirBuilder___AB_Expr__where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__associated_in_trait_p3_air_air_AirBuilder___AB_Expr_I_Writes_array_Usize_1_array_NUM_CELLS_associated_in_trait_p3_air_air_AirBuilder___AB_Expr_where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__associated_in_trait_p3_air_air_AirBuilder___AB_Expr_I_ProcessedInstruction_openvm_rv32im_circuit_adapters_loadstore_LoadStoreInstruction_associated_in_trait_p3_air_air_AirBuilder___AB_Expr_AB_I_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) (AB I : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
          [ NUM_CELLS ]
          [].
      
      (*
          fn eval(
              &self,
              builder: &mut AB,
              local_core: &[AB::Var],
              _from_pc: AB::Var,
          ) -> AdapterAirContext<AB::Expr, I> {
              let cols: &LoadStoreCoreCols<AB::Var, NUM_CELLS> = ( *local_core).borrow();
              let LoadStoreCoreCols::<AB::Var, NUM_CELLS> {
                  read_data,
                  prev_data,
                  write_data,
                  flags,
                  is_valid,
                  is_load,
              } = *cols;
      
              let get_expr_12 = |x: &AB::Expr| (x.clone() - AB::Expr::ONE) * (x.clone() - AB::Expr::TWO);
      
              builder.assert_bool(is_valid);
              let sum = flags.iter().fold(AB::Expr::ZERO, |acc, &flag| {
                  builder.assert_zero(flag * get_expr_12(&flag.into()));
                  acc + flag
              });
              builder.assert_zero(sum.clone() * get_expr_12(&sum));
              // when sum is 0, is_valid must be 0
              builder.when(get_expr_12(&sum)).assert_zero(is_valid);
      
              // We will use the InstructionOpcode enum to encode the opcodes
              // the appended digit to each opcode is the shift amount
              let inv_2 = AB::F::from_canonical_u32(2).inverse();
              let mut opcode_flags = vec![];
              for flag in flags {
                  opcode_flags.push(flag * (flag - AB::F::ONE) * inv_2);
              }
              for flag in flags {
                  opcode_flags.push(flag * (sum.clone() - AB::F::TWO) * AB::F::NEG_ONE);
              }
              (0..4).for_each(|i| {
                  ((i + 1)..4).for_each(|j| opcode_flags.push(flags[i] * flags[j]));
              });
      
              let opcode_when = |idxs: &[InstructionOpcode]| -> AB::Expr {
                  idxs.iter().fold(AB::Expr::ZERO, |acc, &idx| {
                      acc + opcode_flags[idx as usize].clone()
                  })
              };
      
              // Constrain that is_load matches the opcode
              builder.assert_eq(
                  is_load,
                  opcode_when(&[LoadW0, LoadHu0, LoadHu2, LoadBu0, LoadBu1, LoadBu2, LoadBu3]),
              );
              builder.when(is_load).assert_one(is_valid);
      
              // There are three parts to write_data:
              // - 1st limb is always read_data
              // - 2nd to (NUM_CELLS/2)th limbs are:
              //   - read_data if loadw/loadhu/storew/storeh
              //   - prev_data if storeb
              //   - zero if loadbu
              // - (NUM_CELLS/2 + 1)th to last limbs are:
              //   - read_data if loadw/storew
              //   - prev_data if storeb/storeh
              //   - zero if loadbu/loadhu
              // Shifting needs to be carefully handled in case by case basis
              // refer to [run_write_data] for the expected behavior in each case
              for (i, cell) in write_data.iter().enumerate() {
                  // handling loads, expected_load_val = 0 if a store operation is happening
                  let expected_load_val = if i == 0 {
                      opcode_when(&[LoadW0, LoadHu0, LoadBu0]) * read_data[0]
                          + opcode_when(&[LoadBu1]) * read_data[1]
                          + opcode_when(&[LoadHu2, LoadBu2]) * read_data[2]
                          + opcode_when(&[LoadBu3]) * read_data[3]
                  } else if i < NUM_CELLS / 2 {
                      opcode_when(&[LoadW0, LoadHu0]) * read_data[i]
                          + opcode_when(&[LoadHu2]) * read_data[i + 2]
                  } else {
                      opcode_when(&[LoadW0]) * read_data[i]
                  };
      
                  // handling stores, expected_store_val = 0 if a load operation is happening
                  let expected_store_val = if i == 0 {
                      opcode_when(&[StoreW0, StoreH0, StoreB0]) * read_data[i]
                          + opcode_when(&[StoreH2, StoreB1, StoreB2, StoreB3]) * prev_data[i]
                  } else if i == 1 {
                      opcode_when(&[StoreB1]) * read_data[i - 1]
                          + opcode_when(&[StoreW0, StoreH0]) * read_data[i]
                          + opcode_when(&[StoreH2, StoreB0, StoreB2, StoreB3]) * prev_data[i]
                  } else if i == 2 {
                      opcode_when(&[StoreH2, StoreB2]) * read_data[i - 2]
                          + opcode_when(&[StoreW0]) * read_data[i]
                          + opcode_when(&[StoreH0, StoreB0, StoreB1, StoreB3]) * prev_data[i]
                  } else if i == 3 {
                      opcode_when(&[StoreB3]) * read_data[i - 3]
                          + opcode_when(&[StoreH2]) * read_data[i - 2]
                          + opcode_when(&[StoreW0]) * read_data[i]
                          + opcode_when(&[StoreH0, StoreB0, StoreB1, StoreB2]) * prev_data[i]
                  } else {
                      opcode_when(&[StoreW0]) * read_data[i]
                          + opcode_when(&[StoreB0, StoreB1, StoreB2, StoreB3]) * prev_data[i]
                          + opcode_when(&[StoreH0])
                              * if i < NUM_CELLS / 2 {
                                  read_data[i]
                              } else {
                                  prev_data[i]
                              }
                          + opcode_when(&[StoreH2])
                              * if i - 2 < NUM_CELLS / 2 {
                                  read_data[i - 2]
                              } else {
                                  prev_data[i]
                              }
                  };
                  let expected_val = expected_load_val + expected_store_val;
                  builder.assert_eq( *cell, expected_val);
              }
      
              let expected_opcode = opcode_when(&[LoadW0]) * AB::Expr::from_canonical_u8(LOADW as u8)
                  + opcode_when(&[LoadHu0, LoadHu2]) * AB::Expr::from_canonical_u8(LOADHU as u8)
                  + opcode_when(&[LoadBu0, LoadBu1, LoadBu2, LoadBu3])
                      * AB::Expr::from_canonical_u8(LOADBU as u8)
                  + opcode_when(&[StoreW0]) * AB::Expr::from_canonical_u8(STOREW as u8)
                  + opcode_when(&[StoreH0, StoreH2]) * AB::Expr::from_canonical_u8(STOREH as u8)
                  + opcode_when(&[StoreB0, StoreB1, StoreB2, StoreB3])
                      * AB::Expr::from_canonical_u8(STOREB as u8);
              let expected_opcode = VmCoreAir::<AB, I>::expr_to_global_expr(self, expected_opcode);
      
              let load_shift_amount = opcode_when(&[LoadBu1]) * AB::Expr::ONE
                  + opcode_when(&[LoadHu2, LoadBu2]) * AB::Expr::TWO
                  + opcode_when(&[LoadBu3]) * AB::Expr::from_canonical_u32(3);
      
              let store_shift_amount = opcode_when(&[StoreB1]) * AB::Expr::ONE
                  + opcode_when(&[StoreH2, StoreB2]) * AB::Expr::TWO
                  + opcode_when(&[StoreB3]) * AB::Expr::from_canonical_u32(3);
      
              AdapterAirContext {
                  to_pc: None,
                  reads: (prev_data, read_data.map(|x| x.into())).into(),
                  writes: [write_data.map(|x| x.into())].into(),
                  instruction: LoadStoreInstruction {
                      is_valid: is_valid.into(),
                      opcode: expected_opcode,
                      is_load: is_load.into(),
                      load_shift_amount,
                      store_shift_amount,
                  }
                  .into(),
              }
          }
      *)
      Definition eval
          (NUM_CELLS : Value.t)
          (AB I : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS AB I in
        match ε, τ, α with
        | [], [], [ self; builder; local_core; _from_pc ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            let builder := M.alloc (| Ty.apply (Ty.path "&mut") [] [ AB ], builder |) in
            let local_core :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "slice")
                      []
                      [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                  ],
                local_core
              |) in
            let _from_pc :=
              M.alloc (|
                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                _from_pc
              |) in
            M.read (|
              let~ cols :
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                        [ NUM_CELLS ]
                        [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                    ] :=
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                            [ NUM_CELLS ]
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                        ],
                      M.get_trait_method (|
                        "core::borrow::Borrow",
                        Ty.apply
                          (Ty.path "slice")
                          []
                          [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                        [],
                        [
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                            [ NUM_CELLS ]
                            [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                        ],
                        "borrow",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| local_core |) |) |) ]
                    |)
                  |)
                |) in
              M.alloc (|
                Ty.apply
                  (Ty.path "openvm_circuit::arch::integration_api::AdapterAirContext")
                  []
                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"; I ],
                M.match_operator (|
                  Ty.apply
                    (Ty.path "openvm_circuit::arch::integration_api::AdapterAirContext")
                    []
                    [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"; I ],
                  M.deref (| M.read (| cols |) |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 :=
                          M.SubPointer.get_struct_record_field (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                            "read_data"
                          |) in
                        let γ0_1 :=
                          M.SubPointer.get_struct_record_field (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                            "prev_data"
                          |) in
                        let γ0_2 :=
                          M.SubPointer.get_struct_record_field (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                            "write_data"
                          |) in
                        let γ0_3 :=
                          M.SubPointer.get_struct_record_field (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                            "flags"
                          |) in
                        let γ0_4 :=
                          M.SubPointer.get_struct_record_field (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                            "is_valid"
                          |) in
                        let γ0_5 :=
                          M.SubPointer.get_struct_record_field (|
                            γ,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                            "is_load"
                          |) in
                        let read_data :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "array")
                              [ NUM_CELLS ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                            γ0_0
                          |) in
                        let prev_data :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "array")
                              [ NUM_CELLS ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                            γ0_1
                          |) in
                        let write_data :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "array")
                              [ NUM_CELLS ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                            γ0_2
                          |) in
                        let flags :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "array")
                              [ Value.Integer IntegerKind.Usize 4 ]
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ],
                            γ0_3
                          |) in
                        let is_valid :=
                          M.copy (|
                            Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                            γ0_4
                          |) in
                        let is_load :=
                          M.copy (|
                            Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var",
                            γ0_5
                          |) in
                        M.read (|
                          let~ get_expr_12 :
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                ]
                                (Ty.associated_in_trait
                                  "p3_air::air::AirBuilder"
                                  []
                                  []
                                  AB
                                  "Expr") :=
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ],
                                          α0
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let x :=
                                                M.copy (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr"
                                                    ],
                                                  γ
                                                |) in
                                              M.call_closure (|
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                M.get_trait_method (|
                                                  "core::ops::arith::Mul",
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr",
                                                  [],
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr"
                                                  ],
                                                  "mul",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr",
                                                    M.get_trait_method (|
                                                      "core::ops::arith::Sub",
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr"
                                                      ],
                                                      "sub",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr",
                                                        M.get_trait_method (|
                                                          "core::clone::Clone",
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr",
                                                          [],
                                                          [],
                                                          "clone",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (| M.read (| x |) |)
                                                          |)
                                                        ]
                                                      |);
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_field::field::FieldAlgebra::ONE",
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.call_closure (|
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr",
                                                    M.get_trait_method (|
                                                      "core::ops::arith::Sub",
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr"
                                                      ],
                                                      "sub",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr",
                                                        M.get_trait_method (|
                                                          "core::clone::Clone",
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr",
                                                          [],
                                                          [],
                                                          "clone",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (| M.read (| x |) |)
                                                          |)
                                                        ]
                                                      |);
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_field::field::FieldAlgebra::TWO",
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr"
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                ]
                                              |)))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end)) in
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_trait_method (|
                                "p3_air::air::AirBuilder",
                                AB,
                                [],
                                [],
                                "assert_bool",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.read (| builder |) |)
                                |);
                                M.read (| is_valid |)
                              ]
                            |) in
                          let~ sum :
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" :=
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::slice::iter::Iter")
                                  []
                                  [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var"
                                  ],
                                [],
                                [],
                                "fold",
                                [],
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                                  Ty.function
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr";
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ]
                                    ]
                                    (Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr")
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Var"
                                    ],
                                  M.get_associated_function (|
                                    Ty.apply
                                      (Ty.path "slice")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Var"
                                      ],
                                    "iter",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "slice")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                        ],
                                      M.pointer_coercion
                                        M.PointerCoercion.Unsize
                                        (Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "array")
                                              [ Value.Integer IntegerKind.Usize 4 ]
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Var"
                                              ]
                                          ])
                                        (Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "slice")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Var"
                                              ]
                                          ]),
                                      [ M.borrow (| Pointer.Kind.Ref, flags |) ]
                                    |)
                                  ]
                                |);
                                M.read (|
                                  get_constant (|
                                    "p3_field::field::FieldAlgebra::ZERO",
                                    Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                  |)
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0; α1 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            M.alloc (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              α0
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let acc :=
                                                    M.copy (|
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      γ
                                                    |) in
                                                  M.match_operator (|
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr",
                                                    M.alloc (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Var"
                                                        ],
                                                      α1
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ := M.deref (| M.read (| γ |) |) in
                                                          let flag :=
                                                            M.copy (|
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var",
                                                              γ
                                                            |) in
                                                          M.read (|
                                                            let~ _ : Ty.tuple [] :=
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_trait_method (|
                                                                  "p3_air::air::AirBuilder",
                                                                  AB,
                                                                  [],
                                                                  [],
                                                                  "assert_zero",
                                                                  [],
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Expr"
                                                                  ]
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.deref (|
                                                                      M.read (| builder |)
                                                                    |)
                                                                  |);
                                                                  M.call_closure (|
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Expr",
                                                                    M.get_trait_method (|
                                                                      "core::ops::arith::Mul",
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Var",
                                                                      [],
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr"
                                                                      ],
                                                                      "mul",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.read (| flag |);
                                                                      M.call_closure (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.get_trait_method (|
                                                                          "core::ops::function::Fn",
                                                                          Ty.function
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr"
                                                                                ]
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr"),
                                                                          [],
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"
                                                                                  ]
                                                                              ]
                                                                          ],
                                                                          "call",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            get_expr_12
                                                                          |);
                                                                          Value.Tuple
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.alloc (|
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::convert::Into",
                                                                                          Ty.associated_in_trait
                                                                                            "p3_air::air::AirBuilder"
                                                                                            []
                                                                                            []
                                                                                            AB
                                                                                            "Var",
                                                                                          [],
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"
                                                                                          ],
                                                                                          "into",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            flag
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |) in
                                                            M.alloc (|
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Expr",
                                                              M.call_closure (|
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr",
                                                                M.get_trait_method (|
                                                                  "core::ops::arith::Add",
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Expr",
                                                                  [],
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var"
                                                                  ],
                                                                  "add",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.read (| acc |);
                                                                  M.read (| flag |)
                                                                ]
                                                              |)
                                                            |)
                                                          |)))
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_trait_method (|
                                "p3_air::air::AirBuilder",
                                AB,
                                [],
                                [],
                                "assert_zero",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.read (| builder |) |)
                                |);
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Mul",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "mul",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::clone::Clone",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [],
                                        "clone",
                                        [],
                                        []
                                      |),
                                      [ M.borrow (| Pointer.Kind.Ref, sum |) ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::function::Fn",
                                        Ty.function
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              ]
                                          ]
                                          (Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"),
                                        [],
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr"
                                                ]
                                            ]
                                        ],
                                        "call",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (| Pointer.Kind.Ref, get_expr_12 |);
                                        Value.Tuple
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.borrow (| Pointer.Kind.Ref, sum |) |)
                                            |)
                                          ]
                                      ]
                                    |)
                                  ]
                                |)
                              ]
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_trait_method (|
                                "p3_air::air::AirBuilder",
                                Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                [],
                                [],
                                "assert_zero",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.alloc (|
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "p3_air::air::FilteredAirBuilder")
                                        []
                                        [ AB ],
                                      M.get_trait_method (|
                                        "p3_air::air::AirBuilder",
                                        AB,
                                        [],
                                        [],
                                        "when",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ]
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.MutRef,
                                          M.deref (| M.read (| builder |) |)
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::function::Fn",
                                            Ty.function
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr"
                                                  ]
                                              ]
                                              (Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"),
                                            [],
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr"
                                                    ]
                                                ]
                                            ],
                                            "call",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (| Pointer.Kind.Ref, get_expr_12 |);
                                            Value.Tuple
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.borrow (| Pointer.Kind.Ref, sum |) |)
                                                |)
                                              ]
                                          ]
                                        |)
                                      ]
                                    |)
                                  |)
                                |);
                                M.read (| is_valid |)
                              ]
                            |) in
                          let~ inv_2 :
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "F" :=
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "F",
                              M.get_trait_method (|
                                "p3_field::field::Field",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "F",
                                [],
                                [],
                                "inverse",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.alloc (|
                                    Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "F",
                                    M.call_closure (|
                                      Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "F",
                                      M.get_trait_method (|
                                        "p3_field::field::FieldAlgebra",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "F",
                                        [],
                                        [],
                                        "from_canonical_u32",
                                        [],
                                        []
                                      |),
                                      [ Value.Integer IntegerKind.U32 2 ]
                                    |)
                                  |)
                                |)
                              ]
                            |) in
                          let~ opcode_flags :
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                                  Ty.path "alloc::alloc::Global"
                                ] :=
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr";
                                    Ty.path "alloc::alloc::Global"
                                  ],
                                "new",
                                [],
                                []
                              |),
                              []
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.read (|
                              M.use
                                (M.alloc (|
                                  Ty.tuple [],
                                  M.match_operator (|
                                    Ty.tuple [],
                                    M.alloc (|
                                      Ty.apply
                                        (Ty.path "core::array::iter::IntoIter")
                                        [ Value.Integer IntegerKind.Usize 4 ]
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::array::iter::IntoIter")
                                          [ Value.Integer IntegerKind.Usize 4 ]
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var"
                                          ],
                                        M.get_trait_method (|
                                          "core::iter::traits::collect::IntoIterator",
                                          Ty.apply
                                            (Ty.path "array")
                                            [ Value.Integer IntegerKind.Usize 4 ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ],
                                          [],
                                          [],
                                          "into_iter",
                                          [],
                                          []
                                        |),
                                        [ M.read (| flags |) ]
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let iter :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "core::array::iter::IntoIter")
                                                [ Value.Integer IntegerKind.Usize 4 ]
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                              γ
                                            |) in
                                          M.read (|
                                            M.loop (|
                                              Ty.tuple [],
                                              ltac:(M.monadic
                                                (let~ _ : Ty.tuple [] :=
                                                  M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (|
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Var"
                                                        ],
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_air::air::AirBuilder"
                                                              []
                                                              []
                                                              AB
                                                              "Var"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::array::iter::IntoIter")
                                                            [ Value.Integer IntegerKind.Usize 4 ]
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var"
                                                            ],
                                                          [],
                                                          [],
                                                          "next",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                iter
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let _ :=
                                                            M.is_struct_tuple (|
                                                              γ,
                                                              "core::option::Option::None"
                                                            |) in
                                                          M.never_to_any (|
                                                            M.read (| M.break (||) |)
                                                          |)));
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ0_0 :=
                                                            M.SubPointer.get_struct_tuple_field (|
                                                              γ,
                                                              "core::option::Option::Some",
                                                              0
                                                            |) in
                                                          let flag :=
                                                            M.copy (|
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var",
                                                              γ0_0
                                                            |) in
                                                          M.read (|
                                                            let~ _ : Ty.tuple [] :=
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  "push",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    opcode_flags
                                                                  |);
                                                                  M.call_closure (|
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Expr",
                                                                    M.get_trait_method (|
                                                                      "core::ops::arith::Mul",
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr",
                                                                      [],
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "F"
                                                                      ],
                                                                      "mul",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.get_trait_method (|
                                                                          "core::ops::arith::Mul",
                                                                          Ty.associated_in_trait
                                                                            "p3_air::air::AirBuilder"
                                                                            []
                                                                            []
                                                                            AB
                                                                            "Var",
                                                                          [],
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr"
                                                                          ],
                                                                          "mul",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.read (| flag |);
                                                                          M.call_closure (|
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr",
                                                                            M.get_trait_method (|
                                                                              "core::ops::arith::Sub",
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Var",
                                                                              [],
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "F"
                                                                              ],
                                                                              "sub",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (| flag |);
                                                                              M.read (|
                                                                                get_constant (|
                                                                                  "p3_field::field::FieldAlgebra::ONE",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "F"
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |);
                                                                      M.read (| inv_2 |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |) in
                                                            M.alloc (|
                                                              Ty.tuple [],
                                                              Value.Tuple []
                                                            |)
                                                          |)))
                                                    ]
                                                  |) in
                                                M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                            |)
                                          |)))
                                    ]
                                  |)
                                |))
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.read (|
                              M.use
                                (M.alloc (|
                                  Ty.tuple [],
                                  M.match_operator (|
                                    Ty.tuple [],
                                    M.alloc (|
                                      Ty.apply
                                        (Ty.path "core::array::iter::IntoIter")
                                        [ Value.Integer IntegerKind.Usize 4 ]
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ],
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::array::iter::IntoIter")
                                          [ Value.Integer IntegerKind.Usize 4 ]
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Var"
                                          ],
                                        M.get_trait_method (|
                                          "core::iter::traits::collect::IntoIterator",
                                          Ty.apply
                                            (Ty.path "array")
                                            [ Value.Integer IntegerKind.Usize 4 ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ],
                                          [],
                                          [],
                                          "into_iter",
                                          [],
                                          []
                                        |),
                                        [ M.read (| flags |) ]
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let iter :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "core::array::iter::IntoIter")
                                                [ Value.Integer IntegerKind.Usize 4 ]
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                              γ
                                            |) in
                                          M.read (|
                                            M.loop (|
                                              Ty.tuple [],
                                              ltac:(M.monadic
                                                (let~ _ : Ty.tuple [] :=
                                                  M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (|
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Var"
                                                        ],
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_air::air::AirBuilder"
                                                              []
                                                              []
                                                              AB
                                                              "Var"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::array::iter::IntoIter")
                                                            [ Value.Integer IntegerKind.Usize 4 ]
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var"
                                                            ],
                                                          [],
                                                          [],
                                                          "next",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                iter
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let _ :=
                                                            M.is_struct_tuple (|
                                                              γ,
                                                              "core::option::Option::None"
                                                            |) in
                                                          M.never_to_any (|
                                                            M.read (| M.break (||) |)
                                                          |)));
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ0_0 :=
                                                            M.SubPointer.get_struct_tuple_field (|
                                                              γ,
                                                              "core::option::Option::Some",
                                                              0
                                                            |) in
                                                          let flag :=
                                                            M.copy (|
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var",
                                                              γ0_0
                                                            |) in
                                                          M.read (|
                                                            let~ _ : Ty.tuple [] :=
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  "push",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    opcode_flags
                                                                  |);
                                                                  M.call_closure (|
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Expr",
                                                                    M.get_trait_method (|
                                                                      "core::ops::arith::Mul",
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr",
                                                                      [],
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "F"
                                                                      ],
                                                                      "mul",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.get_trait_method (|
                                                                          "core::ops::arith::Mul",
                                                                          Ty.associated_in_trait
                                                                            "p3_air::air::AirBuilder"
                                                                            []
                                                                            []
                                                                            AB
                                                                            "Var",
                                                                          [],
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr"
                                                                          ],
                                                                          "mul",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.read (| flag |);
                                                                          M.call_closure (|
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr",
                                                                            M.get_trait_method (|
                                                                              "core::ops::arith::Sub",
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Expr",
                                                                              [],
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "F"
                                                                              ],
                                                                              "sub",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::clone::Clone",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  [],
                                                                                  [],
                                                                                  "clone",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    sum
                                                                                  |)
                                                                                ]
                                                                              |);
                                                                              M.read (|
                                                                                get_constant (|
                                                                                  "p3_field::field::FieldAlgebra::TWO",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "F"
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |);
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_field::field::FieldAlgebra::NEG_ONE",
                                                                          Ty.associated_in_trait
                                                                            "p3_air::air::AirBuilder"
                                                                            []
                                                                            []
                                                                            AB
                                                                            "F"
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |) in
                                                            M.alloc (|
                                                              Ty.tuple [],
                                                              Value.Tuple []
                                                            |)
                                                          |)))
                                                    ]
                                                  |) in
                                                M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                            |)
                                          |)))
                                    ]
                                  |)
                                |))
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ],
                                [],
                                [],
                                "for_each",
                                [],
                                [ Ty.function [ Ty.path "usize" ] (Ty.tuple []) ]
                              |),
                              [
                                Value.mkStructRecord
                                  "core::ops::range::Range"
                                  []
                                  [ Ty.path "usize" ]
                                  [
                                    ("start", Value.Integer IntegerKind.Usize 0);
                                    ("end_", Value.Integer IntegerKind.Usize 4)
                                  ];
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.tuple [],
                                            M.alloc (| Ty.path "usize", α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let i := M.copy (| Ty.path "usize", γ |) in
                                                  M.read (|
                                                    let~ _ : Ty.tuple [] :=
                                                      M.call_closure (|
                                                        Ty.tuple [],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::ops::range::Range")
                                                            []
                                                            [ Ty.path "usize" ],
                                                          [],
                                                          [],
                                                          "for_each",
                                                          [],
                                                          [
                                                            Ty.function
                                                              [ Ty.path "usize" ]
                                                              (Ty.tuple [])
                                                          ]
                                                        |),
                                                        [
                                                          Value.mkStructRecord
                                                            "core::ops::range::Range"
                                                            []
                                                            [ Ty.path "usize" ]
                                                            [
                                                              ("start",
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  BinOp.Wrap.add,
                                                                  [
                                                                    M.read (| i |);
                                                                    Value.Integer
                                                                      IntegerKind.Usize
                                                                      1
                                                                  ]
                                                                |));
                                                              ("end_",
                                                                Value.Integer IntegerKind.Usize 4)
                                                            ];
                                                          M.closure
                                                            (fun γ =>
                                                              ltac:(M.monadic
                                                                match γ with
                                                                | [ α0 ] =>
                                                                  ltac:(M.monadic
                                                                    (M.match_operator (|
                                                                      Ty.tuple [],
                                                                      M.alloc (|
                                                                        Ty.path "usize",
                                                                        α0
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let j :=
                                                                              M.copy (|
                                                                                Ty.path "usize",
                                                                                γ
                                                                              |) in
                                                                            M.call_closure (|
                                                                              Ty.tuple [],
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                "push",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  opcode_flags
                                                                                |);
                                                                                M.call_closure (|
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::arith::Mul",
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Var",
                                                                                    [],
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Var"
                                                                                    ],
                                                                                    "mul",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.SubPointer.get_array_field (|
                                                                                        flags,
                                                                                        M.read (|
                                                                                          i
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.read (|
                                                                                      M.SubPointer.get_array_field (|
                                                                                        flags,
                                                                                        M.read (|
                                                                                          j
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)))
                                                                      ]
                                                                    |)))
                                                                | _ =>
                                                                  M.impossible
                                                                    "wrong number of arguments"
                                                                end))
                                                        ]
                                                      |) in
                                                    M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |) in
                          let~ opcode_when :
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.path
                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                        ]
                                    ]
                                ]
                                (Ty.associated_in_trait
                                  "p3_air::air::AirBuilder"
                                  []
                                  []
                                  AB
                                  "Expr") :=
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "slice")
                                                []
                                                [
                                                  Ty.path
                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                ]
                                            ],
                                          α0
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let idxs :=
                                                M.copy (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ],
                                                  γ
                                                |) in
                                              M.call_closure (|
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ],
                                                  [],
                                                  [],
                                                  "fold",
                                                  [],
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr";
                                                    Ty.function
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr";
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr")
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ],
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (| M.read (| idxs |) |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.read (|
                                                    get_constant (|
                                                      "p3_field::field::FieldAlgebra::ZERO",
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr"
                                                    |)
                                                  |);
                                                  M.closure
                                                    (fun γ =>
                                                      ltac:(M.monadic
                                                        match γ with
                                                        | [ α0; α1 ] =>
                                                          ltac:(M.monadic
                                                            (M.match_operator (|
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Expr",
                                                              M.alloc (|
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr",
                                                                α0
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let acc :=
                                                                      M.copy (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        γ
                                                                      |) in
                                                                    M.match_operator (|
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr",
                                                                      M.alloc (|
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                          ],
                                                                        α1
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ :=
                                                                              M.deref (|
                                                                                M.read (| γ |)
                                                                              |) in
                                                                            let idx :=
                                                                              M.copy (|
                                                                                Ty.path
                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode",
                                                                                γ
                                                                              |) in
                                                                            M.call_closure (|
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Expr",
                                                                              M.get_trait_method (|
                                                                                "core::ops::arith::Add",
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                [],
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr"
                                                                                ],
                                                                                "add",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (| acc |);
                                                                                M.call_closure (|
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  M.get_trait_method (|
                                                                                    "core::clone::Clone",
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    [],
                                                                                    [],
                                                                                    "clone",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_air::air::AirBuilder"
                                                                                                []
                                                                                                []
                                                                                                AB
                                                                                                "Expr"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::index::Index",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize"
                                                                                            ],
                                                                                            "index",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              opcode_flags
                                                                                            |);
                                                                                            M.cast
                                                                                              (Ty.path
                                                                                                "usize")
                                                                                              (M.read (|
                                                                                                idx
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)))
                                                                      ]
                                                                    |)))
                                                              ]
                                                            |)))
                                                        | _ =>
                                                          M.impossible "wrong number of arguments"
                                                        end))
                                                ]
                                              |)))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end)) in
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_trait_method (|
                                "p3_air::air::AirBuilder",
                                AB,
                                [],
                                [],
                                "assert_eq",
                                [],
                                [
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var";
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.read (| builder |) |)
                                |);
                                M.read (| is_load |);
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::function::Fn",
                                    Ty.function
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "slice")
                                              []
                                              [
                                                Ty.path
                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                              ]
                                          ]
                                      ]
                                      (Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"),
                                    [],
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "slice")
                                                []
                                                [
                                                  Ty.path
                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                ]
                                            ]
                                        ]
                                    ],
                                    "call",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                    Value.Tuple
                                      [
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "slice")
                                                []
                                                [
                                                  Ty.path
                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                ]
                                            ],
                                          M.pointer_coercion
                                            M.PointerCoercion.Unsize
                                            (Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "array")
                                                  [ Value.Integer IntegerKind.Usize 7 ]
                                                  [
                                                    Ty.path
                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                  ]
                                              ])
                                            (Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "slice")
                                                  []
                                                  [
                                                    Ty.path
                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                  ]
                                              ]),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (|
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.alloc (|
                                                    Ty.apply
                                                      (Ty.path "array")
                                                      [ Value.Integer IntegerKind.Usize 7 ]
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ],
                                                    Value.Array
                                                      [
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0"
                                                          []
                                                          []
                                                          [];
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu0"
                                                          []
                                                          []
                                                          [];
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2"
                                                          []
                                                          []
                                                          [];
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu0"
                                                          []
                                                          []
                                                          [];
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu1"
                                                          []
                                                          []
                                                          [];
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu2"
                                                          []
                                                          []
                                                          [];
                                                        Value.StructTuple
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu3"
                                                          []
                                                          []
                                                          []
                                                      ]
                                                  |)
                                                |)
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                  ]
                                |)
                              ]
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_trait_method (|
                                "p3_air::air::AirBuilder",
                                Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                [],
                                [],
                                "assert_one",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Var" ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.alloc (|
                                    Ty.apply (Ty.path "p3_air::air::FilteredAirBuilder") [] [ AB ],
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "p3_air::air::FilteredAirBuilder")
                                        []
                                        [ AB ],
                                      M.get_trait_method (|
                                        "p3_air::air::AirBuilder",
                                        AB,
                                        [],
                                        [],
                                        "when",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Var"
                                        ]
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.MutRef,
                                          M.deref (| M.read (| builder |) |)
                                        |);
                                        M.read (| is_load |)
                                      ]
                                    |)
                                  |)
                                |);
                                M.read (| is_valid |)
                              ]
                            |) in
                          let~ _ : Ty.tuple [] :=
                            M.read (|
                              M.use
                                (M.alloc (|
                                  Ty.tuple [],
                                  M.match_operator (|
                                    Ty.tuple [],
                                    M.alloc (|
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ]
                                        ],
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "core::slice::iter::Iter")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Var"
                                              ]
                                          ],
                                        M.get_trait_method (|
                                          "core::iter::traits::collect::IntoIterator",
                                          Ty.apply
                                            (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::slice::iter::Iter")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ]
                                            ],
                                          [],
                                          [],
                                          "into_iter",
                                          [],
                                          []
                                        |),
                                        [
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "core::slice::iter::Iter")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Var"
                                                  ]
                                              ],
                                            M.get_trait_method (|
                                              "core::iter::traits::iterator::Iterator",
                                              Ty.apply
                                                (Ty.path "core::slice::iter::Iter")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                              [],
                                              [],
                                              "enumerate",
                                              [],
                                              []
                                            |),
                                            [
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::slice::iter::Iter")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Var"
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Var"
                                                    ],
                                                  "iter",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_air::air::AirBuilder"
                                                              []
                                                              []
                                                              AB
                                                              "Var"
                                                          ]
                                                      ],
                                                    M.pointer_coercion
                                                      M.PointerCoercion.Unsize
                                                      (Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "array")
                                                            [ NUM_CELLS ]
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var"
                                                            ]
                                                        ])
                                                      (Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_air::air::AirBuilder"
                                                                []
                                                                []
                                                                AB
                                                                "Var"
                                                            ]
                                                        ]),
                                                    [ M.borrow (| Pointer.Kind.Ref, write_data |) ]
                                                  |)
                                                ]
                                              |)
                                            ]
                                          |)
                                        ]
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let iter :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path
                                                  "core::iter::adapters::enumerate::Enumerate")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Var"
                                                    ]
                                                ],
                                              γ
                                            |) in
                                          M.read (|
                                            M.loop (|
                                              Ty.tuple [],
                                              ltac:(M.monadic
                                                (let~ _ : Ty.tuple [] :=
                                                  M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (|
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.path "usize";
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Var"
                                                                ]
                                                            ]
                                                        ],
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.path "usize";
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::enumerate::Enumerate")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Var"
                                                                ]
                                                            ],
                                                          [],
                                                          [],
                                                          "next",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                iter
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let _ :=
                                                            M.is_struct_tuple (|
                                                              γ,
                                                              "core::option::Option::None"
                                                            |) in
                                                          M.never_to_any (|
                                                            M.read (| M.break (||) |)
                                                          |)));
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ0_0 :=
                                                            M.SubPointer.get_struct_tuple_field (|
                                                              γ,
                                                              "core::option::Option::Some",
                                                              0
                                                            |) in
                                                          let γ1_0 :=
                                                            M.SubPointer.get_tuple_field (|
                                                              γ0_0,
                                                              0
                                                            |) in
                                                          let γ1_1 :=
                                                            M.SubPointer.get_tuple_field (|
                                                              γ0_0,
                                                              1
                                                            |) in
                                                          let i :=
                                                            M.copy (| Ty.path "usize", γ1_0 |) in
                                                          let cell :=
                                                            M.copy (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Var"
                                                                ],
                                                              γ1_1
                                                            |) in
                                                          M.read (|
                                                            let~ expected_load_val :
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr" :=
                                                              M.match_operator (|
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr",
                                                                M.alloc (|
                                                                  Ty.tuple [],
                                                                  Value.Tuple []
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ :=
                                                                        M.use
                                                                          (M.alloc (|
                                                                            Ty.path "bool",
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              BinOp.eq,
                                                                              [
                                                                                M.read (| i |);
                                                                                Value.Integer
                                                                                  IntegerKind.Usize
                                                                                  0
                                                                              ]
                                                                            |)
                                                                          |)) in
                                                                      let _ :=
                                                                        is_constant_or_break_match (|
                                                                          M.read (| γ |),
                                                                          Value.Bool true
                                                                        |) in
                                                                      M.call_closure (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.get_trait_method (|
                                                                          "core::ops::arith::Add",
                                                                          Ty.associated_in_trait
                                                                            "p3_air::air::AirBuilder"
                                                                            []
                                                                            []
                                                                            AB
                                                                            "Expr",
                                                                          [],
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr"
                                                                          ],
                                                                          "add",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr",
                                                                            M.get_trait_method (|
                                                                              "core::ops::arith::Add",
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Expr",
                                                                              [],
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr"
                                                                              ],
                                                                              "add",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::arith::Add",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"
                                                                                  ],
                                                                                  "add",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::arith::Mul",
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      [],
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Var"
                                                                                      ],
                                                                                      "mul",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::function::Fn",
                                                                                          Ty.function
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"),
                                                                                          [],
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                          "call",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            opcode_when
                                                                                          |);
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.pointer_coercion
                                                                                                  M.PointerCoercion.Unsize
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            3
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ])
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.alloc (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                3
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ],
                                                                                                          Value.Array
                                                                                                            [
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0"
                                                                                                                []
                                                                                                                []
                                                                                                                [];
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu0"
                                                                                                                []
                                                                                                                []
                                                                                                                [];
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu0"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                        ]
                                                                                      |);
                                                                                      M.read (|
                                                                                        M.SubPointer.get_array_field (|
                                                                                          read_data,
                                                                                          Value.Integer
                                                                                            IntegerKind.Usize
                                                                                            0
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |);
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::arith::Mul",
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      [],
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Var"
                                                                                      ],
                                                                                      "mul",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::function::Fn",
                                                                                          Ty.function
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"),
                                                                                          [],
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                          "call",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            opcode_when
                                                                                          |);
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.pointer_coercion
                                                                                                  M.PointerCoercion.Unsize
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            1
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ])
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.alloc (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                1
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ],
                                                                                                          Value.Array
                                                                                                            [
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu1"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                        ]
                                                                                      |);
                                                                                      M.read (|
                                                                                        M.SubPointer.get_array_field (|
                                                                                          read_data,
                                                                                          Value.Integer
                                                                                            IntegerKind.Usize
                                                                                            1
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |);
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::arith::Mul",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Var"
                                                                                  ],
                                                                                  "mul",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::function::Fn",
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr"),
                                                                                      [],
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                      "call",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        opcode_when
                                                                                      |);
                                                                                      Value.Tuple
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                  ]
                                                                                              ],
                                                                                            M.pointer_coercion
                                                                                              M.PointerCoercion.Unsize
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        2
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ])
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            2
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ],
                                                                                                      Value.Array
                                                                                                        [
                                                                                                          Value.StructTuple
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2"
                                                                                                            []
                                                                                                            []
                                                                                                            [];
                                                                                                          Value.StructTuple
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu2"
                                                                                                            []
                                                                                                            []
                                                                                                            []
                                                                                                        ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                    ]
                                                                                  |);
                                                                                  M.read (|
                                                                                    M.SubPointer.get_array_field (|
                                                                                      read_data,
                                                                                      Value.Integer
                                                                                        IntegerKind.Usize
                                                                                        2
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |);
                                                                          M.call_closure (|
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr",
                                                                            M.get_trait_method (|
                                                                              "core::ops::arith::Mul",
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Expr",
                                                                              [],
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Var"
                                                                              ],
                                                                              "mul",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::function::Fn",
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"),
                                                                                  [],
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                  "call",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    opcode_when
                                                                                  |);
                                                                                  Value.Tuple
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                              ]
                                                                                          ],
                                                                                        M.pointer_coercion
                                                                                          M.PointerCoercion.Unsize
                                                                                          (Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "array")
                                                                                                [
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    1
                                                                                                ]
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ])
                                                                                          (Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ]),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu3"
                                                                                                        []
                                                                                                        []
                                                                                                        []
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                ]
                                                                              |);
                                                                              M.read (|
                                                                                M.SubPointer.get_array_field (|
                                                                                  read_data,
                                                                                  Value.Integer
                                                                                    IntegerKind.Usize
                                                                                    3
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (M.match_operator (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.alloc (|
                                                                          Ty.tuple [],
                                                                          Value.Tuple []
                                                                        |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ :=
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    Ty.path "bool",
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "bool",
                                                                                      BinOp.lt,
                                                                                      [
                                                                                        M.read (|
                                                                                          i
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "usize",
                                                                                          BinOp.Wrap.div,
                                                                                          [
                                                                                            NUM_CELLS;
                                                                                            Value.Integer
                                                                                              IntegerKind.Usize
                                                                                              2
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)) in
                                                                              let _ :=
                                                                                is_constant_or_break_match (|
                                                                                  M.read (| γ |),
                                                                                  Value.Bool true
                                                                                |) in
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::arith::Add",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"
                                                                                  ],
                                                                                  "add",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::arith::Mul",
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      [],
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Var"
                                                                                      ],
                                                                                      "mul",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::function::Fn",
                                                                                          Ty.function
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"),
                                                                                          [],
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                          "call",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            opcode_when
                                                                                          |);
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.pointer_coercion
                                                                                                  M.PointerCoercion.Unsize
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            2
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ])
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.alloc (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                2
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ],
                                                                                                          Value.Array
                                                                                                            [
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0"
                                                                                                                []
                                                                                                                []
                                                                                                                [];
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu0"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                        ]
                                                                                      |);
                                                                                      M.read (|
                                                                                        M.SubPointer.get_array_field (|
                                                                                          read_data,
                                                                                          M.read (|
                                                                                            i
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |);
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::arith::Mul",
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      [],
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Var"
                                                                                      ],
                                                                                      "mul",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::function::Fn",
                                                                                          Ty.function
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"),
                                                                                          [],
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                          "call",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            opcode_when
                                                                                          |);
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.pointer_coercion
                                                                                                  M.PointerCoercion.Unsize
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            1
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ])
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.alloc (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                1
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ],
                                                                                                          Value.Array
                                                                                                            [
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                        ]
                                                                                      |);
                                                                                      M.read (|
                                                                                        M.SubPointer.get_array_field (|
                                                                                          read_data,
                                                                                          M.call_closure (|
                                                                                            Ty.path
                                                                                              "usize",
                                                                                            BinOp.Wrap.add,
                                                                                            [
                                                                                              M.read (|
                                                                                                i
                                                                                              |);
                                                                                              Value.Integer
                                                                                                IntegerKind.Usize
                                                                                                2
                                                                                            ]
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)));
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::arith::Mul",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Var"
                                                                                  ],
                                                                                  "mul",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::function::Fn",
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr"),
                                                                                      [],
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                      "call",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        opcode_when
                                                                                      |);
                                                                                      Value.Tuple
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                  ]
                                                                                              ],
                                                                                            M.pointer_coercion
                                                                                              M.PointerCoercion.Unsize
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ])
                                                                                              (Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            1
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ],
                                                                                                      Value.Array
                                                                                                        [
                                                                                                          Value.StructTuple
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0"
                                                                                                            []
                                                                                                            []
                                                                                                            []
                                                                                                        ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                    ]
                                                                                  |);
                                                                                  M.read (|
                                                                                    M.SubPointer.get_array_field (|
                                                                                      read_data,
                                                                                      M.read (| i |)
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |)))
                                                                        ]
                                                                      |)))
                                                                ]
                                                              |) in
                                                            let~ expected_store_val :
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr" :=
                                                              M.match_operator (|
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr",
                                                                M.alloc (|
                                                                  Ty.tuple [],
                                                                  Value.Tuple []
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ :=
                                                                        M.use
                                                                          (M.alloc (|
                                                                            Ty.path "bool",
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              BinOp.eq,
                                                                              [
                                                                                M.read (| i |);
                                                                                Value.Integer
                                                                                  IntegerKind.Usize
                                                                                  0
                                                                              ]
                                                                            |)
                                                                          |)) in
                                                                      let _ :=
                                                                        is_constant_or_break_match (|
                                                                          M.read (| γ |),
                                                                          Value.Bool true
                                                                        |) in
                                                                      M.call_closure (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.get_trait_method (|
                                                                          "core::ops::arith::Add",
                                                                          Ty.associated_in_trait
                                                                            "p3_air::air::AirBuilder"
                                                                            []
                                                                            []
                                                                            AB
                                                                            "Expr",
                                                                          [],
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr"
                                                                          ],
                                                                          "add",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr",
                                                                            M.get_trait_method (|
                                                                              "core::ops::arith::Mul",
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Expr",
                                                                              [],
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Var"
                                                                              ],
                                                                              "mul",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::function::Fn",
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"),
                                                                                  [],
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                  "call",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    opcode_when
                                                                                  |);
                                                                                  Value.Tuple
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                              ]
                                                                                          ],
                                                                                        M.pointer_coercion
                                                                                          M.PointerCoercion.Unsize
                                                                                          (Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "array")
                                                                                                [
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    3
                                                                                                ]
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ])
                                                                                          (Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ]),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        3
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                                                                                                        []
                                                                                                        []
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                                                                                                        []
                                                                                                        []
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                                                                                                        []
                                                                                                        []
                                                                                                        []
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                ]
                                                                              |);
                                                                              M.read (|
                                                                                M.SubPointer.get_array_field (|
                                                                                  read_data,
                                                                                  M.read (| i |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |);
                                                                          M.call_closure (|
                                                                            Ty.associated_in_trait
                                                                              "p3_air::air::AirBuilder"
                                                                              []
                                                                              []
                                                                              AB
                                                                              "Expr",
                                                                            M.get_trait_method (|
                                                                              "core::ops::arith::Mul",
                                                                              Ty.associated_in_trait
                                                                                "p3_air::air::AirBuilder"
                                                                                []
                                                                                []
                                                                                AB
                                                                                "Expr",
                                                                              [],
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Var"
                                                                              ],
                                                                              "mul",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::function::Fn",
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"),
                                                                                  [],
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                  "call",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    opcode_when
                                                                                  |);
                                                                                  Value.Tuple
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                              ]
                                                                                          ],
                                                                                        M.pointer_coercion
                                                                                          M.PointerCoercion.Unsize
                                                                                          (Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "array")
                                                                                                [
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    4
                                                                                                ]
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ])
                                                                                          (Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                ]
                                                                                            ]),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        4
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                                                        []
                                                                                                        []
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                                                                        []
                                                                                                        []
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                                                                        []
                                                                                                        []
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                                                                        []
                                                                                                        []
                                                                                                        []
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                ]
                                                                              |);
                                                                              M.read (|
                                                                                M.SubPointer.get_array_field (|
                                                                                  prev_data,
                                                                                  M.read (| i |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (M.match_operator (|
                                                                        Ty.associated_in_trait
                                                                          "p3_air::air::AirBuilder"
                                                                          []
                                                                          []
                                                                          AB
                                                                          "Expr",
                                                                        M.alloc (|
                                                                          Ty.tuple [],
                                                                          Value.Tuple []
                                                                        |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ :=
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    Ty.path "bool",
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "bool",
                                                                                      BinOp.eq,
                                                                                      [
                                                                                        M.read (|
                                                                                          i
                                                                                        |);
                                                                                        Value.Integer
                                                                                          IntegerKind.Usize
                                                                                          1
                                                                                      ]
                                                                                    |)
                                                                                  |)) in
                                                                              let _ :=
                                                                                is_constant_or_break_match (|
                                                                                  M.read (| γ |),
                                                                                  Value.Bool true
                                                                                |) in
                                                                              M.call_closure (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.get_trait_method (|
                                                                                  "core::ops::arith::Add",
                                                                                  Ty.associated_in_trait
                                                                                    "p3_air::air::AirBuilder"
                                                                                    []
                                                                                    []
                                                                                    AB
                                                                                    "Expr",
                                                                                  [],
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr"
                                                                                  ],
                                                                                  "add",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::arith::Add",
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      [],
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr"
                                                                                      ],
                                                                                      "add",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::arith::Mul",
                                                                                          Ty.associated_in_trait
                                                                                            "p3_air::air::AirBuilder"
                                                                                            []
                                                                                            []
                                                                                            AB
                                                                                            "Expr",
                                                                                          [],
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Var"
                                                                                          ],
                                                                                          "mul",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr",
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::function::Fn",
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr"),
                                                                                              [],
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "slice")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                              "call",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                opcode_when
                                                                                              |);
                                                                                              Value.Tuple
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "slice")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                          ]
                                                                                                      ],
                                                                                                    M.pointer_coercion
                                                                                                      M.PointerCoercion.Unsize
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                1
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ]
                                                                                                        ])
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ]
                                                                                                        ]),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.deref (|
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "array")
                                                                                                                [
                                                                                                                  Value.Integer
                                                                                                                    IntegerKind.Usize
                                                                                                                    1
                                                                                                                ]
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                ],
                                                                                                              Value.Array
                                                                                                                [
                                                                                                                  Value.StructTuple
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    []
                                                                                                                ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            ]
                                                                                          |);
                                                                                          M.read (|
                                                                                            M.SubPointer.get_array_field (|
                                                                                              read_data,
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "usize",
                                                                                                BinOp.Wrap.sub,
                                                                                                [
                                                                                                  M.read (|
                                                                                                    i
                                                                                                  |);
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    1
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |);
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::arith::Mul",
                                                                                          Ty.associated_in_trait
                                                                                            "p3_air::air::AirBuilder"
                                                                                            []
                                                                                            []
                                                                                            AB
                                                                                            "Expr",
                                                                                          [],
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Var"
                                                                                          ],
                                                                                          "mul",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr",
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::function::Fn",
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr"),
                                                                                              [],
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "slice")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                              "call",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                opcode_when
                                                                                              |);
                                                                                              Value.Tuple
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "slice")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                          ]
                                                                                                      ],
                                                                                                    M.pointer_coercion
                                                                                                      M.PointerCoercion.Unsize
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                2
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ]
                                                                                                        ])
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ]
                                                                                                        ]),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.deref (|
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "array")
                                                                                                                [
                                                                                                                  Value.Integer
                                                                                                                    IntegerKind.Usize
                                                                                                                    2
                                                                                                                ]
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                ],
                                                                                                              Value.Array
                                                                                                                [
                                                                                                                  Value.StructTuple
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    [];
                                                                                                                  Value.StructTuple
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    []
                                                                                                                ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            ]
                                                                                          |);
                                                                                          M.read (|
                                                                                            M.SubPointer.get_array_field (|
                                                                                              read_data,
                                                                                              M.read (|
                                                                                                i
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |);
                                                                                  M.call_closure (|
                                                                                    Ty.associated_in_trait
                                                                                      "p3_air::air::AirBuilder"
                                                                                      []
                                                                                      []
                                                                                      AB
                                                                                      "Expr",
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::arith::Mul",
                                                                                      Ty.associated_in_trait
                                                                                        "p3_air::air::AirBuilder"
                                                                                        []
                                                                                        []
                                                                                        AB
                                                                                        "Expr",
                                                                                      [],
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Var"
                                                                                      ],
                                                                                      "mul",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::function::Fn",
                                                                                          Ty.function
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"),
                                                                                          [],
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                          "call",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            opcode_when
                                                                                          |);
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.pointer_coercion
                                                                                                  M.PointerCoercion.Unsize
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "array")
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            4
                                                                                                        ]
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ])
                                                                                                  (Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                        ]
                                                                                                    ]),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.alloc (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "array")
                                                                                                            [
                                                                                                              Value.Integer
                                                                                                                IntegerKind.Usize
                                                                                                                4
                                                                                                            ]
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ],
                                                                                                          Value.Array
                                                                                                            [
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                                                                []
                                                                                                                []
                                                                                                                [];
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                                                                                                                []
                                                                                                                []
                                                                                                                [];
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                                                                                []
                                                                                                                []
                                                                                                                [];
                                                                                                              Value.StructTuple
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                                                                                []
                                                                                                                []
                                                                                                                []
                                                                                                            ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                        ]
                                                                                      |);
                                                                                      M.read (|
                                                                                        M.SubPointer.get_array_field (|
                                                                                          prev_data,
                                                                                          M.read (|
                                                                                            i
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)));
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (M.match_operator (|
                                                                                Ty.associated_in_trait
                                                                                  "p3_air::air::AirBuilder"
                                                                                  []
                                                                                  []
                                                                                  AB
                                                                                  "Expr",
                                                                                M.alloc (|
                                                                                  Ty.tuple [],
                                                                                  Value.Tuple []
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ :=
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            Ty.path
                                                                                              "bool",
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "bool",
                                                                                              BinOp.eq,
                                                                                              [
                                                                                                M.read (|
                                                                                                  i
                                                                                                |);
                                                                                                Value.Integer
                                                                                                  IntegerKind.Usize
                                                                                                  2
                                                                                              ]
                                                                                            |)
                                                                                          |)) in
                                                                                      let _ :=
                                                                                        is_constant_or_break_match (|
                                                                                          M.read (|
                                                                                            γ
                                                                                          |),
                                                                                          Value.Bool
                                                                                            true
                                                                                        |) in
                                                                                      M.call_closure (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::arith::Add",
                                                                                          Ty.associated_in_trait
                                                                                            "p3_air::air::AirBuilder"
                                                                                            []
                                                                                            []
                                                                                            AB
                                                                                            "Expr",
                                                                                          [],
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr"
                                                                                          ],
                                                                                          "add",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr",
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::arith::Add",
                                                                                              Ty.associated_in_trait
                                                                                                "p3_air::air::AirBuilder"
                                                                                                []
                                                                                                []
                                                                                                AB
                                                                                                "Expr",
                                                                                              [],
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr"
                                                                                              ],
                                                                                              "add",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr",
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::arith::Mul",
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_air::air::AirBuilder"
                                                                                                    []
                                                                                                    []
                                                                                                    AB
                                                                                                    "Expr",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Var"
                                                                                                  ],
                                                                                                  "mul",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr",
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::function::Fn",
                                                                                                      Ty.function
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr"),
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ],
                                                                                                      "call",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        opcode_when
                                                                                                      |);
                                                                                                      Value.Tuple
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            M.pointer_coercion
                                                                                                              M.PointerCoercion.Unsize
                                                                                                              (Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "array")
                                                                                                                    [
                                                                                                                      Value.Integer
                                                                                                                        IntegerKind.Usize
                                                                                                                        2
                                                                                                                    ]
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ]
                                                                                                                ])
                                                                                                              (Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "slice")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ]
                                                                                                                ]),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.alloc (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "array")
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            IntegerKind.Usize
                                                                                                                            2
                                                                                                                        ]
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ],
                                                                                                                      Value.Array
                                                                                                                        [
                                                                                                                          Value.StructTuple
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            []
                                                                                                                        ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    M.SubPointer.get_array_field (|
                                                                                                      read_data,
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "usize",
                                                                                                        BinOp.Wrap.sub,
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            i
                                                                                                          |);
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            2
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |);
                                                                                              M.call_closure (|
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr",
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::arith::Mul",
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_air::air::AirBuilder"
                                                                                                    []
                                                                                                    []
                                                                                                    AB
                                                                                                    "Expr",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Var"
                                                                                                  ],
                                                                                                  "mul",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr",
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::function::Fn",
                                                                                                      Ty.function
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr"),
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ],
                                                                                                      "call",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        opcode_when
                                                                                                      |);
                                                                                                      Value.Tuple
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            M.pointer_coercion
                                                                                                              M.PointerCoercion.Unsize
                                                                                                              (Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "array")
                                                                                                                    [
                                                                                                                      Value.Integer
                                                                                                                        IntegerKind.Usize
                                                                                                                        1
                                                                                                                    ]
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ]
                                                                                                                ])
                                                                                                              (Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "slice")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ]
                                                                                                                ]),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.alloc (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "array")
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            IntegerKind.Usize
                                                                                                                            1
                                                                                                                        ]
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ],
                                                                                                                      Value.Array
                                                                                                                        [
                                                                                                                          Value.StructTuple
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            []
                                                                                                                        ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    M.SubPointer.get_array_field (|
                                                                                                      read_data,
                                                                                                      M.read (|
                                                                                                        i
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            Ty.associated_in_trait
                                                                                              "p3_air::air::AirBuilder"
                                                                                              []
                                                                                              []
                                                                                              AB
                                                                                              "Expr",
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::arith::Mul",
                                                                                              Ty.associated_in_trait
                                                                                                "p3_air::air::AirBuilder"
                                                                                                []
                                                                                                []
                                                                                                AB
                                                                                                "Expr",
                                                                                              [],
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Var"
                                                                                              ],
                                                                                              "mul",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr",
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::function::Fn",
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr"),
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "slice")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ],
                                                                                                  "call",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    opcode_when
                                                                                                  |);
                                                                                                  Value.Tuple
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "slice")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.pointer_coercion
                                                                                                          M.PointerCoercion.Unsize
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "array")
                                                                                                                [
                                                                                                                  Value.Integer
                                                                                                                    IntegerKind.Usize
                                                                                                                    4
                                                                                                                ]
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                ]
                                                                                                            ])
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                ]
                                                                                                            ]),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.alloc (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "array")
                                                                                                                    [
                                                                                                                      Value.Integer
                                                                                                                        IntegerKind.Usize
                                                                                                                        4
                                                                                                                    ]
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ],
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      Value.StructTuple
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        [];
                                                                                                                      Value.StructTuple
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        [];
                                                                                                                      Value.StructTuple
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        [];
                                                                                                                      Value.StructTuple
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        []
                                                                                                                    ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                ]
                                                                                              |);
                                                                                              M.read (|
                                                                                                M.SubPointer.get_array_field (|
                                                                                                  prev_data,
                                                                                                  M.read (|
                                                                                                    i
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (M.match_operator (|
                                                                                        Ty.associated_in_trait
                                                                                          "p3_air::air::AirBuilder"
                                                                                          []
                                                                                          []
                                                                                          AB
                                                                                          "Expr",
                                                                                        M.alloc (|
                                                                                          Ty.tuple
                                                                                            [],
                                                                                          Value.Tuple
                                                                                            []
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ :=
                                                                                                M.use
                                                                                                  (M.alloc (|
                                                                                                    Ty.path
                                                                                                      "bool",
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "bool",
                                                                                                      BinOp.eq,
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          i
                                                                                                        |);
                                                                                                        Value.Integer
                                                                                                          IntegerKind.Usize
                                                                                                          3
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)) in
                                                                                              let
                                                                                                    _ :=
                                                                                                is_constant_or_break_match (|
                                                                                                  M.read (|
                                                                                                    γ
                                                                                                  |),
                                                                                                  Value.Bool
                                                                                                    true
                                                                                                |) in
                                                                                              M.call_closure (|
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr",
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::arith::Add",
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_air::air::AirBuilder"
                                                                                                    []
                                                                                                    []
                                                                                                    AB
                                                                                                    "Expr",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr"
                                                                                                  ],
                                                                                                  "add",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr",
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::arith::Add",
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_air::air::AirBuilder"
                                                                                                        []
                                                                                                        []
                                                                                                        AB
                                                                                                        "Expr",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr"
                                                                                                      ],
                                                                                                      "add",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::arith::Add",
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_air::air::AirBuilder"
                                                                                                            []
                                                                                                            []
                                                                                                            AB
                                                                                                            "Expr",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr"
                                                                                                          ],
                                                                                                          "add",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr",
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::arith::Mul",
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_air::air::AirBuilder"
                                                                                                                []
                                                                                                                []
                                                                                                                AB
                                                                                                                "Expr",
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Var"
                                                                                                              ],
                                                                                                              "mul",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Expr",
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::function::Fn",
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_air::air::AirBuilder"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      AB
                                                                                                                      "Expr"),
                                                                                                                  [],
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                  "call",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    opcode_when
                                                                                                                  |);
                                                                                                                  Value.Tuple
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.pointer_coercion
                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    1
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ])
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "slice")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ]),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.alloc (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "array")
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        IntegerKind.Usize
                                                                                                                                        1
                                                                                                                                    ]
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                    ],
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                    ]
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                  read_data,
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.path
                                                                                                                      "usize",
                                                                                                                    BinOp.Wrap.sub,
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        i
                                                                                                                      |);
                                                                                                                      Value.Integer
                                                                                                                        IntegerKind.Usize
                                                                                                                        3
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |);
                                                                                                          M.call_closure (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr",
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::arith::Mul",
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_air::air::AirBuilder"
                                                                                                                []
                                                                                                                []
                                                                                                                AB
                                                                                                                "Expr",
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Var"
                                                                                                              ],
                                                                                                              "mul",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Expr",
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::function::Fn",
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_air::air::AirBuilder"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      AB
                                                                                                                      "Expr"),
                                                                                                                  [],
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                  "call",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    opcode_when
                                                                                                                  |);
                                                                                                                  Value.Tuple
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.pointer_coercion
                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    1
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ])
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "slice")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ]),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.alloc (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "array")
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        IntegerKind.Usize
                                                                                                                                        1
                                                                                                                                    ]
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                    ],
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                    ]
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                  read_data,
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.path
                                                                                                                      "usize",
                                                                                                                    BinOp.Wrap.sub,
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        i
                                                                                                                      |);
                                                                                                                      Value.Integer
                                                                                                                        IntegerKind.Usize
                                                                                                                        2
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::arith::Mul",
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_air::air::AirBuilder"
                                                                                                            []
                                                                                                            []
                                                                                                            AB
                                                                                                            "Expr",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Var"
                                                                                                          ],
                                                                                                          "mul",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr",
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "slice")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Expr"),
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "call",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                opcode_when
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    M.pointer_coercion
                                                                                                                      M.PointerCoercion.Unsize
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "array")
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                IntegerKind.Usize
                                                                                                                                1
                                                                                                                            ]
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ])
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ]),
                                                                                                                    [
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.deref (|
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.alloc (|
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    1
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ],
                                                                                                                              Value.Array
                                                                                                                                [
                                                                                                                                  Value.StructTuple
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                                                                                                                                    []
                                                                                                                                    []
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                            ]
                                                                                                          |);
                                                                                                          M.read (|
                                                                                                            M.SubPointer.get_array_field (|
                                                                                                              read_data,
                                                                                                              M.read (|
                                                                                                                i
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr",
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::arith::Mul",
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_air::air::AirBuilder"
                                                                                                        []
                                                                                                        []
                                                                                                        AB
                                                                                                        "Expr",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Var"
                                                                                                      ],
                                                                                                      "mul",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::function::Fn",
                                                                                                          Ty.function
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "slice")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                            (Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr"),
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                          "call",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            opcode_when
                                                                                                          |);
                                                                                                          Value.Tuple
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                M.pointer_coercion
                                                                                                                  M.PointerCoercion.Unsize
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "array")
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            IntegerKind.Usize
                                                                                                                            4
                                                                                                                        ]
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ]
                                                                                                                    ])
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "slice")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ]
                                                                                                                    ]),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.alloc (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "array")
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                IntegerKind.Usize
                                                                                                                                4
                                                                                                                            ]
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ],
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              Value.StructTuple
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                [];
                                                                                                                              Value.StructTuple
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                [];
                                                                                                                              Value.StructTuple
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                [];
                                                                                                                              Value.StructTuple
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                []
                                                                                                                            ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_array_field (|
                                                                                                          prev_data,
                                                                                                          M.read (|
                                                                                                            i
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)));
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (M.call_closure (|
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_air::air::AirBuilder"
                                                                                                  []
                                                                                                  []
                                                                                                  AB
                                                                                                  "Expr",
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::arith::Add",
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_air::air::AirBuilder"
                                                                                                    []
                                                                                                    []
                                                                                                    AB
                                                                                                    "Expr",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr"
                                                                                                  ],
                                                                                                  "add",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr",
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::arith::Add",
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_air::air::AirBuilder"
                                                                                                        []
                                                                                                        []
                                                                                                        AB
                                                                                                        "Expr",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr"
                                                                                                      ],
                                                                                                      "add",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::arith::Add",
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_air::air::AirBuilder"
                                                                                                            []
                                                                                                            []
                                                                                                            AB
                                                                                                            "Expr",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr"
                                                                                                          ],
                                                                                                          "add",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr",
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::arith::Mul",
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_air::air::AirBuilder"
                                                                                                                []
                                                                                                                []
                                                                                                                AB
                                                                                                                "Expr",
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Var"
                                                                                                              ],
                                                                                                              "mul",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Expr",
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::function::Fn",
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_air::air::AirBuilder"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      AB
                                                                                                                      "Expr"),
                                                                                                                  [],
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                  "call",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    opcode_when
                                                                                                                  |);
                                                                                                                  Value.Tuple
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.pointer_coercion
                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    1
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ])
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "slice")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ]),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.alloc (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "array")
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        IntegerKind.Usize
                                                                                                                                        1
                                                                                                                                    ]
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                    ],
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                    ]
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                  read_data,
                                                                                                                  M.read (|
                                                                                                                    i
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |);
                                                                                                          M.call_closure (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr",
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::arith::Mul",
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_air::air::AirBuilder"
                                                                                                                []
                                                                                                                []
                                                                                                                AB
                                                                                                                "Expr",
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Var"
                                                                                                              ],
                                                                                                              "mul",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Expr",
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::function::Fn",
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_air::air::AirBuilder"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      AB
                                                                                                                      "Expr"),
                                                                                                                  [],
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                  "call",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    opcode_when
                                                                                                                  |);
                                                                                                                  Value.Tuple
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.pointer_coercion
                                                                                                                          M.PointerCoercion.Unsize
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    4
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ])
                                                                                                                          (Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "slice")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ]
                                                                                                                            ]),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.alloc (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "array")
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        IntegerKind.Usize
                                                                                                                                        4
                                                                                                                                    ]
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                    ],
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        [];
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        [];
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        [];
                                                                                                                                      Value.StructTuple
                                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                        []
                                                                                                                                    ]
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                  prev_data,
                                                                                                                  M.read (|
                                                                                                                    i
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::arith::Mul",
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_air::air::AirBuilder"
                                                                                                            []
                                                                                                            []
                                                                                                            AB
                                                                                                            "Expr",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Var"
                                                                                                          ],
                                                                                                          "mul",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr",
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "slice")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_air::air::AirBuilder"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  AB
                                                                                                                  "Expr"),
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "call",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                opcode_when
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    M.pointer_coercion
                                                                                                                      M.PointerCoercion.Unsize
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "array")
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                IntegerKind.Usize
                                                                                                                                1
                                                                                                                            ]
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ])
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ]
                                                                                                                        ]),
                                                                                                                    [
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.deref (|
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.alloc (|
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    IntegerKind.Usize
                                                                                                                                    1
                                                                                                                                ]
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                                ],
                                                                                                                              Value.Array
                                                                                                                                [
                                                                                                                                  Value.StructTuple
                                                                                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                                                                                                                                    []
                                                                                                                                    []
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                            ]
                                                                                                          |);
                                                                                                          M.match_operator (|
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Var",
                                                                                                            M.alloc (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            |),
                                                                                                            [
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (let
                                                                                                                        γ :=
                                                                                                                    M.use
                                                                                                                      (M.alloc (|
                                                                                                                        Ty.path
                                                                                                                          "bool",
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "bool",
                                                                                                                          BinOp.lt,
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              i
                                                                                                                            |);
                                                                                                                            M.call_closure (|
                                                                                                                              Ty.path
                                                                                                                                "usize",
                                                                                                                              BinOp.Wrap.div,
                                                                                                                              [
                                                                                                                                NUM_CELLS;
                                                                                                                                Value.Integer
                                                                                                                                  IntegerKind.Usize
                                                                                                                                  2
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |)) in
                                                                                                                  let
                                                                                                                        _ :=
                                                                                                                    is_constant_or_break_match (|
                                                                                                                      M.read (|
                                                                                                                        γ
                                                                                                                      |),
                                                                                                                      Value.Bool
                                                                                                                        true
                                                                                                                    |) in
                                                                                                                  M.read (|
                                                                                                                    M.SubPointer.get_array_field (|
                                                                                                                      read_data,
                                                                                                                      M.read (|
                                                                                                                        i
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)));
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (M.read (|
                                                                                                                    M.SubPointer.get_array_field (|
                                                                                                                      prev_data,
                                                                                                                      M.read (|
                                                                                                                        i
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)))
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_air::air::AirBuilder"
                                                                                                      []
                                                                                                      []
                                                                                                      AB
                                                                                                      "Expr",
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::arith::Mul",
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_air::air::AirBuilder"
                                                                                                        []
                                                                                                        []
                                                                                                        AB
                                                                                                        "Expr",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Var"
                                                                                                      ],
                                                                                                      "mul",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Expr",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::function::Fn",
                                                                                                          Ty.function
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "slice")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                            (Ty.associated_in_trait
                                                                                                              "p3_air::air::AirBuilder"
                                                                                                              []
                                                                                                              []
                                                                                                              AB
                                                                                                              "Expr"),
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                          "call",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            opcode_when
                                                                                                          |);
                                                                                                          Value.Tuple
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                M.pointer_coercion
                                                                                                                  M.PointerCoercion.Unsize
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "array")
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            IntegerKind.Usize
                                                                                                                            1
                                                                                                                        ]
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ]
                                                                                                                    ])
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "slice")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                        ]
                                                                                                                    ]),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.alloc (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "array")
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                IntegerKind.Usize
                                                                                                                                1
                                                                                                                            ]
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                                                                            ],
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              Value.StructTuple
                                                                                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                []
                                                                                                                            ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.match_operator (|
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_air::air::AirBuilder"
                                                                                                          []
                                                                                                          []
                                                                                                          AB
                                                                                                          "Var",
                                                                                                        M.alloc (|
                                                                                                          Ty.tuple
                                                                                                            [],
                                                                                                          Value.Tuple
                                                                                                            []
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ :=
                                                                                                                M.use
                                                                                                                  (M.alloc (|
                                                                                                                    Ty.path
                                                                                                                      "bool",
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "bool",
                                                                                                                      BinOp.lt,
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "usize",
                                                                                                                          BinOp.Wrap.sub,
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              i
                                                                                                                            |);
                                                                                                                            Value.Integer
                                                                                                                              IntegerKind.Usize
                                                                                                                              2
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "usize",
                                                                                                                          BinOp.Wrap.div,
                                                                                                                          [
                                                                                                                            NUM_CELLS;
                                                                                                                            Value.Integer
                                                                                                                              IntegerKind.Usize
                                                                                                                              2
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |)) in
                                                                                                              let
                                                                                                                    _ :=
                                                                                                                is_constant_or_break_match (|
                                                                                                                  M.read (|
                                                                                                                    γ
                                                                                                                  |),
                                                                                                                  Value.Bool
                                                                                                                    true
                                                                                                                |) in
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                  read_data,
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.path
                                                                                                                      "usize",
                                                                                                                    BinOp.Wrap.sub,
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        i
                                                                                                                      |);
                                                                                                                      Value.Integer
                                                                                                                        IntegerKind.Usize
                                                                                                                        2
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)));
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (M.read (|
                                                                                                                M.SubPointer.get_array_field (|
                                                                                                                  prev_data,
                                                                                                                  M.read (|
                                                                                                                    i
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)))
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)))
                                                                                        ]
                                                                                      |)))
                                                                                ]
                                                                              |)))
                                                                        ]
                                                                      |)))
                                                                ]
                                                              |) in
                                                            let~ expected_val :
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr" :=
                                                              M.call_closure (|
                                                                Ty.associated_in_trait
                                                                  "p3_air::air::AirBuilder"
                                                                  []
                                                                  []
                                                                  AB
                                                                  "Expr",
                                                                M.get_trait_method (|
                                                                  "core::ops::arith::Add",
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Expr",
                                                                  [],
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Expr"
                                                                  ],
                                                                  "add",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.read (| expected_load_val |);
                                                                  M.read (| expected_store_val |)
                                                                ]
                                                              |) in
                                                            let~ _ : Ty.tuple [] :=
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_trait_method (|
                                                                  "p3_air::air::AirBuilder",
                                                                  AB,
                                                                  [],
                                                                  [],
                                                                  "assert_eq",
                                                                  [],
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var";
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Expr"
                                                                  ]
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.deref (|
                                                                      M.read (| builder |)
                                                                    |)
                                                                  |);
                                                                  M.read (|
                                                                    M.deref (| M.read (| cell |) |)
                                                                  |);
                                                                  M.read (| expected_val |)
                                                                ]
                                                              |) in
                                                            M.alloc (|
                                                              Ty.tuple [],
                                                              Value.Tuple []
                                                            |)
                                                          |)))
                                                    ]
                                                  |) in
                                                M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                            |)
                                          |)))
                                    ]
                                  |)
                                |))
                            |) in
                          let~ expected_opcode :
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" :=
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::ops::arith::Add",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                                "add",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Add",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "add",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Add",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "add",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Add",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ],
                                            "add",
                                            [],
                                            []
                                          |),
                                          [
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::ops::arith::Add",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                [],
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr"
                                                ],
                                                "add",
                                                [],
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr",
                                                  M.get_trait_method (|
                                                    "core::ops::arith::Mul",
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr",
                                                    [],
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr"
                                                    ],
                                                    "mul",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.call_closure (|
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      M.get_trait_method (|
                                                        "core::ops::function::Fn",
                                                        Ty.function
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr"),
                                                        [],
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                    ]
                                                                ]
                                                            ]
                                                        ],
                                                        "call",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          opcode_when
                                                        |);
                                                        Value.Tuple
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                    ]
                                                                ],
                                                              M.pointer_coercion
                                                                M.PointerCoercion.Unsize
                                                                (Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "array")
                                                                      [
                                                                        Value.Integer
                                                                          IntegerKind.Usize
                                                                          1
                                                                      ]
                                                                      [
                                                                        Ty.path
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                      ]
                                                                  ])
                                                                (Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                      ]
                                                                  ]),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        Ty.apply
                                                                          (Ty.path "array")
                                                                          [
                                                                            Value.Integer
                                                                              IntegerKind.Usize
                                                                              1
                                                                          ]
                                                                          [
                                                                            Ty.path
                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                          ],
                                                                        Value.Array
                                                                          [
                                                                            Value.StructTuple
                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadW0"
                                                                              []
                                                                              []
                                                                              []
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                      ]
                                                    |);
                                                    M.call_closure (|
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      M.get_trait_method (|
                                                        "p3_field::field::FieldAlgebra",
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr",
                                                        [],
                                                        [],
                                                        "from_canonical_u8",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.cast
                                                          (Ty.path "u8")
                                                          (Value.Integer IntegerKind.Usize 0)
                                                      ]
                                                    |)
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr",
                                                  M.get_trait_method (|
                                                    "core::ops::arith::Mul",
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr",
                                                    [],
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr"
                                                    ],
                                                    "mul",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.call_closure (|
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      M.get_trait_method (|
                                                        "core::ops::function::Fn",
                                                        Ty.function
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr"),
                                                        [],
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                    ]
                                                                ]
                                                            ]
                                                        ],
                                                        "call",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          opcode_when
                                                        |);
                                                        Value.Tuple
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                    ]
                                                                ],
                                                              M.pointer_coercion
                                                                M.PointerCoercion.Unsize
                                                                (Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "array")
                                                                      [
                                                                        Value.Integer
                                                                          IntegerKind.Usize
                                                                          2
                                                                      ]
                                                                      [
                                                                        Ty.path
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                      ]
                                                                  ])
                                                                (Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                      ]
                                                                  ]),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        Ty.apply
                                                                          (Ty.path "array")
                                                                          [
                                                                            Value.Integer
                                                                              IntegerKind.Usize
                                                                              2
                                                                          ]
                                                                          [
                                                                            Ty.path
                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                          ],
                                                                        Value.Array
                                                                          [
                                                                            Value.StructTuple
                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu0"
                                                                              []
                                                                              []
                                                                              [];
                                                                            Value.StructTuple
                                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2"
                                                                              []
                                                                              []
                                                                              []
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                      ]
                                                    |);
                                                    M.call_closure (|
                                                      Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr",
                                                      M.get_trait_method (|
                                                        "p3_field::field::FieldAlgebra",
                                                        Ty.associated_in_trait
                                                          "p3_air::air::AirBuilder"
                                                          []
                                                          []
                                                          AB
                                                          "Expr",
                                                        [],
                                                        [],
                                                        "from_canonical_u8",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.cast
                                                          (Ty.path "u8")
                                                          (Value.Integer IntegerKind.Usize 2)
                                                      ]
                                                    |)
                                                  ]
                                                |)
                                              ]
                                            |);
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::ops::arith::Mul",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                [],
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr"
                                                ],
                                                "mul",
                                                [],
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr",
                                                  M.get_trait_method (|
                                                    "core::ops::function::Fn",
                                                    Ty.function
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "slice")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "p3_air::air::AirBuilder"
                                                        []
                                                        []
                                                        AB
                                                        "Expr"),
                                                    [],
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "slice")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                ]
                                                            ]
                                                        ]
                                                    ],
                                                    "call",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                                    Value.Tuple
                                                      [
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "slice")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                ]
                                                            ],
                                                          M.pointer_coercion
                                                            M.PointerCoercion.Unsize
                                                            (Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "array")
                                                                  [
                                                                    Value.Integer
                                                                      IntegerKind.Usize
                                                                      4
                                                                  ]
                                                                  [
                                                                    Ty.path
                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                  ]
                                                              ])
                                                            (Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                  ]
                                                              ]),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Ty.apply
                                                                      (Ty.path "array")
                                                                      [
                                                                        Value.Integer
                                                                          IntegerKind.Usize
                                                                          4
                                                                      ]
                                                                      [
                                                                        Ty.path
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                      ],
                                                                    Value.Array
                                                                      [
                                                                        Value.StructTuple
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu0"
                                                                          []
                                                                          []
                                                                          [];
                                                                        Value.StructTuple
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu1"
                                                                          []
                                                                          []
                                                                          [];
                                                                        Value.StructTuple
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu2"
                                                                          []
                                                                          []
                                                                          [];
                                                                        Value.StructTuple
                                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu3"
                                                                          []
                                                                          []
                                                                          []
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      ]
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr",
                                                  M.get_trait_method (|
                                                    "p3_field::field::FieldAlgebra",
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Expr",
                                                    [],
                                                    [],
                                                    "from_canonical_u8",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.cast
                                                      (Ty.path "u8")
                                                      (Value.Integer IntegerKind.Usize 1)
                                                  ]
                                                |)
                                              ]
                                            |)
                                          ]
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::arith::Mul",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            [],
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ],
                                            "mul",
                                            [],
                                            []
                                          |),
                                          [
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::ops::function::Fn",
                                                Ty.function
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr"),
                                                [],
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            []
                                                            [
                                                              Ty.path
                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                            ]
                                                        ]
                                                    ]
                                                ],
                                                "call",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                                Value.Tuple
                                                  [
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            []
                                                            [
                                                              Ty.path
                                                                "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                            ]
                                                        ],
                                                      M.pointer_coercion
                                                        M.PointerCoercion.Unsize
                                                        (Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 1 ]
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ]
                                                          ])
                                                        (Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "slice")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ]
                                                          ]),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.apply
                                                                  (Ty.path "array")
                                                                  [
                                                                    Value.Integer
                                                                      IntegerKind.Usize
                                                                      1
                                                                  ]
                                                                  [
                                                                    Ty.path
                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                                  ],
                                                                Value.Array
                                                                  [
                                                                    Value.StructTuple
                                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreW0"
                                                                      []
                                                                      []
                                                                      []
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  ]
                                              ]
                                            |);
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "p3_field::field::FieldAlgebra",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr",
                                                [],
                                                [],
                                                "from_canonical_u8",
                                                [],
                                                []
                                              |),
                                              [
                                                M.cast
                                                  (Ty.path "u8")
                                                  (Value.Integer IntegerKind.Usize 3)
                                              ]
                                            |)
                                          ]
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::function::Fn",
                                            Ty.function
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]
                                              ]
                                              (Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"),
                                            [],
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                            "call",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                            Value.Tuple
                                              [
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ],
                                                  M.pointer_coercion
                                                    M.PointerCoercion.Unsize
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 2 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ])
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 2 ]
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ],
                                                            Value.Array
                                                              [
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH0"
                                                                  []
                                                                  []
                                                                  [];
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                  []
                                                                  []
                                                                  []
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              ]
                                          ]
                                        |);
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "p3_field::field::FieldAlgebra",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr",
                                            [],
                                            [],
                                            "from_canonical_u8",
                                            [],
                                            []
                                          |),
                                          [
                                            M.cast
                                              (Ty.path "u8")
                                              (Value.Integer IntegerKind.Usize 4)
                                          ]
                                        |)
                                      ]
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Mul",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "mul",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::function::Fn",
                                        Ty.function
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "slice")
                                                  []
                                                  [
                                                    Ty.path
                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                  ]
                                              ]
                                          ]
                                          (Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"),
                                        [],
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ]
                                                ]
                                            ]
                                        ],
                                        "call",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                        Value.Tuple
                                          [
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ]
                                                ],
                                              M.pointer_coercion
                                                M.PointerCoercion.Unsize
                                                (Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "array")
                                                      [ Value.Integer IntegerKind.Usize 4 ]
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ])
                                                (Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 4 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ],
                                                        Value.Array
                                                          [
                                                            Value.StructTuple
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB0"
                                                              []
                                                              []
                                                              [];
                                                            Value.StructTuple
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                              []
                                                              []
                                                              [];
                                                            Value.StructTuple
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                              []
                                                              []
                                                              [];
                                                            Value.StructTuple
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                              []
                                                              []
                                                              []
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "p3_field::field::FieldAlgebra",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [],
                                        "from_canonical_u8",
                                        [],
                                        []
                                      |),
                                      [ M.cast (Ty.path "u8") (Value.Integer IntegerKind.Usize 5) ]
                                    |)
                                  ]
                                |)
                              ]
                            |) in
                          let~ expected_opcode :
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" :=
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "openvm_circuit::arch::integration_api::VmCoreAir",
                                Ty.apply
                                  (Ty.path
                                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                                  [ NUM_CELLS ]
                                  [],
                                [],
                                [ AB; I ],
                                "expr_to_global_expr",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" ]
                              |),
                              [
                                M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |);
                                M.read (| expected_opcode |)
                              ]
                            |) in
                          let~ load_shift_amount :
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" :=
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::ops::arith::Add",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                                "add",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Add",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "add",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::function::Fn",
                                            Ty.function
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]
                                              ]
                                              (Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"),
                                            [],
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                            "call",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                            Value.Tuple
                                              [
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ],
                                                  M.pointer_coercion
                                                    M.PointerCoercion.Unsize
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 1 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ])
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 1 ]
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ],
                                                            Value.Array
                                                              [
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu1"
                                                                  []
                                                                  []
                                                                  []
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              ]
                                          ]
                                        |);
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::FieldAlgebra::ONE",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::function::Fn",
                                            Ty.function
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]
                                              ]
                                              (Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"),
                                            [],
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                            "call",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                            Value.Tuple
                                              [
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ],
                                                  M.pointer_coercion
                                                    M.PointerCoercion.Unsize
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 2 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ])
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 2 ]
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ],
                                                            Value.Array
                                                              [
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadHu2"
                                                                  []
                                                                  []
                                                                  [];
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu2"
                                                                  []
                                                                  []
                                                                  []
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              ]
                                          ]
                                        |);
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::FieldAlgebra::TWO",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Mul",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "mul",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::function::Fn",
                                        Ty.function
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "slice")
                                                  []
                                                  [
                                                    Ty.path
                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                  ]
                                              ]
                                          ]
                                          (Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"),
                                        [],
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ]
                                                ]
                                            ]
                                        ],
                                        "call",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                        Value.Tuple
                                          [
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ]
                                                ],
                                              M.pointer_coercion
                                                M.PointerCoercion.Unsize
                                                (Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "array")
                                                      [ Value.Integer IntegerKind.Usize 1 ]
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ])
                                                (Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 1 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ],
                                                        Value.Array
                                                          [
                                                            Value.StructTuple
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::LoadBu3"
                                                              []
                                                              []
                                                              []
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "p3_field::field::FieldAlgebra",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [],
                                        "from_canonical_u32",
                                        [],
                                        []
                                      |),
                                      [ Value.Integer IntegerKind.U32 3 ]
                                    |)
                                  ]
                                |)
                              ]
                            |) in
                          let~ store_shift_amount :
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr" :=
                            M.call_closure (|
                              Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                              M.get_trait_method (|
                                "core::ops::arith::Add",
                                Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                [],
                                [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"
                                ],
                                "add",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Add",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "add",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::function::Fn",
                                            Ty.function
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]
                                              ]
                                              (Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"),
                                            [],
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                            "call",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                            Value.Tuple
                                              [
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ],
                                                  M.pointer_coercion
                                                    M.PointerCoercion.Unsize
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 1 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ])
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 1 ]
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ],
                                                            Value.Array
                                                              [
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB1"
                                                                  []
                                                                  []
                                                                  []
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              ]
                                          ]
                                        |);
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::FieldAlgebra::ONE",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::arith::Mul",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                        "mul",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr",
                                          M.get_trait_method (|
                                            "core::ops::function::Fn",
                                            Ty.function
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]
                                              ]
                                              (Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"),
                                            [],
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                            "call",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                            Value.Tuple
                                              [
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.path
                                                            "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                        ]
                                                    ],
                                                  M.pointer_coercion
                                                    M.PointerCoercion.Unsize
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 2 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ])
                                                    (Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ]
                                                      ]),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 2 ]
                                                              [
                                                                Ty.path
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                              ],
                                                            Value.Array
                                                              [
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreH2"
                                                                  []
                                                                  []
                                                                  [];
                                                                Value.StructTuple
                                                                  "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB2"
                                                                  []
                                                                  []
                                                                  []
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              ]
                                          ]
                                        |);
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::FieldAlgebra::TWO",
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr",
                                  M.get_trait_method (|
                                    "core::ops::arith::Mul",
                                    Ty.associated_in_trait
                                      "p3_air::air::AirBuilder"
                                      []
                                      []
                                      AB
                                      "Expr",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ],
                                    "mul",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "core::ops::function::Fn",
                                        Ty.function
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "slice")
                                                  []
                                                  [
                                                    Ty.path
                                                      "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                  ]
                                              ]
                                          ]
                                          (Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"),
                                        [],
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ]
                                                ]
                                            ]
                                        ],
                                        "call",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (| Pointer.Kind.Ref, opcode_when |);
                                        Value.Tuple
                                          [
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.path
                                                        "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                    ]
                                                ],
                                              M.pointer_coercion
                                                M.PointerCoercion.Unsize
                                                (Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "array")
                                                      [ Value.Integer IntegerKind.Usize 1 ]
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ])
                                                (Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "slice")
                                                      []
                                                      [
                                                        Ty.path
                                                          "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                      ]
                                                  ]),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 1 ]
                                                          [
                                                            Ty.path
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode"
                                                          ],
                                                        Value.Array
                                                          [
                                                            Value.StructTuple
                                                              "openvm_rv32im_circuit::loadstore::core::InstructionOpcode::StoreB3"
                                                              []
                                                              []
                                                              []
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr",
                                      M.get_trait_method (|
                                        "p3_field::field::FieldAlgebra",
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr",
                                        [],
                                        [],
                                        "from_canonical_u32",
                                        [],
                                        []
                                      |),
                                      [ Value.Integer IntegerKind.U32 3 ]
                                    |)
                                  ]
                                |)
                              ]
                            |) in
                          M.alloc (|
                            Ty.apply
                              (Ty.path "openvm_circuit::arch::integration_api::AdapterAirContext")
                              []
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"; I
                              ],
                            Value.mkStructRecord
                              "openvm_circuit::arch::integration_api::AdapterAirContext"
                              []
                              [ Ty.associated_in_trait "p3_air::air::AirBuilder" [] [] AB "Expr"; I
                              ]
                              [
                                ("to_pc",
                                  Value.StructTuple
                                    "core::option::Option::None"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_air::air::AirBuilder"
                                        []
                                        []
                                        AB
                                        "Expr"
                                    ]
                                    []);
                                ("reads",
                                  M.call_closure (|
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::integration_api::VmAdapterInterface"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr"
                                      ]
                                      I
                                      "Reads",
                                    M.get_trait_method (|
                                      "core::convert::Into",
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "array")
                                            [ NUM_CELLS ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Var"
                                            ];
                                          Ty.apply
                                            (Ty.path "array")
                                            [ NUM_CELLS ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ]
                                        ],
                                      [],
                                      [
                                        Ty.associated_in_trait
                                          "openvm_circuit::arch::integration_api::VmAdapterInterface"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          ]
                                          I
                                          "Reads"
                                      ],
                                      "into",
                                      [],
                                      []
                                    |),
                                    [
                                      Value.Tuple
                                        [
                                          M.read (| prev_data |);
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "array")
                                              [ NUM_CELLS ]
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              ],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "array")
                                                [ NUM_CELLS ]
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                              "map",
                                              [],
                                              [
                                                Ty.function
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Var"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr");
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              ]
                                            |),
                                            [
                                              M.read (| read_data |);
                                              M.closure
                                                (fun γ =>
                                                  ltac:(M.monadic
                                                    match γ with
                                                    | [ α0 ] =>
                                                      ltac:(M.monadic
                                                        (M.match_operator (|
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr",
                                                          M.alloc (|
                                                            Ty.associated_in_trait
                                                              "p3_air::air::AirBuilder"
                                                              []
                                                              []
                                                              AB
                                                              "Var",
                                                            α0
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let x :=
                                                                  M.copy (|
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var",
                                                                    γ
                                                                  |) in
                                                                M.call_closure (|
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Expr",
                                                                  M.get_trait_method (|
                                                                    "core::convert::Into",
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var",
                                                                    [],
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr"
                                                                    ],
                                                                    "into",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [ M.read (| x |) ]
                                                                |)))
                                                          ]
                                                        |)))
                                                    | _ => M.impossible "wrong number of arguments"
                                                    end))
                                            ]
                                          |)
                                        ]
                                    ]
                                  |));
                                ("writes",
                                  M.call_closure (|
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::integration_api::VmAdapterInterface"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr"
                                      ]
                                      I
                                      "Writes",
                                    M.get_trait_method (|
                                      "core::convert::Into",
                                      Ty.apply
                                        (Ty.path "array")
                                        [ Value.Integer IntegerKind.Usize 1 ]
                                        [
                                          Ty.apply
                                            (Ty.path "array")
                                            [ NUM_CELLS ]
                                            [
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr"
                                            ]
                                        ],
                                      [],
                                      [
                                        Ty.associated_in_trait
                                          "openvm_circuit::arch::integration_api::VmAdapterInterface"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          ]
                                          I
                                          "Writes"
                                      ],
                                      "into",
                                      [],
                                      []
                                    |),
                                    [
                                      Value.Array
                                        [
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "array")
                                              [ NUM_CELLS ]
                                              [
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              ],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "array")
                                                [ NUM_CELLS ]
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Var"
                                                ],
                                              "map",
                                              [],
                                              [
                                                Ty.function
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_air::air::AirBuilder"
                                                      []
                                                      []
                                                      AB
                                                      "Var"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr");
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Expr"
                                              ]
                                            |),
                                            [
                                              M.read (| write_data |);
                                              M.closure
                                                (fun γ =>
                                                  ltac:(M.monadic
                                                    match γ with
                                                    | [ α0 ] =>
                                                      ltac:(M.monadic
                                                        (M.match_operator (|
                                                          Ty.associated_in_trait
                                                            "p3_air::air::AirBuilder"
                                                            []
                                                            []
                                                            AB
                                                            "Expr",
                                                          M.alloc (|
                                                            Ty.associated_in_trait
                                                              "p3_air::air::AirBuilder"
                                                              []
                                                              []
                                                              AB
                                                              "Var",
                                                            α0
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let x :=
                                                                  M.copy (|
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var",
                                                                    γ
                                                                  |) in
                                                                M.call_closure (|
                                                                  Ty.associated_in_trait
                                                                    "p3_air::air::AirBuilder"
                                                                    []
                                                                    []
                                                                    AB
                                                                    "Expr",
                                                                  M.get_trait_method (|
                                                                    "core::convert::Into",
                                                                    Ty.associated_in_trait
                                                                      "p3_air::air::AirBuilder"
                                                                      []
                                                                      []
                                                                      AB
                                                                      "Var",
                                                                    [],
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_air::air::AirBuilder"
                                                                        []
                                                                        []
                                                                        AB
                                                                        "Expr"
                                                                    ],
                                                                    "into",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [ M.read (| x |) ]
                                                                |)))
                                                          ]
                                                        |)))
                                                    | _ => M.impossible "wrong number of arguments"
                                                    end))
                                            ]
                                          |)
                                        ]
                                    ]
                                  |));
                                ("instruction",
                                  M.call_closure (|
                                    Ty.associated_in_trait
                                      "openvm_circuit::arch::integration_api::VmAdapterInterface"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_air::air::AirBuilder"
                                          []
                                          []
                                          AB
                                          "Expr"
                                      ]
                                      I
                                      "ProcessedInstruction",
                                    M.get_trait_method (|
                                      "core::convert::Into",
                                      Ty.apply
                                        (Ty.path
                                          "openvm_rv32im_circuit::adapters::loadstore::LoadStoreInstruction")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ],
                                      [],
                                      [
                                        Ty.associated_in_trait
                                          "openvm_circuit::arch::integration_api::VmAdapterInterface"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_air::air::AirBuilder"
                                              []
                                              []
                                              AB
                                              "Expr"
                                          ]
                                          I
                                          "ProcessedInstruction"
                                      ],
                                      "into",
                                      [],
                                      []
                                    |),
                                    [
                                      Value.mkStructRecord
                                        "openvm_rv32im_circuit::adapters::loadstore::LoadStoreInstruction"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_air::air::AirBuilder"
                                            []
                                            []
                                            AB
                                            "Expr"
                                        ]
                                        [
                                          ("is_valid",
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::convert::Into",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Var",
                                                [],
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr"
                                                ],
                                                "into",
                                                [],
                                                []
                                              |),
                                              [ M.read (| is_valid |) ]
                                            |));
                                          ("opcode", M.read (| expected_opcode |));
                                          ("is_load",
                                            M.call_closure (|
                                              Ty.associated_in_trait
                                                "p3_air::air::AirBuilder"
                                                []
                                                []
                                                AB
                                                "Expr",
                                              M.get_trait_method (|
                                                "core::convert::Into",
                                                Ty.associated_in_trait
                                                  "p3_air::air::AirBuilder"
                                                  []
                                                  []
                                                  AB
                                                  "Var",
                                                [],
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_air::air::AirBuilder"
                                                    []
                                                    []
                                                    AB
                                                    "Expr"
                                                ],
                                                "into",
                                                [],
                                                []
                                              |),
                                              [ M.read (| is_load |) ]
                                            |));
                                          ("load_shift_amount", M.read (| load_shift_amount |));
                                          ("store_shift_amount", M.read (| store_shift_amount |))
                                        ]
                                    ]
                                  |))
                              ]
                          |)
                        |)))
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn start_offset(&self) -> usize {
              self.offset
          }
      *)
      Definition start_offset
          (NUM_CELLS : Value.t)
          (AB I : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS AB I in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            M.read (|
              M.SubPointer.get_struct_record_field (|
                M.deref (| M.read (| self |) |),
                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir",
                "offset"
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (AB I : Ty.t),
        M.IsTraitInstance
          "openvm_circuit::arch::integration_api::VmCoreAir"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) [ AB; I ]
          (Self NUM_CELLS AB I)
          (* Instance *)
          [
            ("eval", InstanceField.Method (eval NUM_CELLS AB I));
            ("start_offset", InstanceField.Method (start_offset NUM_CELLS AB I))
          ].
    End Impl_openvm_circuit_arch_integration_api_VmCoreAir_where_openvm_stark_backend_interaction_InteractionBuilder_AB_where_openvm_circuit_arch_integration_api_VmAdapterInterface_I_associated_in_trait_p3_air_air_AirBuilder___AB_Expr_where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__associated_in_trait_p3_air_air_AirBuilder___AB_Expr_I_Reads_Tuple_array_NUM_CELLS_associated_in_trait_p3_air_air_AirBuilder___AB_Var_array_NUM_CELLS_associated_in_trait_p3_air_air_AirBuilder___AB_Expr__where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__associated_in_trait_p3_air_air_AirBuilder___AB_Expr_I_Writes_array_Usize_1_array_NUM_CELLS_associated_in_trait_p3_air_air_AirBuilder___AB_Expr_where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__associated_in_trait_p3_air_air_AirBuilder___AB_Expr_I_ProcessedInstruction_openvm_rv32im_circuit_adapters_loadstore_LoadStoreInstruction_associated_in_trait_p3_air_air_AirBuilder___AB_Expr_AB_I_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreAir_NUM_CELLS.
    
    (* StructRecord
      {
        name := "LoadStoreCoreChip";
        const_params := [ "NUM_CELLS" ];
        ty_params := [];
        fields :=
          [
            ("air",
              Ty.apply
                (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                [ NUM_CELLS ]
                [])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreChip_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
          [ NUM_CELLS ]
          [].
      
      (* Debug *)
      Definition fmt
          (NUM_CELLS : Value.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS in
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            let f :=
              M.alloc (| Ty.apply (Ty.path "&mut") [] [ Ty.path "core::fmt::Formatter" ], f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field1_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "LoadStoreCoreChip" |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "air" |) |) |);
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ],
                  M.pointer_coercion
                    M.PointerCoercion.Unsize
                    (Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                              [ NUM_CELLS ]
                              []
                          ]
                      ])
                    (Ty.apply (Ty.path "&") [] [ Ty.dyn [ ("core::fmt::Debug::Trait", []) ] ]),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
                                  [ NUM_CELLS ]
                                  []
                              ],
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.deref (| M.read (| self |) |),
                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip",
                                "air"
                              |)
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t),
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self NUM_CELLS)
          (* Instance *) [ ("fmt", InstanceField.Method (fmt NUM_CELLS)) ].
    End Impl_core_fmt_Debug_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreChip_NUM_CELLS.
    
    Module Impl_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreChip_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
          [ NUM_CELLS ]
          [].
      
      (*
          pub fn new(offset: usize) -> Self {
              Self {
                  air: LoadStoreCoreAir { offset },
              }
          }
      *)
      Definition new
          (NUM_CELLS : Value.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS in
        match ε, τ, α with
        | [], [], [ offset ] =>
          ltac:(M.monadic
            (let offset := M.alloc (| Ty.path "usize", offset |) in
            Value.mkStructRecord
              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip"
              [ NUM_CELLS ]
              []
              [
                ("air",
                  Value.mkStructRecord
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir"
                    [ NUM_CELLS ]
                    []
                    [ ("offset", M.read (| offset |)) ])
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new :
        forall (NUM_CELLS : Value.t),
        M.IsAssociatedFunction.C (Self NUM_CELLS) "new" (new NUM_CELLS).
      Admitted.
      Global Typeclasses Opaque new.
    End Impl_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreChip_NUM_CELLS.
    
    Module Impl_openvm_circuit_arch_integration_api_VmCoreChip_where_p3_field_field_PrimeField32_F_where_openvm_circuit_arch_integration_api_VmAdapterInterface_I_F_where_core_convert_Into_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__F_I_Reads_Tuple_array_Usize_2_array_NUM_CELLS_F_F__where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__F_I_Writes_array_Usize_1_array_NUM_CELLS_F_F_I_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreChip_NUM_CELLS.
      Definition Self (NUM_CELLS : Value.t) (F I : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
          [ NUM_CELLS ]
          [].
      
      (*     type Record = LoadStoreCoreRecord<F, NUM_CELLS>; *)
      Definition _Record (NUM_CELLS : Value.t) (F I : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
          [ NUM_CELLS ]
          [ F ].
      
      (*     type Air = LoadStoreCoreAir<NUM_CELLS>; *)
      Definition _Air (NUM_CELLS : Value.t) (F I : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir")
          [ NUM_CELLS ]
          [].
      
      (*
          fn execute_instruction(
              &self,
              instruction: &Instruction<F>,
              _from_pc: u32,
              reads: I::Reads,
          ) -> Result<(AdapterRuntimeContext<F, I>, Self::Record)> {
              let local_opcode =
                  Rv32LoadStoreOpcode::from_usize(instruction.opcode.local_opcode_idx(self.air.offset));
      
              let (reads, shift_amount) = reads.into();
              let shift = shift_amount.as_canonical_u32();
              let prev_data = reads[0];
              let read_data = reads[1];
              let write_data = run_write_data(local_opcode, read_data, prev_data, shift);
              let output = AdapterRuntimeContext::without_pc([write_data]);
      
              Ok((
                  output,
                  LoadStoreCoreRecord {
                      opcode: local_opcode,
                      shift,
                      prev_data,
                      read_data,
                      write_data,
                  },
              ))
          }
      *)
      Definition execute_instruction
          (NUM_CELLS : Value.t)
          (F I : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F I in
        match ε, τ, α with
        | [], [], [ self; instruction; _from_pc; reads ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            let instruction :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_instructions::instruction::Instruction") [] [ F ] ],
                instruction
              |) in
            let _from_pc := M.alloc (| Ty.path "u32", _from_pc |) in
            let reads :=
              M.alloc (|
                Ty.associated_in_trait
                  "openvm_circuit::arch::integration_api::VmAdapterInterface"
                  []
                  [ F ]
                  I
                  "Reads",
                reads
              |) in
            M.read (|
              let~ local_opcode :
                  Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode" :=
                M.call_closure (|
                  Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                  M.get_trait_method (|
                    "openvm_instructions::LocalOpcode",
                    Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                    [],
                    [],
                    "from_usize",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_associated_function (|
                        Ty.path "openvm_instructions::VmOpcode",
                        "local_opcode_idx",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| instruction |) |),
                            "openvm_instructions::instruction::Instruction",
                            "opcode"
                          |)
                        |);
                        M.read (|
                          M.SubPointer.get_struct_record_field (|
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip",
                              "air"
                            |),
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir",
                            "offset"
                          |)
                        |)
                      ]
                    |)
                  ]
                |) in
              M.alloc (|
                Ty.apply
                  (Ty.path "core::result::Result")
                  []
                  [
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                          []
                          [ F; I ];
                        Ty.apply
                          (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                          [ NUM_CELLS ]
                          [ F ]
                      ];
                    Ty.path "openvm_circuit::arch::execution::ExecutionError"
                  ],
                M.match_operator (|
                  Ty.apply
                    (Ty.path "core::result::Result")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                            []
                            [ F; I ];
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                            [ NUM_CELLS ]
                            [ F ]
                        ];
                      Ty.path "openvm_circuit::arch::execution::ExecutionError"
                    ],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "array")
                          [ Value.Integer IntegerKind.Usize 2 ]
                          [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ];
                        F
                      ],
                    M.call_closure (|
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "array")
                            [ Value.Integer IntegerKind.Usize 2 ]
                            [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ];
                          F
                        ],
                      M.get_trait_method (|
                        "core::convert::Into",
                        Ty.associated_in_trait
                          "openvm_circuit::arch::integration_api::VmAdapterInterface"
                          []
                          [ F ]
                          I
                          "Reads",
                        [],
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "array")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ];
                              F
                            ]
                        ],
                        "into",
                        [],
                        []
                      |),
                      [ M.read (| reads |) ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let reads :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "array")
                              [ Value.Integer IntegerKind.Usize 2 ]
                              [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ],
                            γ0_0
                          |) in
                        let shift_amount := M.copy (| F, γ0_1 |) in
                        M.read (|
                          let~ shift : Ty.path "u32" :=
                            M.call_closure (|
                              Ty.path "u32",
                              M.get_trait_method (|
                                "p3_field::field::PrimeField32",
                                F,
                                [],
                                [],
                                "as_canonical_u32",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, shift_amount |) ]
                            |) in
                          let~ prev_data : Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] :=
                            M.read (|
                              M.SubPointer.get_array_field (|
                                reads,
                                Value.Integer IntegerKind.Usize 0
                              |)
                            |) in
                          let~ read_data : Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] :=
                            M.read (|
                              M.SubPointer.get_array_field (|
                                reads,
                                Value.Integer IntegerKind.Usize 1
                              |)
                            |) in
                          let~ write_data : Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] :=
                            M.call_closure (|
                              Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                              M.get_function (|
                                "openvm_rv32im_circuit::loadstore::core::run_write_data",
                                [ NUM_CELLS ],
                                [ F ]
                              |),
                              [
                                M.read (| local_opcode |);
                                M.read (| read_data |);
                                M.read (| prev_data |);
                                M.read (| shift |)
                              ]
                            |) in
                          let~ output :
                              Ty.apply
                                (Ty.path
                                  "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                                []
                                [ F; I ] :=
                            M.call_closure (|
                              Ty.apply
                                (Ty.path
                                  "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                                []
                                [ F; I ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path
                                    "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                                  []
                                  [ F; I ],
                                "without_pc",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [ Value.Integer IntegerKind.Usize 1 ]
                                    [ Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] ]
                                ]
                              |),
                              [ Value.Array [ M.read (| write_data |) ] ]
                            |) in
                          M.alloc (|
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                                      []
                                      [ F; I ];
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                                      [ NUM_CELLS ]
                                      [ F ]
                                  ];
                                Ty.path "openvm_circuit::arch::execution::ExecutionError"
                              ],
                            Value.StructTuple
                              "core::result::Result::Ok"
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_circuit::arch::integration_api::AdapterRuntimeContext")
                                      []
                                      [ F; I ];
                                    Ty.apply
                                      (Ty.path
                                        "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord")
                                      [ NUM_CELLS ]
                                      [ F ]
                                  ];
                                Ty.path "openvm_circuit::arch::execution::ExecutionError"
                              ]
                              [
                                Value.Tuple
                                  [
                                    M.read (| output |);
                                    Value.mkStructRecord
                                      "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord"
                                      [ NUM_CELLS ]
                                      [ F ]
                                      [
                                        ("opcode", M.read (| local_opcode |));
                                        ("shift", M.read (| shift |));
                                        ("prev_data", M.read (| prev_data |));
                                        ("read_data", M.read (| read_data |));
                                        ("write_data", M.read (| write_data |))
                                      ]
                                  ]
                              ]
                          |)
                        |)))
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn get_opcode_name(&self, opcode: usize) -> String {
              format!(
                  "{:?}",
                  Rv32LoadStoreOpcode::from_usize(opcode - self.air.offset)
              )
          }
      *)
      Definition get_opcode_name
          (NUM_CELLS : Value.t)
          (F I : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F I in
        match ε, τ, α with
        | [], [], [ self; opcode ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            let opcode := M.alloc (| Ty.path "usize", opcode |) in
            M.call_closure (|
              Ty.path "alloc::string::String",
              M.get_function (| "core::hint::must_use", [], [ Ty.path "alloc::string::String" ] |),
              [
                M.read (|
                  let~ res : Ty.path "alloc::string::String" :=
                    M.call_closure (|
                      Ty.path "alloc::string::String",
                      M.get_function (| "alloc::fmt::format", [], [] |),
                      [
                        M.call_closure (|
                          Ty.path "core::fmt::Arguments",
                          M.get_associated_function (|
                            Ty.path "core::fmt::Arguments",
                            "new_v1",
                            [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.Usize 1
                            ],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.alloc (|
                                    Ty.apply
                                      (Ty.path "array")
                                      [ Value.Integer IntegerKind.Usize 1 ]
                                      [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ],
                                    Value.Array [ mk_str (| "" |) ]
                                  |)
                                |)
                              |)
                            |);
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.alloc (|
                                    Ty.apply
                                      (Ty.path "array")
                                      [ Value.Integer IntegerKind.Usize 1 ]
                                      [ Ty.path "core::fmt::rt::Argument" ],
                                    Value.Array
                                      [
                                        M.call_closure (|
                                          Ty.path "core::fmt::rt::Argument",
                                          M.get_associated_function (|
                                            Ty.path "core::fmt::rt::Argument",
                                            "new_debug",
                                            [],
                                            [
                                              Ty.path
                                                "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (|
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.alloc (|
                                                    Ty.path
                                                      "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                                                    M.call_closure (|
                                                      Ty.path
                                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                                                      M.get_trait_method (|
                                                        "openvm_instructions::LocalOpcode",
                                                        Ty.path
                                                          "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
                                                        [],
                                                        [],
                                                        "from_usize",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          Ty.path "usize",
                                                          BinOp.Wrap.sub,
                                                          [
                                                            M.read (| opcode |);
                                                            M.read (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.SubPointer.get_struct_record_field (|
                                                                  M.deref (| M.read (| self |) |),
                                                                  "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip",
                                                                  "air"
                                                                |),
                                                                "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreAir",
                                                                "offset"
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                  |)
                                |)
                              |)
                            |)
                          ]
                        |)
                      ]
                    |) in
                  res
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn generate_trace_row(&self, row_slice: &mut [F], record: Self::Record) {
              let core_cols: &mut LoadStoreCoreCols<F, NUM_CELLS> = row_slice.borrow_mut();
              let opcode = record.opcode;
              let flags = &mut core_cols.flags;
              *flags = [F::ZERO; 4];
              match (opcode, record.shift) {
                  (LOADW, 0) => flags[0] = F::TWO,
                  (LOADHU, 0) => flags[1] = F::TWO,
                  (LOADHU, 2) => flags[2] = F::TWO,
                  (LOADBU, 0) => flags[3] = F::TWO,
      
                  (LOADBU, 1) => flags[0] = F::ONE,
                  (LOADBU, 2) => flags[1] = F::ONE,
                  (LOADBU, 3) => flags[2] = F::ONE,
                  (STOREW, 0) => flags[3] = F::ONE,
      
                  (STOREH, 0) => (flags[0], flags[1]) = (F::ONE, F::ONE),
                  (STOREH, 2) => (flags[0], flags[2]) = (F::ONE, F::ONE),
                  (STOREB, 0) => (flags[0], flags[3]) = (F::ONE, F::ONE),
                  (STOREB, 1) => (flags[1], flags[2]) = (F::ONE, F::ONE),
                  (STOREB, 2) => (flags[1], flags[3]) = (F::ONE, F::ONE),
                  (STOREB, 3) => (flags[2], flags[3]) = (F::ONE, F::ONE),
                  _ => unreachable!(),
              };
              core_cols.prev_data = record.prev_data;
              core_cols.read_data = record.read_data;
              core_cols.is_valid = F::ONE;
              core_cols.is_load = F::from_bool([LOADW, LOADHU, LOADBU].contains(&opcode));
              core_cols.write_data = record.write_data;
          }
      *)
      Definition generate_trace_row
          (NUM_CELLS : Value.t)
          (F I : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F I in
        match ε, τ, α with
        | [], [], [ self; row_slice; record ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            let row_slice :=
              M.alloc (|
                Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ F ] ],
                row_slice
              |) in
            let record :=
              M.alloc (|
                Ty.associated_in_trait
                  "openvm_circuit::arch::integration_api::VmCoreChip"
                  []
                  [ F; I ]
                  (Ty.apply
                    (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
                    [ NUM_CELLS ]
                    [])
                  "Record",
                record
              |) in
            M.read (|
              let~ core_cols :
                  Ty.apply
                    (Ty.path "&mut")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                        [ NUM_CELLS ]
                        [ F ]
                    ] :=
                M.borrow (|
                  Pointer.Kind.MutRef,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&mut")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                            [ NUM_CELLS ]
                            [ F ]
                        ],
                      M.get_trait_method (|
                        "core::borrow::BorrowMut",
                        Ty.apply (Ty.path "slice") [] [ F ],
                        [],
                        [
                          Ty.apply
                            (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols")
                            [ NUM_CELLS ]
                            [ F ]
                        ],
                        "borrow_mut",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| row_slice |) |) |) ]
                    |)
                  |)
                |) in
              let~ opcode : Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode" :=
                M.read (|
                  M.SubPointer.get_struct_record_field (|
                    record,
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                    "opcode"
                  |)
                |) in
              let~ flags :
                  Ty.apply
                    (Ty.path "&mut")
                    []
                    [ Ty.apply (Ty.path "array") [ Value.Integer IntegerKind.Usize 4 ] [ F ] ] :=
                M.borrow (|
                  Pointer.Kind.MutRef,
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| core_cols |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                    "flags"
                  |)
                |) in
              let~ _ : Ty.tuple [] :=
                M.write (|
                  M.deref (| M.read (| flags |) |),
                  lib.repeat (|
                    M.read (| get_constant (| "p3_field::field::FieldAlgebra::ZERO", F |) |),
                    Value.Integer IntegerKind.Usize 4
                  |)
                |) in
              let~ _ : Ty.tuple [] :=
                M.match_operator (|
                  Ty.tuple [],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode";
                        Ty.path "u32"
                      ],
                    Value.Tuple
                      [
                        M.read (| opcode |);
                        M.read (|
                          M.SubPointer.get_struct_record_field (|
                            record,
                            "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                            "shift"
                          |)
                        |)
                      ]
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADW"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 0
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 0
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::TWO", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADHU"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 0
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 1
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::TWO", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADHU"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 2
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 2
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::TWO", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 0
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 3
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::TWO", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 1
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 0
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::ONE", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 2
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 1
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::ONE", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 3
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 2
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::ONE", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREW"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 0
                          |) in
                        M.write (|
                          M.SubPointer.get_array_field (|
                            M.deref (| M.read (| flags |) |),
                            Value.Integer IntegerKind.Usize 3
                          |),
                          M.read (| get_constant (| "p3_field::field::FieldAlgebra::ONE", F |) |)
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREH"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 0
                          |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (|
                            Ty.tuple [ F; F ],
                            Value.Tuple
                              [
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |);
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |)
                              ]
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let lhs := M.copy (| F, γ0_0 |) in
                                let lhs := M.copy (| F, γ0_1 |) in
                                M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 0
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 1
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                          ]
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREH"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 2
                          |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (|
                            Ty.tuple [ F; F ],
                            Value.Tuple
                              [
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |);
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |)
                              ]
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let lhs := M.copy (| F, γ0_0 |) in
                                let lhs := M.copy (| F, γ0_1 |) in
                                M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 0
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 2
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                          ]
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 0
                          |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (|
                            Ty.tuple [ F; F ],
                            Value.Tuple
                              [
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |);
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |)
                              ]
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let lhs := M.copy (| F, γ0_0 |) in
                                let lhs := M.copy (| F, γ0_1 |) in
                                M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 0
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 3
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                          ]
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 1
                          |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (|
                            Ty.tuple [ F; F ],
                            Value.Tuple
                              [
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |);
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |)
                              ]
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let lhs := M.copy (| F, γ0_0 |) in
                                let lhs := M.copy (| F, γ0_1 |) in
                                M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 1
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 2
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                          ]
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 2
                          |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (|
                            Ty.tuple [ F; F ],
                            Value.Tuple
                              [
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |);
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |)
                              ]
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let lhs := M.copy (| F, γ0_0 |) in
                                let lhs := M.copy (| F, γ0_1 |) in
                                M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 1
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 3
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                          ]
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let _ :=
                          M.is_struct_tuple (|
                            γ0_0,
                            "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                          |) in
                        let _ :=
                          is_constant_or_break_match (|
                            M.read (| γ0_1 |),
                            Value.Integer IntegerKind.U32 3
                          |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (|
                            Ty.tuple [ F; F ],
                            Value.Tuple
                              [
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |);
                                M.read (|
                                  get_constant (| "p3_field::field::FieldAlgebra::ONE", F |)
                                |)
                              ]
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let lhs := M.copy (| F, γ0_0 |) in
                                let lhs := M.copy (| F, γ0_1 |) in
                                M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 2
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        M.deref (| M.read (| flags |) |),
                                        Value.Integer IntegerKind.Usize 3
                                      |),
                                      M.read (| lhs |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                          ]
                        |)));
                    fun γ =>
                      ltac:(M.monadic
                        (M.never_to_any (|
                          M.call_closure (|
                            Ty.path "never",
                            M.get_function (| "core::panicking::panic", [], [] |),
                            [ mk_str (| "internal error: entered unreachable code" |) ]
                          |)
                        |)))
                  ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.write (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| core_cols |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                    "prev_data"
                  |),
                  M.read (|
                    M.SubPointer.get_struct_record_field (|
                      record,
                      "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                      "prev_data"
                    |)
                  |)
                |) in
              let~ _ : Ty.tuple [] :=
                M.write (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| core_cols |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                    "read_data"
                  |),
                  M.read (|
                    M.SubPointer.get_struct_record_field (|
                      record,
                      "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                      "read_data"
                    |)
                  |)
                |) in
              let~ _ : Ty.tuple [] :=
                M.write (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| core_cols |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                    "is_valid"
                  |),
                  M.read (| get_constant (| "p3_field::field::FieldAlgebra::ONE", F |) |)
                |) in
              let~ _ : Ty.tuple [] :=
                M.write (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| core_cols |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                    "is_load"
                  |),
                  M.call_closure (|
                    F,
                    M.get_trait_method (|
                      "p3_field::field::FieldAlgebra",
                      F,
                      [],
                      [],
                      "from_bool",
                      [],
                      []
                    |),
                    [
                      M.call_closure (|
                        Ty.path "bool",
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "slice")
                            []
                            [ Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                            ],
                          "contains",
                          [],
                          []
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.path
                                      "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                  ]
                              ],
                            M.pointer_coercion
                              M.PointerCoercion.Unsize
                              (Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [ Value.Integer IntegerKind.Usize 3 ]
                                    [
                                      Ty.path
                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                    ]
                                ])
                              (Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "slice")
                                    []
                                    [
                                      Ty.path
                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                    ]
                                ]),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.alloc (|
                                  Ty.apply
                                    (Ty.path "array")
                                    [ Value.Integer IntegerKind.Usize 3 ]
                                    [
                                      Ty.path
                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                    ],
                                  Value.Array
                                    [
                                      Value.StructTuple
                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADW"
                                        []
                                        []
                                        [];
                                      Value.StructTuple
                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADHU"
                                        []
                                        []
                                        [];
                                      Value.StructTuple
                                        "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                                        []
                                        []
                                        []
                                    ]
                                |)
                              |)
                            ]
                          |);
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (| M.borrow (| Pointer.Kind.Ref, opcode |) |)
                          |)
                        ]
                      |)
                    ]
                  |)
                |) in
              let~ _ : Ty.tuple [] :=
                M.write (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| core_cols |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreCols",
                    "write_data"
                  |),
                  M.read (|
                    M.SubPointer.get_struct_record_field (|
                      record,
                      "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreRecord",
                      "write_data"
                    |)
                  |)
                |) in
              M.alloc (| Ty.tuple [], Value.Tuple [] |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn air(&self) -> &Self::Air {
              &self.air
          }
      *)
      Definition air
          (NUM_CELLS : Value.t)
          (F I : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self NUM_CELLS F I in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip")
                      [ NUM_CELLS ]
                      []
                  ],
                self
              |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| self |) |),
                    "openvm_rv32im_circuit::loadstore::core::LoadStoreCoreChip",
                    "air"
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (NUM_CELLS : Value.t) (F I : Ty.t),
        M.IsTraitInstance
          "openvm_circuit::arch::integration_api::VmCoreChip"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) [ F; I ]
          (Self NUM_CELLS F I)
          (* Instance *)
          [
            ("Record", InstanceField.Ty (_Record NUM_CELLS F I));
            ("Air", InstanceField.Ty (_Air NUM_CELLS F I));
            ("execute_instruction", InstanceField.Method (execute_instruction NUM_CELLS F I));
            ("get_opcode_name", InstanceField.Method (get_opcode_name NUM_CELLS F I));
            ("generate_trace_row", InstanceField.Method (generate_trace_row NUM_CELLS F I));
            ("air", InstanceField.Method (air NUM_CELLS F I))
          ].
    End Impl_openvm_circuit_arch_integration_api_VmCoreChip_where_p3_field_field_PrimeField32_F_where_openvm_circuit_arch_integration_api_VmAdapterInterface_I_F_where_core_convert_Into_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__F_I_Reads_Tuple_array_Usize_2_array_NUM_CELLS_F_F__where_core_convert_From_associated_in_trait_openvm_circuit_arch_integration_api_VmAdapterInterface__F_I_Writes_array_Usize_1_array_NUM_CELLS_F_F_I_for_openvm_rv32im_circuit_loadstore_core_LoadStoreCoreChip_NUM_CELLS.
    
    (*
    pub(super) fn run_write_data<F: PrimeField32, const NUM_CELLS: usize>(
        opcode: Rv32LoadStoreOpcode,
        read_data: [F; NUM_CELLS],
        prev_data: [F; NUM_CELLS],
        shift: u32,
    ) -> [F; NUM_CELLS] {
        let shift = shift as usize;
        let mut write_data = read_data;
        match (opcode, shift) {
            (LOADW, 0) => (),
            (LOADBU, 0) | (LOADBU, 1) | (LOADBU, 2) | (LOADBU, 3) => {
                for cell in write_data.iter_mut().take(NUM_CELLS).skip(1) {
                    *cell = F::ZERO;
                }
                write_data[0] = read_data[shift];
            }
            (LOADHU, 0) | (LOADHU, 2) => {
                for cell in write_data.iter_mut().take(NUM_CELLS).skip(NUM_CELLS / 2) {
                    *cell = F::ZERO;
                }
                for (i, cell) in write_data.iter_mut().take(NUM_CELLS / 2).enumerate() {
                    *cell = read_data[i + shift];
                }
            }
            (STOREW, 0) => (),
            (STOREB, 0) | (STOREB, 1) | (STOREB, 2) | (STOREB, 3) => {
                write_data = prev_data;
                write_data[shift] = read_data[0];
            }
            (STOREH, 0) | (STOREH, 2) => {
                write_data = prev_data;
                write_data[shift..(NUM_CELLS / 2 + shift)]
                    .copy_from_slice(&read_data[..(NUM_CELLS / 2)]);
            }
            // Currently the adapter AIR requires `ptr_val` to be aligned to the data size in bytes.
            // The circuit requires that `shift = ptr_val % 4` so that `ptr_val - shift` is a multiple of 4.
            // This requirement is non-trivial to remove, because we use it to ensure that `ptr_val - shift + 4 <= 2^pointer_max_bits`.
            _ => unreachable!(
                "unaligned memory access not supported by this execution environment: {opcode:?}, shift: {shift}"
            ),
        };
        write_data
    }
    *)
    Definition run_write_data (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [ NUM_CELLS ], [ F ], [ opcode; read_data; prev_data; shift ] =>
        ltac:(M.monadic
          (let opcode :=
            M.alloc (|
              Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode",
              opcode
            |) in
          let read_data :=
            M.alloc (| Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ], read_data |) in
          let prev_data :=
            M.alloc (| Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ], prev_data |) in
          let shift := M.alloc (| Ty.path "u32", shift |) in
          M.read (|
            let~ shift : Ty.path "usize" := M.cast (Ty.path "usize") (M.read (| shift |)) in
            let~ write_data : Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ] :=
              M.read (| read_data |) in
            let~ _ : Ty.tuple [] :=
              M.match_operator (|
                Ty.tuple [],
                M.alloc (|
                  Ty.tuple
                    [
                      Ty.path "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode";
                      Ty.path "usize"
                    ],
                  Value.Tuple [ M.read (| opcode |); M.read (| shift |) ]
                |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                      let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                      let _ :=
                        M.is_struct_tuple (|
                          γ0_0,
                          "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADW"
                        |) in
                      let _ :=
                        is_constant_or_break_match (|
                          M.read (| γ0_1 |),
                          Value.Integer IntegerKind.Usize 0
                        |) in
                      Value.Tuple []));
                  fun γ =>
                    ltac:(M.monadic
                      (M.find_or_pattern (Ty.tuple []) (|
                        γ,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 0
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 1
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 2
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADBU"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 3
                                |) in
                              Value.Tuple []))
                        ],
                        fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [] =>
                              ltac:(M.monadic
                                (M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.read (|
                                      M.use
                                        (M.alloc (|
                                          Ty.tuple [],
                                          M.match_operator (|
                                            Ty.tuple [],
                                            M.alloc (|
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::skip::Skip")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::take::Take")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::IterMut")
                                                        []
                                                        [ F ]
                                                    ]
                                                ],
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::iter::adapters::skip::Skip")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::take::Take")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::IterMut")
                                                          []
                                                          [ F ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::collect::IntoIterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::skip::Skip")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::take::Take")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ]
                                                        ]
                                                    ],
                                                  [],
                                                  [],
                                                  "into_iter",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::skip::Skip")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::take::Take")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::take::Take")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ]
                                                        ],
                                                      [],
                                                      [],
                                                      "skip",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::take::Take")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ],
                                                          [],
                                                          [],
                                                          "take",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ],
                                                            M.get_associated_function (|
                                                              Ty.apply (Ty.path "slice") [] [ F ],
                                                              "iter_mut",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&mut")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ F ]
                                                                  ],
                                                                M.pointer_coercion
                                                                  M.PointerCoercion.Unsize
                                                                  (Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "array")
                                                                        [ NUM_CELLS ]
                                                                        [ F ]
                                                                    ])
                                                                  (Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [ F ]
                                                                    ]),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    write_data
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |);
                                                          NUM_CELLS
                                                        ]
                                                      |);
                                                      Value.Integer IntegerKind.Usize 1
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let iter :=
                                                    M.copy (|
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::skip::Skip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::take::Take")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::slice::iter::IterMut")
                                                                []
                                                                [ F ]
                                                            ]
                                                        ],
                                                      γ
                                                    |) in
                                                  M.read (|
                                                    M.loop (|
                                                      Ty.tuple [],
                                                      ltac:(M.monadic
                                                        (let~ _ : Ty.tuple [] :=
                                                          M.match_operator (|
                                                            Ty.tuple [],
                                                            M.alloc (|
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [ Ty.apply (Ty.path "&mut") [] [ F ]
                                                                ],
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&mut")
                                                                      []
                                                                      [ F ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::skip::Skip")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::take::Take")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::IterMut")
                                                                            []
                                                                            [ F ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "next",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.MutRef,
                                                                        iter
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |),
                                                            [
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let _ :=
                                                                    M.is_struct_tuple (|
                                                                      γ,
                                                                      "core::option::Option::None"
                                                                    |) in
                                                                  M.never_to_any (|
                                                                    M.read (| M.break (||) |)
                                                                  |)));
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let γ0_0 :=
                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                      γ,
                                                                      "core::option::Option::Some",
                                                                      0
                                                                    |) in
                                                                  let cell :=
                                                                    M.copy (|
                                                                      Ty.apply
                                                                        (Ty.path "&mut")
                                                                        []
                                                                        [ F ],
                                                                      γ0_0
                                                                    |) in
                                                                  M.read (|
                                                                    let~ _ : Ty.tuple [] :=
                                                                      M.write (|
                                                                        M.deref (|
                                                                          M.read (| cell |)
                                                                        |),
                                                                        M.read (|
                                                                          get_constant (|
                                                                            "p3_field::field::FieldAlgebra::ZERO",
                                                                            F
                                                                          |)
                                                                        |)
                                                                      |) in
                                                                    M.alloc (|
                                                                      Ty.tuple [],
                                                                      Value.Tuple []
                                                                    |)
                                                                  |)))
                                                            ]
                                                          |) in
                                                        M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                                    |)
                                                  |)))
                                            ]
                                          |)
                                        |))
                                    |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        write_data,
                                        Value.Integer IntegerKind.Usize 0
                                      |),
                                      M.read (|
                                        M.SubPointer.get_array_field (|
                                          read_data,
                                          M.read (| shift |)
                                        |)
                                      |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                            | _ => M.impossible "wrong number of arguments"
                            end)
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (M.find_or_pattern (Ty.tuple []) (|
                        γ,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADHU"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 0
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::LOADHU"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 2
                                |) in
                              Value.Tuple []))
                        ],
                        fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [] =>
                              ltac:(M.monadic
                                (M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.read (|
                                      M.use
                                        (M.alloc (|
                                          Ty.tuple [],
                                          M.match_operator (|
                                            Ty.tuple [],
                                            M.alloc (|
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::skip::Skip")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::take::Take")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::IterMut")
                                                        []
                                                        [ F ]
                                                    ]
                                                ],
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::iter::adapters::skip::Skip")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::take::Take")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::IterMut")
                                                          []
                                                          [ F ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::collect::IntoIterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::skip::Skip")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::take::Take")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ]
                                                        ]
                                                    ],
                                                  [],
                                                  [],
                                                  "into_iter",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::skip::Skip")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::take::Take")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::take::Take")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ]
                                                        ],
                                                      [],
                                                      [],
                                                      "skip",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::take::Take")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ],
                                                          [],
                                                          [],
                                                          "take",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ],
                                                            M.get_associated_function (|
                                                              Ty.apply (Ty.path "slice") [] [ F ],
                                                              "iter_mut",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&mut")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ F ]
                                                                  ],
                                                                M.pointer_coercion
                                                                  M.PointerCoercion.Unsize
                                                                  (Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "array")
                                                                        [ NUM_CELLS ]
                                                                        [ F ]
                                                                    ])
                                                                  (Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [ F ]
                                                                    ]),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    write_data
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |);
                                                          NUM_CELLS
                                                        ]
                                                      |);
                                                      M.call_closure (|
                                                        Ty.path "usize",
                                                        BinOp.Wrap.div,
                                                        [
                                                          NUM_CELLS;
                                                          Value.Integer IntegerKind.Usize 2
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let iter :=
                                                    M.copy (|
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::skip::Skip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::take::Take")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::slice::iter::IterMut")
                                                                []
                                                                [ F ]
                                                            ]
                                                        ],
                                                      γ
                                                    |) in
                                                  M.read (|
                                                    M.loop (|
                                                      Ty.tuple [],
                                                      ltac:(M.monadic
                                                        (let~ _ : Ty.tuple [] :=
                                                          M.match_operator (|
                                                            Ty.tuple [],
                                                            M.alloc (|
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [ Ty.apply (Ty.path "&mut") [] [ F ]
                                                                ],
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&mut")
                                                                      []
                                                                      [ F ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::skip::Skip")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::take::Take")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::IterMut")
                                                                            []
                                                                            [ F ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "next",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.MutRef,
                                                                        iter
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |),
                                                            [
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let _ :=
                                                                    M.is_struct_tuple (|
                                                                      γ,
                                                                      "core::option::Option::None"
                                                                    |) in
                                                                  M.never_to_any (|
                                                                    M.read (| M.break (||) |)
                                                                  |)));
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let γ0_0 :=
                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                      γ,
                                                                      "core::option::Option::Some",
                                                                      0
                                                                    |) in
                                                                  let cell :=
                                                                    M.copy (|
                                                                      Ty.apply
                                                                        (Ty.path "&mut")
                                                                        []
                                                                        [ F ],
                                                                      γ0_0
                                                                    |) in
                                                                  M.read (|
                                                                    let~ _ : Ty.tuple [] :=
                                                                      M.write (|
                                                                        M.deref (|
                                                                          M.read (| cell |)
                                                                        |),
                                                                        M.read (|
                                                                          get_constant (|
                                                                            "p3_field::field::FieldAlgebra::ZERO",
                                                                            F
                                                                          |)
                                                                        |)
                                                                      |) in
                                                                    M.alloc (|
                                                                      Ty.tuple [],
                                                                      Value.Tuple []
                                                                    |)
                                                                  |)))
                                                            ]
                                                          |) in
                                                        M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                                    |)
                                                  |)))
                                            ]
                                          |)
                                        |))
                                    |) in
                                  M.use
                                    (M.alloc (|
                                      Ty.tuple [],
                                      M.match_operator (|
                                        Ty.tuple [],
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::take::Take")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [ F ]
                                                ]
                                            ],
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "core::iter::adapters::enumerate::Enumerate")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "core::iter::adapters::take::Take")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::IterMut")
                                                      []
                                                      [ F ]
                                                  ]
                                              ],
                                            M.get_trait_method (|
                                              "core::iter::traits::collect::IntoIterator",
                                              Ty.apply
                                                (Ty.path
                                                  "core::iter::adapters::enumerate::Enumerate")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::take::Take")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::IterMut")
                                                        []
                                                        [ F ]
                                                    ]
                                                ],
                                              [],
                                              [],
                                              "into_iter",
                                              [],
                                              []
                                            |),
                                            [
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path
                                                    "core::iter::adapters::enumerate::Enumerate")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::take::Take")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::IterMut")
                                                          []
                                                          [ F ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::take::Take")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::IterMut")
                                                        []
                                                        [ F ]
                                                    ],
                                                  [],
                                                  [],
                                                  "enumerate",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::take::Take")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::IterMut")
                                                          []
                                                          [ F ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::IterMut")
                                                        []
                                                        [ F ],
                                                      [],
                                                      [],
                                                      "take",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::IterMut")
                                                          []
                                                          [ F ],
                                                        M.get_associated_function (|
                                                          Ty.apply (Ty.path "slice") [] [ F ],
                                                          "iter_mut",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&mut")
                                                              []
                                                              [ Ty.apply (Ty.path "slice") [] [ F ]
                                                              ],
                                                            M.pointer_coercion
                                                              M.PointerCoercion.Unsize
                                                              (Ty.apply
                                                                (Ty.path "&mut")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "array")
                                                                    [ NUM_CELLS ]
                                                                    [ F ]
                                                                ])
                                                              (Ty.apply
                                                                (Ty.path "&mut")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [ F ]
                                                                ]),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                write_data
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |);
                                                      M.call_closure (|
                                                        Ty.path "usize",
                                                        BinOp.Wrap.div,
                                                        [
                                                          NUM_CELLS;
                                                          Value.Integer IntegerKind.Usize 2
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            ]
                                          |)
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let iter :=
                                                M.copy (|
                                                  Ty.apply
                                                    (Ty.path
                                                      "core::iter::adapters::enumerate::Enumerate")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::take::Take")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ]
                                                        ]
                                                    ],
                                                  γ
                                                |) in
                                              M.read (|
                                                M.loop (|
                                                  Ty.tuple [],
                                                  ltac:(M.monadic
                                                    (let~ _ : Ty.tuple [] :=
                                                      M.match_operator (|
                                                        Ty.tuple [],
                                                        M.alloc (|
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.path "usize";
                                                                  Ty.apply (Ty.path "&mut") [] [ F ]
                                                                ]
                                                            ],
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.path "usize";
                                                                    Ty.apply
                                                                      (Ty.path "&mut")
                                                                      []
                                                                      [ F ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::iter::traits::iterator::Iterator",
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::enumerate::Enumerate")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::take::Take")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::IterMut")
                                                                        []
                                                                        [ F ]
                                                                    ]
                                                                ],
                                                              [],
                                                              [],
                                                              "next",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    iter
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let _ :=
                                                                M.is_struct_tuple (|
                                                                  γ,
                                                                  "core::option::Option::None"
                                                                |) in
                                                              M.never_to_any (|
                                                                M.read (| M.break (||) |)
                                                              |)));
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let γ0_0 :=
                                                                M.SubPointer.get_struct_tuple_field (|
                                                                  γ,
                                                                  "core::option::Option::Some",
                                                                  0
                                                                |) in
                                                              let γ1_0 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ0_0,
                                                                  0
                                                                |) in
                                                              let γ1_1 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ0_0,
                                                                  1
                                                                |) in
                                                              let i :=
                                                                M.copy (|
                                                                  Ty.path "usize",
                                                                  γ1_0
                                                                |) in
                                                              let cell :=
                                                                M.copy (|
                                                                  Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [ F ],
                                                                  γ1_1
                                                                |) in
                                                              M.read (|
                                                                let~ _ : Ty.tuple [] :=
                                                                  M.write (|
                                                                    M.deref (| M.read (| cell |) |),
                                                                    M.read (|
                                                                      M.SubPointer.get_array_field (|
                                                                        read_data,
                                                                        M.call_closure (|
                                                                          Ty.path "usize",
                                                                          BinOp.Wrap.add,
                                                                          [
                                                                            M.read (| i |);
                                                                            M.read (| shift |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |) in
                                                                M.alloc (|
                                                                  Ty.tuple [],
                                                                  Value.Tuple []
                                                                |)
                                                              |)))
                                                        ]
                                                      |) in
                                                    M.alloc (| Ty.tuple [], Value.Tuple [] |)))
                                                |)
                                              |)))
                                        ]
                                      |)
                                    |))
                                |)))
                            | _ => M.impossible "wrong number of arguments"
                            end)
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                      let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                      let _ :=
                        M.is_struct_tuple (|
                          γ0_0,
                          "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREW"
                        |) in
                      let _ :=
                        is_constant_or_break_match (|
                          M.read (| γ0_1 |),
                          Value.Integer IntegerKind.Usize 0
                        |) in
                      Value.Tuple []));
                  fun γ =>
                    ltac:(M.monadic
                      (M.find_or_pattern (Ty.tuple []) (|
                        γ,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 0
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 1
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 2
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREB"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 3
                                |) in
                              Value.Tuple []))
                        ],
                        fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [] =>
                              ltac:(M.monadic
                                (M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (| write_data, M.read (| prev_data |) |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.write (|
                                      M.SubPointer.get_array_field (|
                                        write_data,
                                        M.read (| shift |)
                                      |),
                                      M.read (|
                                        M.SubPointer.get_array_field (|
                                          read_data,
                                          Value.Integer IntegerKind.Usize 0
                                        |)
                                      |)
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                            | _ => M.impossible "wrong number of arguments"
                            end)
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (M.find_or_pattern (Ty.tuple []) (|
                        γ,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREH"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 0
                                |) in
                              Value.Tuple []));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                M.is_struct_tuple (|
                                  γ0_0,
                                  "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode::STOREH"
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.Usize 2
                                |) in
                              Value.Tuple []))
                        ],
                        fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [] =>
                              ltac:(M.monadic
                                (M.read (|
                                  let~ _ : Ty.tuple [] :=
                                    M.write (| write_data, M.read (| prev_data |) |) in
                                  let~ _ : Ty.tuple [] :=
                                    M.call_closure (|
                                      Ty.tuple [],
                                      M.get_associated_function (|
                                        Ty.apply (Ty.path "slice") [] [ F ],
                                        "copy_from_slice",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.MutRef,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&mut")
                                                []
                                                [ Ty.apply (Ty.path "slice") [] [ F ] ],
                                              M.get_trait_method (|
                                                "core::ops::index::IndexMut",
                                                Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                                                [],
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::ops::range::Range")
                                                    []
                                                    [ Ty.path "usize" ]
                                                ],
                                                "index_mut",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (| Pointer.Kind.MutRef, write_data |);
                                                Value.mkStructRecord
                                                  "core::ops::range::Range"
                                                  []
                                                  [ Ty.path "usize" ]
                                                  [
                                                    ("start", M.read (| shift |));
                                                    ("end_",
                                                      M.call_closure (|
                                                        Ty.path "usize",
                                                        BinOp.Wrap.add,
                                                        [
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            BinOp.Wrap.div,
                                                            [
                                                              NUM_CELLS;
                                                              Value.Integer IntegerKind.Usize 2
                                                            ]
                                                          |);
                                                          M.read (| shift |)
                                                        ]
                                                      |))
                                                  ]
                                              ]
                                            |)
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ F ] ],
                                                  M.get_trait_method (|
                                                    "core::ops::index::Index",
                                                    Ty.apply (Ty.path "array") [ NUM_CELLS ] [ F ],
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::ops::range::RangeTo")
                                                        []
                                                        [ Ty.path "usize" ]
                                                    ],
                                                    "index",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (| Pointer.Kind.Ref, read_data |);
                                                    Value.mkStructRecord
                                                      "core::ops::range::RangeTo"
                                                      []
                                                      [ Ty.path "usize" ]
                                                      [
                                                        ("end_",
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            BinOp.Wrap.div,
                                                            [
                                                              NUM_CELLS;
                                                              Value.Integer IntegerKind.Usize 2
                                                            ]
                                                          |))
                                                      ]
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |) in
                                  M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                |)))
                            | _ => M.impossible "wrong number of arguments"
                            end)
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (M.never_to_any (|
                        M.call_closure (|
                          Ty.path "never",
                          M.get_function (| "core::panicking::panic_fmt", [], [] |),
                          [
                            M.call_closure (|
                              Ty.path "core::fmt::Arguments",
                              M.get_associated_function (|
                                Ty.path "core::fmt::Arguments",
                                "new_v1",
                                [
                                  Value.Integer IntegerKind.Usize 2;
                                  Value.Integer IntegerKind.Usize 2
                                ],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "array")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ],
                                        Value.Array
                                          [
                                            mk_str (|
                                              "internal error: entered unreachable code: unaligned memory access not supported by this execution environment: "
                                            |);
                                            mk_str (| ", shift: " |)
                                          ]
                                      |)
                                    |)
                                  |)
                                |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.apply
                                          (Ty.path "array")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [ Ty.path "core::fmt::rt::Argument" ],
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              Ty.path "core::fmt::rt::Argument",
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_debug",
                                                [],
                                                [
                                                  Ty.path
                                                    "openvm_rv32im_transpiler::instructions::Rv32LoadStoreOpcode"
                                                ]
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (| Pointer.Kind.Ref, opcode |)
                                                  |)
                                                |)
                                              ]
                                            |);
                                            M.call_closure (|
                                              Ty.path "core::fmt::rt::Argument",
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [],
                                                [ Ty.path "usize" ]
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (| Pointer.Kind.Ref, shift |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |)))
                ]
              |) in
            write_data
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance Instance_IsFunction_run_write_data :
      M.IsFunction.C "openvm_rv32im_circuit::loadstore::core::run_write_data" run_write_data.
    Admitted.
    Global Typeclasses Opaque run_write_data.
  End core.
End loadstore.
