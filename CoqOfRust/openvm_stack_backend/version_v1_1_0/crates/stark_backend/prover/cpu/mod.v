(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module prover.
  Module cpu.
    (* StructRecord
      {
        name := "CpuBackend";
        const_params := [];
        ty_params := [ "SC" ];
        fields := [ ("phantom", Ty.apply (Ty.path "core::marker::PhantomData") [] [ SC ]) ];
      } *)
    
    Module Impl_core_clone_Clone_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ].
      
      (* Derivative *)
      Definition clone (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ],
                self
              |) in
            M.match_operator (|
              Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ],
              M.deref (| M.read (| self |) |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 :=
                      M.SubPointer.get_struct_record_field (|
                        γ,
                        "openvm_stark_backend::prover::cpu::CpuBackend",
                        "phantom"
                      |) in
                    let __arg_0 :=
                      M.alloc (|
                        Ty.apply
                          (Ty.path "&")
                          []
                          [ Ty.apply (Ty.path "core::marker::PhantomData") [] [ SC ] ],
                        γ0_0
                      |) in
                    Value.mkStructRecord
                      "openvm_stark_backend::prover::cpu::CpuBackend"
                      []
                      [ SC ]
                      [
                        ("phantom",
                          M.call_closure (|
                            Ty.apply (Ty.path "core::marker::PhantomData") [] [ SC ],
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply (Ty.path "core::marker::PhantomData") [] [ SC ],
                              [],
                              [],
                              "clone",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| __arg_0 |) |) |) ]
                          |))
                      ]))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *) [ ("clone", InstanceField.Method (clone SC)) ].
    End Impl_core_clone_Clone_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
    
    Module Impl_core_marker_Copy_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ].
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "core::marker::Copy"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *) [].
    End Impl_core_marker_Copy_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
    
    Module Impl_core_default_Default_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ].
      
      (* Derivative *)
      Definition default (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [] =>
          ltac:(M.monadic
            (Value.mkStructRecord
              "openvm_stark_backend::prover::cpu::CpuBackend"
              []
              [ SC ]
              [
                ("phantom",
                  M.call_closure (|
                    Ty.apply (Ty.path "core::marker::PhantomData") [] [ SC ],
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply (Ty.path "core::marker::PhantomData") [] [ SC ],
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "core::default::Default"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *) [ ("default", InstanceField.Method (default SC)) ].
    End Impl_core_default_Default_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
    
    (* StructRecord
      {
        name := "CpuDevice";
        const_params := [];
        ty_params := [ "SC" ];
        fields :=
          [ ("config", Ty.apply (Ty.path "&") [] [ SC ]); ("log_blowup_factor", Ty.path "usize") ];
      } *)
    
    Module Impl_core_clone_Clone_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      (* Derivative *)
      Definition clone (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            M.match_operator (|
              Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ],
              M.deref (| M.read (| self |) |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 :=
                      M.SubPointer.get_struct_record_field (|
                        γ,
                        "openvm_stark_backend::prover::cpu::CpuDevice",
                        "config"
                      |) in
                    let γ0_1 :=
                      M.SubPointer.get_struct_record_field (|
                        γ,
                        "openvm_stark_backend::prover::cpu::CpuDevice",
                        "log_blowup_factor"
                      |) in
                    let __arg_0 :=
                      M.alloc (|
                        Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "&") [] [ SC ] ],
                        γ0_0
                      |) in
                    let __arg_1 :=
                      M.alloc (| Ty.apply (Ty.path "&") [] [ Ty.path "usize" ], γ0_1 |) in
                    Value.mkStructRecord
                      "openvm_stark_backend::prover::cpu::CpuDevice"
                      []
                      [ SC ]
                      [
                        ("config",
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply (Ty.path "&") [] [ SC ],
                                M.get_trait_method (|
                                  "core::clone::Clone",
                                  Ty.apply (Ty.path "&") [] [ SC ],
                                  [],
                                  [],
                                  "clone",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (| M.read (| __arg_0 |) |)
                                  |)
                                ]
                              |)
                            |)
                          |));
                        ("log_blowup_factor",
                          M.call_closure (|
                            Ty.path "usize",
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.path "usize",
                              [],
                              [],
                              "clone",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| __arg_1 |) |) |) ]
                          |))
                      ]))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *) [ ("clone", InstanceField.Method (clone SC)) ].
    End Impl_core_clone_Clone_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_core_marker_Copy_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "core::marker::Copy"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *) [].
    End Impl_core_marker_Copy_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      (* derive_new::new *)
      Definition new (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ config; log_blowup_factor ] =>
          ltac:(M.monadic
            (let config := M.alloc (| Ty.apply (Ty.path "&") [] [ SC ], config |) in
            let log_blowup_factor := M.alloc (| Ty.path "usize", log_blowup_factor |) in
            Value.mkStructRecord
              "openvm_stark_backend::prover::cpu::CpuDevice"
              []
              [ SC ]
              [
                ("config", M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| config |) |) |));
                ("log_blowup_factor", M.read (| log_blowup_factor |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new :
        forall (SC : Ty.t),
        M.IsAssociatedFunction.C (Self SC) "new" (new SC).
      Admitted.
      Global Typeclasses Opaque new.
      (*
          pub fn config(&self) -> &SC {
              self.config
          }
      *)
      Definition config (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.read (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| self |) |),
                    "openvm_stark_backend::prover::cpu::CpuDevice",
                    "config"
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_config :
        forall (SC : Ty.t),
        M.IsAssociatedFunction.C (Self SC) "config" (config SC).
      Admitted.
      Global Typeclasses Opaque config.
      (*
          pub fn pcs(&self) -> &SC::Pcs {
              self.config.pcs()
          }
      *)
      Definition pcs (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ],
                  M.get_trait_method (|
                    "openvm_stark_backend::config::StarkGenericConfig",
                    SC,
                    [],
                    [],
                    "pcs",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.read (|
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "openvm_stark_backend::prover::cpu::CpuDevice",
                            "config"
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_pcs :
        forall (SC : Ty.t),
        M.IsAssociatedFunction.C (Self SC) "pcs" (pcs SC).
      Admitted.
      Global Typeclasses Opaque pcs.
    End Impl_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_ProverBackend_where_openvm_stark_backend_config_StarkGenericConfig_SC_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ].
      
      (*     const CHALLENGE_EXT_DEGREE: u8 = <SC::Challenge as FieldExtensionAlgebra<Val<SC>>>::D as u8; *)
      (* Ty.path "u8" *)
      Definition value_CHALLENGE_EXT_DEGREE
          (SC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self SC in
        ltac:(M.monadic
          (M.alloc (|
            Ty.path "u8",
            M.cast
              (Ty.path "u8")
              (M.read (|
                get_constant (| "p3_field::field::FieldExtensionAlgebra::D", Ty.path "usize" |)
              |))
          |))).
      
      (*     type Val = Val<SC>; *)
      Definition _Val (SC : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "p3_commit::domain::PolynomialSpace"
          []
          []
          (Ty.associated_in_trait
            "p3_commit::pcs::Pcs"
            []
            [
              Ty.associated_in_trait
                "openvm_stark_backend::config::StarkGenericConfig"
                []
                []
                SC
                "Challenge";
              Ty.associated_in_trait
                "openvm_stark_backend::config::StarkGenericConfig"
                []
                []
                SC
                "Challenger"
            ]
            (Ty.associated_in_trait
              "openvm_stark_backend::config::StarkGenericConfig"
              []
              []
              SC
              "Pcs")
            "Domain")
          "Val".
      
      (*     type Challenge = SC::Challenge; *)
      Definition _Challenge (SC : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "openvm_stark_backend::config::StarkGenericConfig"
          []
          []
          SC
          "Challenge".
      
      (*     type OpeningProof = OpeningProof<PcsProof<SC>, SC::Challenge>; *)
      Definition _OpeningProof (SC : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "openvm_stark_backend::proof::OpeningProof")
          []
          [
            Ty.associated_in_trait
              "p3_commit::pcs::Pcs"
              []
              [
                Ty.associated_in_trait
                  "openvm_stark_backend::config::StarkGenericConfig"
                  []
                  []
                  SC
                  "Challenge";
                Ty.associated_in_trait
                  "openvm_stark_backend::config::StarkGenericConfig"
                  []
                  []
                  SC
                  "Challenger"
              ]
              (Ty.associated_in_trait
                "openvm_stark_backend::config::StarkGenericConfig"
                []
                []
                SC
                "Pcs")
              "Proof";
            Ty.associated_in_trait
              "openvm_stark_backend::config::StarkGenericConfig"
              []
              []
              SC
              "Challenge"
          ].
      
      (*     type RapPartialProof = Option<RapPhaseSeqPartialProof<SC>>; *)
      Definition _RapPartialProof (SC : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "core::option::Option")
          []
          [
            Ty.associated_in_trait
              "openvm_stark_backend::interaction::RapPhaseSeq"
              []
              [
                Ty.associated_in_trait
                  "p3_commit::domain::PolynomialSpace"
                  []
                  []
                  (Ty.associated_in_trait
                    "p3_commit::pcs::Pcs"
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenge";
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenger"
                    ]
                    (Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Pcs")
                    "Domain")
                  "Val";
                Ty.associated_in_trait
                  "openvm_stark_backend::config::StarkGenericConfig"
                  []
                  []
                  SC
                  "Challenge";
                Ty.associated_in_trait
                  "openvm_stark_backend::config::StarkGenericConfig"
                  []
                  []
                  SC
                  "Challenger"
              ]
              (Ty.associated_in_trait
                "openvm_stark_backend::config::StarkGenericConfig"
                []
                []
                SC
                "RapPhaseSeq")
              "PartialProof"
          ].
      
      (*     type Commitment = Com<SC>; *)
      Definition _Commitment (SC : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "p3_commit::pcs::Pcs"
          []
          [
            Ty.associated_in_trait
              "openvm_stark_backend::config::StarkGenericConfig"
              []
              []
              SC
              "Challenge";
            Ty.associated_in_trait
              "openvm_stark_backend::config::StarkGenericConfig"
              []
              []
              SC
              "Challenger"
          ]
          (Ty.associated_in_trait "openvm_stark_backend::config::StarkGenericConfig" [] [] SC "Pcs")
          "Commitment".
      
      (*     type Challenger = SC::Challenger; *)
      Definition _Challenger (SC : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "openvm_stark_backend::config::StarkGenericConfig"
          []
          []
          SC
          "Challenger".
      
      (*     type Matrix = Arc<RowMajorMatrix<Val<SC>>>; *)
      Definition _Matrix (SC : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "alloc::sync::Arc")
          []
          [
            Ty.apply
              (Ty.path "p3_matrix::dense::DenseMatrix")
              []
              [
                Ty.associated_in_trait
                  "p3_commit::domain::PolynomialSpace"
                  []
                  []
                  (Ty.associated_in_trait
                    "p3_commit::pcs::Pcs"
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenge";
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenger"
                    ]
                    (Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Pcs")
                    "Domain")
                  "Val";
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.associated_in_trait
                      "p3_commit::domain::PolynomialSpace"
                      []
                      []
                      (Ty.associated_in_trait
                        "p3_commit::pcs::Pcs"
                        []
                        [
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenger"
                        ]
                        (Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Pcs")
                        "Domain")
                      "Val";
                    Ty.path "alloc::alloc::Global"
                  ]
              ];
            Ty.path "alloc::alloc::Global"
          ].
      
      (*     type PcsData = PcsData<SC>; *)
      Definition _PcsData (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ].
      
      (*     type RapPartialProvingKey = RapPartialProvingKey<SC>; *)
      Definition _RapPartialProvingKey (SC : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "openvm_stark_backend::interaction::RapPhaseSeq"
          []
          [
            Ty.associated_in_trait
              "p3_commit::domain::PolynomialSpace"
              []
              []
              (Ty.associated_in_trait
                "p3_commit::pcs::Pcs"
                []
                [
                  Ty.associated_in_trait
                    "openvm_stark_backend::config::StarkGenericConfig"
                    []
                    []
                    SC
                    "Challenge";
                  Ty.associated_in_trait
                    "openvm_stark_backend::config::StarkGenericConfig"
                    []
                    []
                    SC
                    "Challenger"
                ]
                (Ty.associated_in_trait
                  "openvm_stark_backend::config::StarkGenericConfig"
                  []
                  []
                  SC
                  "Pcs")
                "Domain")
              "Val";
            Ty.associated_in_trait
              "openvm_stark_backend::config::StarkGenericConfig"
              []
              []
              SC
              "Challenge";
            Ty.associated_in_trait
              "openvm_stark_backend::config::StarkGenericConfig"
              []
              []
              SC
              "Challenger"
          ]
          (Ty.associated_in_trait
            "openvm_stark_backend::config::StarkGenericConfig"
            []
            []
            SC
            "RapPhaseSeq")
          "PartialProvingKey".
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::ProverBackend"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *)
          [
            ("value_CHALLENGE_EXT_DEGREE", InstanceField.Method (value_CHALLENGE_EXT_DEGREE SC));
            ("Val", InstanceField.Ty (_Val SC));
            ("Challenge", InstanceField.Ty (_Challenge SC));
            ("OpeningProof", InstanceField.Ty (_OpeningProof SC));
            ("RapPartialProof", InstanceField.Ty (_RapPartialProof SC));
            ("Commitment", InstanceField.Ty (_Commitment SC));
            ("Challenger", InstanceField.Ty (_Challenger SC));
            ("Matrix", InstanceField.Ty (_Matrix SC));
            ("PcsData", InstanceField.Ty (_PcsData SC));
            ("RapPartialProvingKey", InstanceField.Ty (_RapPartialProvingKey SC))
          ].
    End Impl_openvm_stark_backend_prover_hal_ProverBackend_where_openvm_stark_backend_config_StarkGenericConfig_SC_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
    
    (* StructRecord
      {
        name := "PcsData";
        const_params := [];
        ty_params := [ "SC" ];
        fields :=
          [
            ("data",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                []
                [
                  Ty.associated_in_trait
                    "p3_commit::pcs::Pcs"
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenge";
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenger"
                    ]
                    (Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Pcs")
                    "ProverData";
                  Ty.path "alloc::alloc::Global"
                ]);
            ("log_trace_heights",
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ])
          ];
      } *)
    
    Module Impl_core_clone_Clone_where_openvm_stark_backend_config_StarkGenericConfig_SC_for_openvm_stark_backend_prover_cpu_PcsData_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ].
      
      (* Derivative *)
      Definition clone (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ] ],
                self
              |) in
            M.match_operator (|
              Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ],
              M.deref (| M.read (| self |) |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 :=
                      M.SubPointer.get_struct_record_field (|
                        γ,
                        "openvm_stark_backend::prover::cpu::PcsData",
                        "data"
                      |) in
                    let γ0_1 :=
                      M.SubPointer.get_struct_record_field (|
                        γ,
                        "openvm_stark_backend::prover::cpu::PcsData",
                        "log_trace_heights"
                      |) in
                    let __arg_0 :=
                      M.alloc (|
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "ProverData";
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        γ0_0
                      |) in
                    let __arg_1 :=
                      M.alloc (|
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ]
                          ],
                        γ0_1
                      |) in
                    Value.mkStructRecord
                      "openvm_stark_backend::prover::cpu::PcsData"
                      []
                      [ SC ]
                      [
                        ("data",
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "ProverData";
                                Ty.path "alloc::alloc::Global"
                              ],
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              [],
                              "clone",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| __arg_0 |) |) |) ]
                          |));
                        ("log_trace_heights",
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ],
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ],
                              [],
                              [],
                              "clone",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| __arg_1 |) |) |) ]
                          |))
                      ]))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self SC)
          (* Instance *) [ ("clone", InstanceField.Method (clone SC)) ].
    End Impl_core_clone_Clone_where_openvm_stark_backend_config_StarkGenericConfig_SC_for_openvm_stark_backend_prover_cpu_PcsData_SC.
    
    Module Impl_openvm_stark_backend_prover_cpu_PcsData_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ].
      
      (* derive_new::new *)
      Definition new (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ data; log_trace_heights ] =>
          ltac:(M.monadic
            (let data :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::sync::Arc")
                  []
                  [
                    Ty.associated_in_trait
                      "p3_commit::pcs::Pcs"
                      []
                      [
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenge";
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenger"
                      ]
                      (Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs")
                      "ProverData";
                    Ty.path "alloc::alloc::Global"
                  ],
                data
              |) in
            let log_trace_heights :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ],
                log_trace_heights
              |) in
            Value.mkStructRecord
              "openvm_stark_backend::prover::cpu::PcsData"
              []
              [ SC ]
              [ ("data", M.read (| data |)); ("log_trace_heights", M.read (| log_trace_heights |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new :
        forall (SC : Ty.t),
        M.IsAssociatedFunction.C (Self SC) "new" (new SC).
      Admitted.
      Global Typeclasses Opaque new.
    End Impl_openvm_stark_backend_prover_cpu_PcsData_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_MatrixDimensions_where_core_marker_Send_T_where_core_marker_Sync_T_where_core_clone_Clone_T_for_alloc_sync_Arc_p3_matrix_dense_DenseMatrix_T_alloc_vec_Vec_T_alloc_alloc_Global_alloc_alloc_Global.
      Definition Self (T : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "alloc::sync::Arc")
          []
          [
            Ty.apply
              (Ty.path "p3_matrix::dense::DenseMatrix")
              []
              [ T; Ty.apply (Ty.path "alloc::vec::Vec") [] [ T; Ty.path "alloc::alloc::Global" ] ];
            Ty.path "alloc::alloc::Global"
          ].
      
      (*
          fn height(&self) -> usize {
              self.deref().height()
          }
      *)
      Definition height (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::sync::Arc")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            T;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ],
                self
              |) in
            M.call_closure (|
              Ty.path "usize",
              M.get_trait_method (|
                "p3_matrix::Matrix",
                Ty.apply
                  (Ty.path "p3_matrix::dense::DenseMatrix")
                  []
                  [ T; Ty.apply (Ty.path "alloc::vec::Vec") [] [ T; Ty.path "alloc::alloc::Global" ]
                  ],
                [],
                [ T ],
                "height",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              T;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ T; Ty.path "alloc::alloc::Global" ]
                            ]
                        ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                T;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ T; Ty.path "alloc::alloc::Global" ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn width(&self) -> usize {
              self.deref().width()
          }
      *)
      Definition width (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::sync::Arc")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            T;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ],
                self
              |) in
            M.call_closure (|
              Ty.path "usize",
              M.get_trait_method (|
                "p3_matrix::Matrix",
                Ty.apply
                  (Ty.path "p3_matrix::dense::DenseMatrix")
                  []
                  [ T; Ty.apply (Ty.path "alloc::vec::Vec") [] [ T; Ty.path "alloc::alloc::Global" ]
                  ],
                [],
                [ T ],
                "width",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              T;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ T; Ty.path "alloc::alloc::Global" ]
                            ]
                        ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                T;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ T; Ty.path "alloc::alloc::Global" ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::MatrixDimensions"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [ ("height", InstanceField.Method (height T)); ("width", InstanceField.Method (width T))
          ].
    End Impl_openvm_stark_backend_prover_hal_MatrixDimensions_where_core_marker_Send_T_where_core_marker_Sync_T_where_core_clone_Clone_T_for_alloc_sync_Arc_p3_matrix_dense_DenseMatrix_T_alloc_vec_Vec_T_alloc_alloc_Global_alloc_alloc_Global.
    
    
    
    Module Impl_openvm_stark_backend_prover_hal_ProverDevice_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::ProverDevice"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ]
          (Self SC)
          (* Instance *) [].
    End Impl_openvm_stark_backend_prover_hal_ProverDevice_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_TraceCommitter_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      (*
          fn commit(&self, traces: &[Arc<RowMajorMatrix<Val<SC>>>]) -> (Com<SC>, PcsData<SC>) {
              let log_blowup_factor = self.log_blowup_factor;
              let pcs = self.pcs();
              let (log_trace_heights, traces_with_domains): (Vec<_>, Vec<_>) = traces
                  .iter()
                  .map(|matrix| {
                      let height = matrix.height();
                      let log_height: u8 = log2_strict_usize(height).try_into().unwrap();
                      // Recomputing the domain is lightweight
                      let domain = pcs.natural_domain_for_degree(height);
                      // pcs.commit takes the trace matrix and in the case of FRI, does in-place cosetDFT
                      // which requires resizing to a larger buffer size. Since we are cloning anyways,
                      // we should just allocate the larger size to avoid memory-reallocation
                      // ref: https://github.com/Plonky3/Plonky3/blob/8c8bbb4c17bd2b7ef2404338ab8f9036d5f08337/dft/src/traits.rs#L116
                      let trace_slice = &matrix.as_ref().values;
                      let new_buffer_size = trace_slice
                          .len()
                          .checked_shl(log_blowup_factor.try_into().unwrap())
                          .unwrap();
                      let mut new_buffer = Vec::with_capacity(new_buffer_size);
                      // SAFETY:
                      // - `trace_slice` is allocated for `trace_slice.len() * size_of::<F>` bytes, obviously
                      // - we just allocated `new_buffer` for at least `trace_slice.len() * size_of::<F>` bytes above (more if there's blowup)
                      // - both are slices of &[F] so alignment is guaranteed
                      // - `new_buffer` is newly allocated so non-overlapping with `trace_slice`
                      unsafe {
                          std::ptr::copy_nonoverlapping(
                              trace_slice.as_ptr(),
                              new_buffer.as_mut_ptr(),
                              trace_slice.len(),
                          );
                          new_buffer.set_len(trace_slice.len());
                      }
                      (
                          log_height,
                          (domain, RowMajorMatrix::new(new_buffer, matrix.width)),
                      )
                  })
                  .unzip();
              let (commit, data) = pcs.commit(traces_with_domains);
              (
                  commit,
                  PcsData {
                      data: Arc::new(data),
                      log_trace_heights,
                  },
              )
          }
      *)
      Definition commit (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self; traces ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            let traces :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "slice")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::domain::PolynomialSpace"
                                  []
                                  []
                                  (Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain")
                                  "Val";
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::domain::PolynomialSpace"
                                      []
                                      []
                                      (Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain")
                                      "Val";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ]
                  ],
                traces
              |) in
            M.read (|
              let~ log_blowup_factor : Ty.path "usize" :=
                M.read (|
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| self |) |),
                    "openvm_stark_backend::prover::cpu::CpuDevice",
                    "log_blowup_factor"
                  |)
                |) in
              let~ pcs :
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ],
                  M.get_associated_function (|
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ],
                    "pcs",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                |) in
              M.alloc (|
                Ty.tuple
                  [
                    Ty.associated_in_trait
                      "p3_commit::pcs::Pcs"
                      []
                      [
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenge";
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenger"
                      ]
                      (Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs")
                      "Commitment";
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ]
                  ],
                M.match_operator (|
                  Ty.tuple
                    [
                      Ty.associated_in_trait
                        "p3_commit::pcs::Pcs"
                        []
                        [
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenger"
                        ]
                        (Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Pcs")
                        "Commitment";
                      Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ]
                    ],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain";
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::domain::PolynomialSpace"
                                      []
                                      []
                                      (Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain")
                                      "Val";
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    M.call_closure (|
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val";
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::iter::adapters::map::Map")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::sync::Arc")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ];
                            Ty.function
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::sync::Arc")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ]
                              (Ty.tuple
                                [
                                  Ty.path "u8";
                                  Ty.tuple
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain";
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ])
                          ],
                        [],
                        [],
                        "unzip",
                        [],
                        [
                          Ty.path "u8";
                          Ty.tuple
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain";
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::domain::PolynomialSpace"
                                    []
                                    []
                                    (Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain")
                                    "Val";
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val";
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val";
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::map::Map")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::sync::Arc")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ];
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::sync::Arc")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ]
                                (Ty.tuple
                                  [
                                    Ty.path "u8";
                                    Ty.tuple
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain";
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ])
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::sync::Arc")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ],
                            [],
                            [],
                            "map",
                            [],
                            [
                              Ty.tuple
                                [
                                  Ty.path "u8";
                                  Ty.tuple
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain";
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ];
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::sync::Arc")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ]
                                (Ty.tuple
                                  [
                                    Ty.path "u8";
                                    Ty.tuple
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain";
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ])
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::sync::Arc")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::sync::Arc")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                "iter",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| traces |) |) |) ]
                            |);
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.tuple
                                          [
                                            Ty.path "u8";
                                            Ty.tuple
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain";
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::sync::Arc")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ],
                                          α0
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let matrix :=
                                                M.copy (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::sync::Arc")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ],
                                                  γ
                                                |) in
                                              M.read (|
                                                let~ height : Ty.path "usize" :=
                                                  M.call_closure (|
                                                    Ty.path "usize",
                                                    M.get_trait_method (|
                                                      "openvm_stark_backend::prover::hal::MatrixDimensions",
                                                      Ty.apply
                                                        (Ty.path "alloc::sync::Arc")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "height",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (| M.read (| matrix |) |)
                                                      |)
                                                    ]
                                                  |) in
                                                let~ log_height : Ty.path "u8" :=
                                                  M.call_closure (|
                                                    Ty.path "u8",
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "core::result::Result")
                                                        []
                                                        [
                                                          Ty.path "u8";
                                                          Ty.path
                                                            "core::num::error::TryFromIntError"
                                                        ],
                                                      "unwrap",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          []
                                                          [
                                                            Ty.path "u8";
                                                            Ty.path
                                                              "core::num::error::TryFromIntError"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::convert::TryInto",
                                                          Ty.path "usize",
                                                          [],
                                                          [ Ty.path "u8" ],
                                                          "try_into",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_function (|
                                                              "p3_util::log2_strict_usize",
                                                              [],
                                                              []
                                                            |),
                                                            [ M.read (| height |) ]
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                  |) in
                                                let~ domain :
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain" :=
                                                  M.call_closure (|
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain",
                                                    M.get_trait_method (|
                                                      "p3_commit::pcs::Pcs",
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ],
                                                      "natural_domain_for_degree",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (| M.read (| pcs |) |)
                                                      |);
                                                      M.read (| height |)
                                                    ]
                                                  |) in
                                                let~ trace_slice :
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ] :=
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.SubPointer.get_struct_record_field (|
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::convert::AsRef",
                                                            Ty.apply
                                                              (Ty.path "alloc::sync::Arc")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ],
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ],
                                                            "as_ref",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| matrix |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |),
                                                      "p3_matrix::dense::DenseMatrix",
                                                      "values"
                                                    |)
                                                  |) in
                                                let~ new_buffer_size : Ty.path "usize" :=
                                                  M.call_closure (|
                                                    Ty.path "usize",
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [ Ty.path "usize" ],
                                                      "unwrap",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [ Ty.path "usize" ],
                                                        M.get_associated_function (|
                                                          Ty.path "usize",
                                                          "checked_shl",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "len",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.read (| trace_slice |)
                                                                |)
                                                              |)
                                                            ]
                                                          |);
                                                          M.call_closure (|
                                                            Ty.path "u32",
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "core::result::Result")
                                                                []
                                                                [
                                                                  Ty.path "u32";
                                                                  Ty.path
                                                                    "core::num::error::TryFromIntError"
                                                                ],
                                                              "unwrap",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "core::result::Result")
                                                                  []
                                                                  [
                                                                    Ty.path "u32";
                                                                    Ty.path
                                                                      "core::num::error::TryFromIntError"
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::convert::TryInto",
                                                                  Ty.path "usize",
                                                                  [],
                                                                  [ Ty.path "u32" ],
                                                                  "try_into",
                                                                  [],
                                                                  []
                                                                |),
                                                                [ M.read (| log_blowup_factor |) ]
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                  |) in
                                                let~ new_buffer :
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.path "alloc::alloc::Global"
                                                      ] :=
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      "with_capacity",
                                                      [],
                                                      []
                                                    |),
                                                    [ M.read (| new_buffer_size |) ]
                                                  |) in
                                                let~ _ : Ty.tuple [] :=
                                                  M.read (|
                                                    let~ _ : Ty.tuple [] :=
                                                      M.call_closure (|
                                                        Ty.tuple [],
                                                        M.get_function (|
                                                          "core::intrinsics::copy_nonoverlapping",
                                                          [],
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val"
                                                          ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "*const")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "as_ptr",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.read (| trace_slice |)
                                                                |)
                                                              |)
                                                            ]
                                                          |);
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "*mut")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "as_mut_ptr",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                new_buffer
                                                              |)
                                                            ]
                                                          |);
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "len",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.read (| trace_slice |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |) in
                                                    let~ _ : Ty.tuple [] :=
                                                      M.call_closure (|
                                                        Ty.tuple [],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          "set_len",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            new_buffer
                                                          |);
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "len",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.read (| trace_slice |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |) in
                                                    M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                                  |) in
                                                M.alloc (|
                                                  Ty.tuple
                                                    [
                                                      Ty.path "u8";
                                                      Ty.tuple
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain";
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ]
                                                    ],
                                                  Value.Tuple
                                                    [
                                                      M.read (| log_height |);
                                                      Value.Tuple
                                                        [
                                                          M.read (| domain |);
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val";
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              "new",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.read (| new_buffer |);
                                                              M.read (|
                                                                M.SubPointer.get_struct_record_field (|
                                                                  M.deref (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                []
                                                                                []
                                                                                (Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Domain")
                                                                                "Val";
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                    []
                                                                                    []
                                                                                    (Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "Domain")
                                                                                    "Val";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::sync::Arc")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                  []
                                                                                  []
                                                                                  (Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "Domain")
                                                                                  "Val";
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "deref",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.read (| matrix |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |),
                                                                  "p3_matrix::dense::DenseMatrix",
                                                                  "width"
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                    ]
                                                |)
                                              |)))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |)
                      ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let log_trace_heights :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ],
                            γ0_0
                          |) in
                        let traces_with_domains :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain";
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            γ0_1
                          |) in
                        M.match_operator (|
                          Ty.tuple
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Commitment";
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ],
                          M.alloc (|
                            Ty.tuple
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Commitment";
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "ProverData"
                              ],
                            M.call_closure (|
                              Ty.tuple
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Commitment";
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ],
                              M.get_trait_method (|
                                "p3_commit::pcs::Pcs",
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs",
                                [],
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ],
                                "commit",
                                [],
                                []
                              |),
                              [
                                M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| pcs |) |) |);
                                M.read (| traces_with_domains |)
                              ]
                            |)
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                let commit :=
                                  M.copy (|
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Commitment",
                                    γ0_0
                                  |) in
                                let data :=
                                  M.copy (|
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData",
                                    γ0_1
                                  |) in
                                Value.Tuple
                                  [
                                    M.read (| commit |);
                                    Value.mkStructRecord
                                      "openvm_stark_backend::prover::cpu::PcsData"
                                      []
                                      [ SC ]
                                      [
                                        ("data",
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "alloc::sync::Arc")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "ProverData";
                                                Ty.path "alloc::alloc::Global"
                                              ],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "alloc::sync::Arc")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "ProverData";
                                                  Ty.path "alloc::alloc::Global"
                                                ],
                                              "new",
                                              [],
                                              []
                                            |),
                                            [ M.read (| data |) ]
                                          |));
                                        ("log_trace_heights", M.read (| log_trace_heights |))
                                      ]
                                  ]))
                          ]
                        |)))
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::TraceCommitter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ]
          (Self SC)
          (* Instance *) [ ("commit", InstanceField.Method (commit SC)) ].
    End Impl_openvm_stark_backend_prover_hal_TraceCommitter_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_RapPartialProver_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      (*
          fn partially_prove(
              &self,
              challenger: &mut SC::Challenger,
              mpk: &DeviceMultiStarkProvingKey<CpuBackend<SC>>,
              trace_views: Vec<AirView<Arc<RowMajorMatrix<Val<SC>>>, Val<SC>>>,
          ) -> (
              Option<RapPhaseSeqPartialProof<SC>>,
              ProverDataAfterRapPhases<CpuBackend<SC>>,
          ) {
              let num_airs = mpk.per_air.len();
              assert_eq!(num_airs, trace_views.len());
      
              let (constraints_per_air, rap_pk_per_air): (Vec<_>, Vec<_>) = mpk
                  .per_air
                  .iter()
                  .map(|pk| {
                      (
                          SymbolicConstraints::from(&pk.vk.symbolic_constraints),
                          &pk.rap_partial_pk,
                      )
                  })
                  .unzip();
      
              let trace_views = zip(&mpk.per_air, trace_views)
                  .map(|(pk, v)| PairView {
                      log_trace_height: log2_strict_usize(v.partitioned_main.first().unwrap().height())
                          as u8,
                      preprocessed: pk.preprocessed_data.as_ref().map(|p| p.trace.clone()), // Arc::clone for now
                      partitioned_main: v.partitioned_main,
                      public_values: v.public_values,
                  })
                  .collect_vec();
              let (rap_phase_seq_proof, rap_phase_seq_data) = self
                  .config()
                  .rap_phase_seq()
                  .partially_prove(
                      challenger,
                      &constraints_per_air.iter().collect_vec(),
                      &rap_pk_per_air,
                      trace_views,
                  )
                  .map_or((None, None), |(p, d)| (Some(p), Some(d)));
      
              let mvk_view = mpk.vk_view();
      
              let mut perm_matrix_idx = 0usize;
              let rap_views_per_phase;
              let perm_trace_per_air = if let Some(phase_data) = rap_phase_seq_data {
                  assert_eq!(mvk_view.num_phases(), 1);
                  assert_eq!(
                      mvk_view.num_challenges_in_phase(0),
                      phase_data.challenges.len()
                  );
                  let perm_views = zip_eq(
                      &phase_data.after_challenge_trace_per_air,
                      phase_data.exposed_values_per_air,
                  )
                  .map(|(perm_trace, exposed_values)| {
                      let mut matrix_idx = None;
                      if perm_trace.is_some() {
                          matrix_idx = Some(perm_matrix_idx);
                          perm_matrix_idx += 1;
                      }
                      RapSinglePhaseView {
                          inner: matrix_idx,
                          challenges: phase_data.challenges.clone(),
                          exposed_values: exposed_values.unwrap_or_default(),
                      }
                  })
                  .collect_vec();
                  rap_views_per_phase = vec![perm_views]; // 1 challenge phase
                  phase_data.after_challenge_trace_per_air
              } else {
                  assert_eq!(mvk_view.num_phases(), 0);
                  rap_views_per_phase = vec![];
                  vec![None; num_airs]
              };
      
              // Commit to permutation traces: this means only 1 challenge round right now
              // One shared commit for all permutation traces
              let committed_pcs_data_per_phase: Vec<(Com<SC>, PcsData<SC>)> =
                  metrics_span("perm_trace_commit_time_ms", || {
                      let (log_trace_heights, flattened_traces): (Vec<_>, Vec<_>) = perm_trace_per_air
                          .into_iter()
                          .flatten()
                          .map(|perm_trace| {
                              // SAFETY: `Challenge` is assumed to be extension field of `F`
                              // with memory layout `[F; Challenge::D]`
                              let trace = unsafe { transmute_to_base(perm_trace) };
                              let height = trace.height();
                              let log_height: u8 = log2_strict_usize(height).try_into().unwrap();
                              let domain = self.pcs().natural_domain_for_degree(height);
                              (log_height, (domain, trace))
                          })
                          .collect();
                      // Only commit if there are permutation traces
                      if !flattened_traces.is_empty() {
                          let (commit, data) = self.pcs().commit(flattened_traces);
                          Some((commit, PcsData::new(Arc::new(data), log_trace_heights)))
                      } else {
                          None
                      }
                  })
                  .into_iter()
                  .collect();
              let prover_view = ProverDataAfterRapPhases {
                  committed_pcs_data_per_phase,
                  rap_views_per_phase,
              };
              (rap_phase_seq_proof, prover_view)
          }
      *)
      Definition partially_prove
          (SC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self; challenger; mpk; trace_views ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            let challenger :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&mut")
                  []
                  [
                    Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Challenger"
                  ],
                challenger
              |) in
            let mpk :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey")
                      []
                      [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ]
                      ]
                  ],
                mpk
              |) in
            let trace_views :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::types::AirView")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::domain::PolynomialSpace"
                                  []
                                  []
                                  (Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain")
                                  "Val";
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::domain::PolynomialSpace"
                                      []
                                      []
                                      (Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain")
                                      "Val";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.associated_in_trait
                          "p3_commit::domain::PolynomialSpace"
                          []
                          []
                          (Ty.associated_in_trait
                            "p3_commit::pcs::Pcs"
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Pcs")
                            "Domain")
                          "Val"
                      ];
                    Ty.path "alloc::alloc::Global"
                  ],
                trace_views
              |) in
            M.read (|
              let~ num_airs : Ty.path "usize" :=
                M.call_closure (|
                  Ty.path "usize",
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                              []
                              [ SC ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ],
                    "len",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| mpk |) |),
                        "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey",
                        "per_air"
                      |)
                    |)
                  ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.match_operator (|
                  Ty.tuple [],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                        Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                      ],
                    Value.Tuple
                      [
                        M.borrow (| Pointer.Kind.Ref, num_airs |);
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Ty.path "usize",
                            M.call_closure (|
                              Ty.path "usize",
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::types::AirView")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::sync::Arc")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ],
                                "len",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, trace_views |) ]
                            |)
                          |)
                        |)
                      ]
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let left_val :=
                          M.copy (| Ty.apply (Ty.path "&") [] [ Ty.path "usize" ], γ0_0 |) in
                        let right_val :=
                          M.copy (| Ty.apply (Ty.path "&") [] [ Ty.path "usize" ], γ0_1 |) in
                        M.match_operator (|
                          Ty.tuple [],
                          M.alloc (| Ty.tuple [], Value.Tuple [] |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ :=
                                  M.use
                                    (M.alloc (|
                                      Ty.path "bool",
                                      UnOp.not (|
                                        M.call_closure (|
                                          Ty.path "bool",
                                          BinOp.eq,
                                          [
                                            M.read (| M.deref (| M.read (| left_val |) |) |);
                                            M.read (| M.deref (| M.read (| right_val |) |) |)
                                          ]
                                        |)
                                      |)
                                    |)) in
                                let _ :=
                                  is_constant_or_break_match (|
                                    M.read (| γ |),
                                    Value.Bool true
                                  |) in
                                M.never_to_any (|
                                  M.read (|
                                    let~ kind : Ty.path "core::panicking::AssertKind" :=
                                      Value.StructTuple
                                        "core::panicking::AssertKind::Eq"
                                        []
                                        []
                                        [] in
                                    M.alloc (|
                                      Ty.path "never",
                                      M.call_closure (|
                                        Ty.path "never",
                                        M.get_function (|
                                          "core::panicking::assert_failed",
                                          [],
                                          [ Ty.path "usize"; Ty.path "usize" ]
                                        |),
                                        [
                                          M.read (| kind |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| left_val |) |)
                                              |)
                                            |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| right_val |) |)
                                              |)
                                            |)
                                          |);
                                          Value.StructTuple
                                            "core::option::Option::None"
                                            []
                                            [ Ty.path "core::fmt::Arguments" ]
                                            []
                                        ]
                                      |)
                                    |)
                                  |)
                                |)));
                            fun γ => ltac:(M.monadic (Value.Tuple []))
                          ]
                        |)))
                  ]
                |) in
              M.alloc (|
                Ty.tuple
                  [
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [
                        Ty.associated_in_trait
                          "openvm_stark_backend::interaction::RapPhaseSeq"
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::domain::PolynomialSpace"
                              []
                              []
                              (Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain")
                              "Val";
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenge";
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenger"
                          ]
                          (Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "RapPhaseSeq")
                          "PartialProof"
                      ];
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                      []
                      [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ]
                      ]
                  ],
                M.match_operator (|
                  Ty.tuple
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [
                          Ty.associated_in_trait
                            "openvm_stark_backend::interaction::RapPhaseSeq"
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::domain::PolynomialSpace"
                                []
                                []
                                (Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain")
                                "Val";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "RapPhaseSeq")
                            "PartialProof"
                        ];
                      Ty.apply
                        (Ty.path "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                            []
                            [ SC ]
                        ]
                    ],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path
                                "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::domain::PolynomialSpace"
                                  []
                                  []
                                  (Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain")
                                  "Val"
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.associated_in_trait
                                  "openvm_stark_backend::interaction::RapPhaseSeq"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::domain::PolynomialSpace"
                                      []
                                      []
                                      (Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain")
                                      "Val";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "RapPhaseSeq")
                                  "PartialProvingKey"
                              ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    M.call_closure (|
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::domain::PolynomialSpace"
                                    []
                                    []
                                    (Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain")
                                    "Val"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::interaction::RapPhaseSeq"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "RapPhaseSeq")
                                    "PartialProvingKey"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::iter::adapters::map::Map")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                      []
                                      [ SC ]
                                  ]
                              ];
                            Ty.function
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                          []
                                          [ SC ]
                                      ]
                                  ]
                              ]
                              (Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val"
                                    ];
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::interaction::RapPhaseSeq"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "RapPhaseSeq")
                                        "PartialProvingKey"
                                    ]
                                ])
                          ],
                        [],
                        [],
                        "unzip",
                        [],
                        [
                          Ty.apply
                            (Ty.path
                              "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::domain::PolynomialSpace"
                                []
                                []
                                (Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain")
                                "Val"
                            ];
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::interaction::RapPhaseSeq"
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::domain::PolynomialSpace"
                                    []
                                    []
                                    (Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain")
                                    "Val";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "RapPhaseSeq")
                                "PartialProvingKey"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::domain::PolynomialSpace"
                                    []
                                    []
                                    (Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain")
                                    "Val"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::interaction::RapPhaseSeq"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "RapPhaseSeq")
                                    "PartialProvingKey"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::map::Map")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                        []
                                        [ SC ]
                                    ]
                                ];
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                            []
                                            [ SC ]
                                        ]
                                    ]
                                ]
                                (Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val"
                                      ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::interaction::RapPhaseSeq"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "RapPhaseSeq")
                                          "PartialProvingKey"
                                      ]
                                  ])
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                      []
                                      [ SC ]
                                  ]
                              ],
                            [],
                            [],
                            "map",
                            [],
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val"
                                    ];
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::interaction::RapPhaseSeq"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "RapPhaseSeq")
                                        "PartialProvingKey"
                                    ]
                                ];
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                            []
                                            [ SC ]
                                        ]
                                    ]
                                ]
                                (Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val"
                                      ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::interaction::RapPhaseSeq"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "RapPhaseSeq")
                                          "PartialProvingKey"
                                      ]
                                  ])
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                        []
                                        [ SC ]
                                    ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                          []
                                          [ SC ]
                                      ]
                                  ],
                                "iter",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "slice")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::deref::Deref",
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ],
                                        [],
                                        [],
                                        "deref",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| mpk |) |),
                                            "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey",
                                            "per_air"
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)
                                |)
                              ]
                            |);
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val"
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::interaction::RapPhaseSeq"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "RapPhaseSeq")
                                                  "PartialProvingKey"
                                              ]
                                          ],
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ],
                                          α0
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let pk :=
                                                M.copy (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                                            []
                                                            [ SC ]
                                                        ]
                                                    ],
                                                  γ
                                                |) in
                                              Value.Tuple
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val"
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::convert::From",
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val"
                                                        ],
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::air_builders::symbolic::dag::SymbolicConstraintsDag")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val"
                                                              ]
                                                          ]
                                                      ],
                                                      "from",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (|
                                                            M.read (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.deref (| M.read (| pk |) |),
                                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                                "vk"
                                                              |)
                                                            |)
                                                          |),
                                                          "openvm_stark_backend::keygen::types::StarkVerifyingKey",
                                                          "symbolic_constraints"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.SubPointer.get_struct_record_field (|
                                                      M.deref (| M.read (| pk |) |),
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                      "rap_partial_pk"
                                                    |)
                                                  |)
                                                ]))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |)
                      ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let constraints_per_air :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::domain::PolynomialSpace"
                                      []
                                      []
                                      (Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain")
                                      "Val"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            γ0_0
                          |) in
                        let rap_pk_per_air :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::interaction::RapPhaseSeq"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "RapPhaseSeq")
                                      "PartialProvingKey"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            γ0_1
                          |) in
                        M.read (|
                          let~ trace_views :
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::types::PairView")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::sync::Arc")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ] :=
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::types::PairView")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::sync::Arc")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_trait_method (|
                                "itertools::Itertools",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::into_iter::IntoIter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::AirView")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::sync::Arc")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val"
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::AirView")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::sync::Arc")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val"
                                              ]
                                          ]
                                      ]
                                      (Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::types::PairView")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val"
                                        ])
                                  ],
                                [],
                                [],
                                "collect_vec",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::into_iter::IntoIter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::AirView")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::sync::Arc")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::AirView")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::sync::Arc")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val"
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::types::PairView")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::sync::Arc")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val"
                                          ])
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::into_iter::IntoIter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::AirView")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::sync::Arc")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val"
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    [],
                                    [],
                                    "map",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::types::PairView")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val"
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::AirView")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::sync::Arc")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val"
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::types::PairView")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::sync::Arc")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::domain::PolynomialSpace"
                                                          []
                                                          []
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                          "Val";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val"
                                          ])
                                    ]
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::into_iter::IntoIter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::AirView")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::sync::Arc")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      M.get_function (|
                                        "core::iter::adapters::zip::zip",
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::AirView")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::sync::Arc")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| mpk |) |),
                                            "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey",
                                            "per_air"
                                          |)
                                        |);
                                        M.read (| trace_views |)
                                      ]
                                    |);
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::PairView")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::sync::Arc")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val";
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val"
                                                  ],
                                                M.alloc (|
                                                  Ty.tuple
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                                []
                                                                [ SC ]
                                                            ]
                                                        ];
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::types::AirView")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::sync::Arc")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val"
                                                        ]
                                                    ],
                                                  α0
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let pk :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                                    []
                                                                    [ SC ]
                                                                ]
                                                            ],
                                                          γ0_0
                                                        |) in
                                                      let v :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::AirView")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::sync::Arc")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val";
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val"
                                                            ],
                                                          γ0_1
                                                        |) in
                                                      Value.mkStructRecord
                                                        "openvm_stark_backend::prover::types::PairView"
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::sync::Arc")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val"
                                                        ]
                                                        [
                                                          ("log_trace_height",
                                                            M.cast
                                                              (Ty.path "u8")
                                                              (M.call_closure (|
                                                                Ty.path "usize",
                                                                M.get_function (|
                                                                  "p3_util::log2_strict_usize",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    Ty.path "usize",
                                                                    M.get_trait_method (|
                                                                      "openvm_stark_backend::prover::hal::MatrixDimensions",
                                                                      Ty.apply
                                                                        (Ty.path "alloc::sync::Arc")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                []
                                                                                []
                                                                                (Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Domain")
                                                                                "Val";
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                    []
                                                                                    []
                                                                                    (Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "Domain")
                                                                                    "Val";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "height",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::sync::Arc")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::domain::PolynomialSpace"
                                                                                              []
                                                                                              []
                                                                                              (Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain")
                                                                                              "Val";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::sync::Arc")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ],
                                                                              "unwrap",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::sync::Arc")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                  []
                                                                                                  []
                                                                                                  (Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Domain")
                                                                                                  "Val";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                      []
                                                                                                      []
                                                                                                      (Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "Domain")
                                                                                                      "Val";
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                M.get_associated_function (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::sync::Arc")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ],
                                                                                  "first",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::sync::Arc")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                                          []
                                                                                                          []
                                                                                                          (Ty.associated_in_trait
                                                                                                            "p3_commit::pcs::Pcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenge";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenger"
                                                                                                            ]
                                                                                                            (Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Pcs")
                                                                                                            "Domain")
                                                                                                          "Val";
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::domain::PolynomialSpace"
                                                                                                              []
                                                                                                              []
                                                                                                              (Ty.associated_in_trait
                                                                                                                "p3_commit::pcs::Pcs"
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Challenge";
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Challenger"
                                                                                                                ]
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Pcs")
                                                                                                                "Domain")
                                                                                                              "Val";
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::deref::Deref",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::sync::Arc")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::domain::PolynomialSpace"
                                                                                                        []
                                                                                                        []
                                                                                                        (Ty.associated_in_trait
                                                                                                          "p3_commit::pcs::Pcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge";
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenger"
                                                                                                          ]
                                                                                                          (Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Pcs")
                                                                                                          "Domain")
                                                                                                        "Val";
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                                            []
                                                                                                            []
                                                                                                            (Ty.associated_in_trait
                                                                                                              "p3_commit::pcs::Pcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenge";
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenger"
                                                                                                              ]
                                                                                                              (Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Pcs")
                                                                                                              "Domain")
                                                                                                            "Val";
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          [],
                                                                                          [],
                                                                                          "deref",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              v,
                                                                                              "openvm_stark_backend::prover::types::AirView",
                                                                                              "partitioned_main"
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |)));
                                                          ("preprocessed",
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::sync::Arc")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val";
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                []
                                                                                []
                                                                                (Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Domain")
                                                                                "Val";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::sync::Arc")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                                              []
                                                                              [ SC ]
                                                                          ]
                                                                      ]
                                                                  ],
                                                                "map",
                                                                [],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::sync::Arc")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val";
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                []
                                                                                []
                                                                                (Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Domain")
                                                                                "Val";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.function
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::sync::Arc")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::domain::PolynomialSpace"
                                                                                        []
                                                                                        []
                                                                                        (Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "Domain")
                                                                                        "Val";
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                            []
                                                                                            []
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain")
                                                                                            "Val";
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                                []
                                                                                [ SC ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.apply
                                                                      (Ty.path "alloc::sync::Arc")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::domain::PolynomialSpace"
                                                                              []
                                                                              []
                                                                              (Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "Domain")
                                                                              "Val";
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                  []
                                                                                  []
                                                                                  (Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "Domain")
                                                                                  "Val";
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ])
                                                                ]
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "core::option::Option")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::sync::Arc")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::domain::PolynomialSpace"
                                                                                        []
                                                                                        []
                                                                                        (Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "Domain")
                                                                                        "Val";
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                            []
                                                                                            []
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain")
                                                                                            "Val";
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                                []
                                                                                [ SC ]
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::sync::Arc")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                                              []
                                                                              [ SC ]
                                                                          ]
                                                                      ],
                                                                    "as_ref",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        M.deref (|
                                                                          M.read (| pk |)
                                                                        |),
                                                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                                        "preprocessed_data"
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.closure
                                                                  (fun γ =>
                                                                    ltac:(M.monadic
                                                                      match γ with
                                                                      | [ α0 ] =>
                                                                        ltac:(M.monadic
                                                                          (M.match_operator (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::sync::Arc")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            M.alloc (|
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::sync::Arc")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                                                        []
                                                                                        [ SC ]
                                                                                    ]
                                                                                ],
                                                                              α0
                                                                            |),
                                                                            [
                                                                              fun γ =>
                                                                                ltac:(M.monadic
                                                                                  (let p :=
                                                                                    M.copy (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::sync::Arc")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::domain::PolynomialSpace"
                                                                                                        []
                                                                                                        []
                                                                                                        (Ty.associated_in_trait
                                                                                                          "p3_commit::pcs::Pcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge";
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenger"
                                                                                                          ]
                                                                                                          (Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Pcs")
                                                                                                          "Domain")
                                                                                                        "Val";
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                                            []
                                                                                                            []
                                                                                                            (Ty.associated_in_trait
                                                                                                              "p3_commit::pcs::Pcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenge";
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenger"
                                                                                                              ]
                                                                                                              (Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Pcs")
                                                                                                              "Domain")
                                                                                                            "Val";
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                                                []
                                                                                                [ SC
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      γ
                                                                                    |) in
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::sync::Arc")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::domain::PolynomialSpace"
                                                                                              []
                                                                                              []
                                                                                              (Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain")
                                                                                              "Val";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                  []
                                                                                                  []
                                                                                                  (Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Domain")
                                                                                                  "Val";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    M.get_trait_method (|
                                                                                      "core::clone::Clone",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::sync::Arc")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ],
                                                                                      [],
                                                                                      [],
                                                                                      "clone",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              p
                                                                                            |)
                                                                                          |),
                                                                                          "openvm_stark_backend::prover::types::SingleCommitPreimage",
                                                                                          "trace"
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)))
                                                                            ]
                                                                          |)))
                                                                      | _ =>
                                                                        M.impossible
                                                                          "wrong number of arguments"
                                                                      end))
                                                              ]
                                                            |));
                                                          ("partitioned_main",
                                                            M.read (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                v,
                                                                "openvm_stark_backend::prover::types::AirView",
                                                                "partitioned_main"
                                                              |)
                                                            |));
                                                          ("public_values",
                                                            M.read (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                v,
                                                                "openvm_stark_backend::prover::types::AirView",
                                                                "public_values"
                                                              |)
                                                            |))
                                                        ]))
                                                ]
                                              |)))
                                          | _ => M.impossible "wrong number of arguments"
                                          end))
                                  ]
                                |)
                              ]
                            |) in
                          M.alloc (|
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "core::option::Option")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::interaction::RapPhaseSeq"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "RapPhaseSeq")
                                      "PartialProof"
                                  ];
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                      []
                                      [ SC ]
                                  ]
                              ],
                            M.match_operator (|
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::interaction::RapPhaseSeq"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "RapPhaseSeq")
                                        "PartialProof"
                                    ];
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                        []
                                        [ SC ]
                                    ]
                                ],
                              M.alloc (|
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "core::option::Option")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::interaction::RapPhaseSeq"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "RapPhaseSeq")
                                          "PartialProof"
                                      ];
                                    Ty.apply
                                      (Ty.path "core::option::Option")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_stark_backend::interaction::RapPhaseProverData")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge"
                                          ]
                                      ]
                                  ],
                                M.call_closure (|
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::interaction::RapPhaseSeq"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "RapPhaseSeq")
                                            "PartialProof"
                                        ];
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::interaction::RapPhaseProverData")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge"
                                            ]
                                        ]
                                    ],
                                  M.get_associated_function (|
                                    Ty.apply
                                      (Ty.path "core::option::Option")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::interaction::RapPhaseSeq"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "RapPhaseSeq")
                                              "PartialProof";
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::interaction::RapPhaseProverData")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge"
                                              ]
                                          ]
                                      ],
                                    "map_or",
                                    [],
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::interaction::RapPhaseSeq"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "RapPhaseSeq")
                                                "PartialProof"
                                            ];
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::interaction::RapPhaseProverData")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge"
                                                ]
                                            ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::interaction::RapPhaseSeq"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "RapPhaseSeq")
                                                "PartialProof";
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::interaction::RapPhaseProverData")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge"
                                                ]
                                            ]
                                        ]
                                        (Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "core::option::Option")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::interaction::RapPhaseSeq"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "RapPhaseSeq")
                                                  "PartialProof"
                                              ];
                                            Ty.apply
                                              (Ty.path "core::option::Option")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::interaction::RapPhaseProverData")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge"
                                                  ]
                                              ]
                                          ])
                                    ]
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::interaction::RapPhaseSeq"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "RapPhaseSeq")
                                                "PartialProof";
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::interaction::RapPhaseProverData")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge"
                                                ]
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "openvm_stark_backend::interaction::RapPhaseSeq",
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "RapPhaseSeq",
                                        [],
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ],
                                        "partially_prove",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "RapPhaseSeq"
                                                ],
                                              M.get_trait_method (|
                                                "openvm_stark_backend::config::StarkGenericConfig",
                                                SC,
                                                [],
                                                [],
                                                "rap_phase_seq",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply (Ty.path "&") [] [ SC ],
                                                      M.get_associated_function (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::CpuDevice")
                                                          []
                                                          [ SC ],
                                                        "config",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (| M.read (| self |) |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.MutRef,
                                          M.deref (| M.read (| challenger |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val"
                                                            ]
                                                        ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          M.get_trait_method (|
                                                            "itertools::Itertools",
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val"
                                                                  ]
                                                              ],
                                                            [],
                                                            [],
                                                            "collect_vec",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val"
                                                                    ]
                                                                ],
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val"
                                                                      ]
                                                                  ],
                                                                "iter",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                    []
                                                                                    []
                                                                                    (Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "Domain")
                                                                                    "Val"
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::air_builders::symbolic::SymbolicConstraints")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                  []
                                                                                  []
                                                                                  (Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "Domain")
                                                                                  "Val"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "deref",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          constraints_per_air
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::interaction::RapPhaseSeq"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "RapPhaseSeq")
                                                            "PartialProvingKey"
                                                        ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::interaction::RapPhaseSeq"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "RapPhaseSeq")
                                                          "PartialProvingKey"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (| Pointer.Kind.Ref, rap_pk_per_air |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |);
                                        M.read (| trace_views |)
                                      ]
                                    |);
                                    Value.Tuple
                                      [
                                        Value.StructTuple
                                          "core::option::Option::None"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::interaction::RapPhaseSeq"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "RapPhaseSeq")
                                              "PartialProof"
                                          ]
                                          [];
                                        Value.StructTuple
                                          "core::option::Option::None"
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::interaction::RapPhaseProverData")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge"
                                              ]
                                          ]
                                          []
                                      ];
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::interaction::RapPhaseSeq"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "RapPhaseSeq")
                                                          "PartialProof"
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::interaction::RapPhaseProverData")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge"
                                                          ]
                                                      ]
                                                  ],
                                                M.alloc (|
                                                  Ty.tuple
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::interaction::RapPhaseSeq"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "RapPhaseSeq")
                                                        "PartialProof";
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::interaction::RapPhaseProverData")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge"
                                                        ]
                                                    ],
                                                  α0
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let p :=
                                                        M.copy (|
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::interaction::RapPhaseSeq"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "RapPhaseSeq")
                                                            "PartialProof",
                                                          γ0_0
                                                        |) in
                                                      let d :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::interaction::RapPhaseProverData")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge"
                                                            ],
                                                          γ0_1
                                                        |) in
                                                      Value.Tuple
                                                        [
                                                          Value.StructTuple
                                                            "core::option::Option::Some"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::interaction::RapPhaseSeq"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "RapPhaseSeq")
                                                                "PartialProof"
                                                            ]
                                                            [ M.read (| p |) ];
                                                          Value.StructTuple
                                                            "core::option::Option::Some"
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::interaction::RapPhaseProverData")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ]
                                                            ]
                                                            [ M.read (| d |) ]
                                                        ]))
                                                ]
                                              |)))
                                          | _ => M.impossible "wrong number of arguments"
                                          end))
                                  ]
                                |)
                              |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                    let rap_phase_seq_proof :=
                                      M.copy (|
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::interaction::RapPhaseSeq"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "RapPhaseSeq")
                                              "PartialProof"
                                          ],
                                        γ0_0
                                      |) in
                                    let rap_phase_seq_data :=
                                      M.copy (|
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::interaction::RapPhaseProverData")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge"
                                              ]
                                          ],
                                        γ0_1
                                      |) in
                                    M.read (|
                                      let~ mvk_view :
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::keygen::view::MultiStarkVerifyingKeyView")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Commitment"
                                            ] :=
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::keygen::view::MultiStarkVerifyingKeyView")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Commitment"
                                            ],
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ],
                                            "vk_view",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| mpk |) |)
                                            |)
                                          ]
                                        |) in
                                      let~ perm_matrix_idx : Ty.path "usize" :=
                                        Value.Integer IntegerKind.Usize 0 in
                                      let rap_views_per_phase :=
                                        M.read (| Value.DeclaredButUndefined |) in
                                      let~ perm_trace_per_air :
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ] :=
                                        M.match_operator (|
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ := rap_phase_seq_data in
                                                let γ0_0 :=
                                                  M.SubPointer.get_struct_tuple_field (|
                                                    γ,
                                                    "core::option::Option::Some",
                                                    0
                                                  |) in
                                                let phase_data :=
                                                  M.copy (|
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::interaction::RapPhaseProverData")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge"
                                                      ],
                                                    γ0_0
                                                  |) in
                                                M.read (|
                                                  let~ _ : Ty.tuple [] :=
                                                    M.match_operator (|
                                                      Ty.tuple [],
                                                      M.alloc (|
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "usize" ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "usize" ]
                                                          ],
                                                        Value.Tuple
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.path "usize",
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::keygen::view::MultiStarkVerifyingKeyView")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val";
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment"
                                                                      ],
                                                                    "num_phases",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      mvk_view
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.path "usize",
                                                                Value.Integer IntegerKind.Usize 1
                                                              |)
                                                            |)
                                                          ]
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                0
                                                              |) in
                                                            let γ0_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                1
                                                              |) in
                                                            let left_val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "usize" ],
                                                                γ0_0
                                                              |) in
                                                            let right_val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "usize" ],
                                                                γ0_1
                                                              |) in
                                                            M.match_operator (|
                                                              Ty.tuple [],
                                                              M.alloc (|
                                                                Ty.tuple [],
                                                                Value.Tuple []
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ :=
                                                                      M.use
                                                                        (M.alloc (|
                                                                          Ty.path "bool",
                                                                          UnOp.not (|
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              BinOp.eq,
                                                                              [
                                                                                M.read (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      left_val
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.read (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      right_val
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)) in
                                                                    let _ :=
                                                                      is_constant_or_break_match (|
                                                                        M.read (| γ |),
                                                                        Value.Bool true
                                                                      |) in
                                                                    M.never_to_any (|
                                                                      M.read (|
                                                                        let~ kind :
                                                                            Ty.path
                                                                              "core::panicking::AssertKind" :=
                                                                          Value.StructTuple
                                                                            "core::panicking::AssertKind::Eq"
                                                                            []
                                                                            []
                                                                            [] in
                                                                        M.alloc (|
                                                                          Ty.path "never",
                                                                          M.call_closure (|
                                                                            Ty.path "never",
                                                                            M.get_function (|
                                                                              "core::panicking::assert_failed",
                                                                              [],
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.path "usize"
                                                                              ]
                                                                            |),
                                                                            [
                                                                              M.read (| kind |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        left_val
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        right_val
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              Value.StructTuple
                                                                                "core::option::Option::None"
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::fmt::Arguments"
                                                                                ]
                                                                                []
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |)));
                                                                fun γ =>
                                                                  ltac:(M.monadic (Value.Tuple []))
                                                              ]
                                                            |)))
                                                      ]
                                                    |) in
                                                  let~ _ : Ty.tuple [] :=
                                                    M.match_operator (|
                                                      Ty.tuple [],
                                                      M.alloc (|
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "usize" ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "usize" ]
                                                          ],
                                                        Value.Tuple
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.path "usize",
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::keygen::view::MultiStarkVerifyingKeyView")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val";
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment"
                                                                      ],
                                                                    "num_challenges_in_phase",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      mvk_view
                                                                    |);
                                                                    Value.Integer
                                                                      IntegerKind.Usize
                                                                      0
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.path "usize",
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    "len",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        phase_data,
                                                                        "openvm_stark_backend::interaction::RapPhaseProverData",
                                                                        "challenges"
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                0
                                                              |) in
                                                            let γ0_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                1
                                                              |) in
                                                            let left_val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "usize" ],
                                                                γ0_0
                                                              |) in
                                                            let right_val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "usize" ],
                                                                γ0_1
                                                              |) in
                                                            M.match_operator (|
                                                              Ty.tuple [],
                                                              M.alloc (|
                                                                Ty.tuple [],
                                                                Value.Tuple []
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ :=
                                                                      M.use
                                                                        (M.alloc (|
                                                                          Ty.path "bool",
                                                                          UnOp.not (|
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              BinOp.eq,
                                                                              [
                                                                                M.read (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      left_val
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.read (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      right_val
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)) in
                                                                    let _ :=
                                                                      is_constant_or_break_match (|
                                                                        M.read (| γ |),
                                                                        Value.Bool true
                                                                      |) in
                                                                    M.never_to_any (|
                                                                      M.read (|
                                                                        let~ kind :
                                                                            Ty.path
                                                                              "core::panicking::AssertKind" :=
                                                                          Value.StructTuple
                                                                            "core::panicking::AssertKind::Eq"
                                                                            []
                                                                            []
                                                                            [] in
                                                                        M.alloc (|
                                                                          Ty.path "never",
                                                                          M.call_closure (|
                                                                            Ty.path "never",
                                                                            M.get_function (|
                                                                              "core::panicking::assert_failed",
                                                                              [],
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.path "usize"
                                                                              ]
                                                                            |),
                                                                            [
                                                                              M.read (| kind |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        left_val
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        right_val
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              Value.StructTuple
                                                                                "core::option::Option::None"
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::fmt::Arguments"
                                                                                ]
                                                                                []
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |)));
                                                                fun γ =>
                                                                  ltac:(M.monadic (Value.Tuple []))
                                                              ]
                                                            |)))
                                                      ]
                                                    |) in
                                                  let~ perm_views :
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                            []
                                                            [
                                                              Ty.path "usize";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ] :=
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                            []
                                                            [
                                                              Ty.path "usize";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      M.get_trait_method (|
                                                        "itertools::Itertools",
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::map::Map")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "itertools::zip_eq_impl::ZipEq")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "alloc::vec::into_iter::IntoIter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.path "usize";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ])
                                                          ],
                                                        [],
                                                        [],
                                                        "collect_vec",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::map::Map")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "itertools::zip_eq_impl::ZipEq")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "alloc::vec::into_iter::IntoIter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.function
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                                (Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.path "usize";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ])
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::iter::traits::iterator::Iterator",
                                                            Ty.apply
                                                              (Ty.path
                                                                "itertools::zip_eq_impl::ZipEq")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "alloc::vec::into_iter::IntoIter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ],
                                                            [],
                                                            [],
                                                            "map",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.path "usize";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ];
                                                              Ty.function
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                                (Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.path "usize";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ])
                                                            ]
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "itertools::zip_eq_impl::ZipEq")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "alloc::vec::into_iter::IntoIter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              M.get_function (|
                                                                "itertools::zip_eq_impl::zip_eq",
                                                                [],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    phase_data,
                                                                    "openvm_stark_backend::interaction::RapPhaseProverData",
                                                                    "after_challenge_trace_per_air"
                                                                  |)
                                                                |);
                                                                M.read (|
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    phase_data,
                                                                    "openvm_stark_backend::interaction::RapPhaseProverData",
                                                                    "exposed_values_per_air"
                                                                  |)
                                                                |)
                                                              ]
                                                            |);
                                                            M.closure
                                                              (fun γ =>
                                                                ltac:(M.monadic
                                                                  match γ with
                                                                  | [ α0 ] =>
                                                                    ltac:(M.monadic
                                                                      (M.match_operator (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                          []
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge"
                                                                          ],
                                                                        M.alloc (|
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ],
                                                                          α0
                                                                        |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ0_0 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  0
                                                                                |) in
                                                                              let γ0_1 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  1
                                                                                |) in
                                                                              let perm_trace :=
                                                                                M.copy (|
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ],
                                                                                  γ0_0
                                                                                |) in
                                                                              let exposed_values :=
                                                                                M.copy (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ],
                                                                                  γ0_1
                                                                                |) in
                                                                              M.read (|
                                                                                let~ matrix_idx :
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ] :=
                                                                                  Value.StructTuple
                                                                                    "core::option::Option::None"
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ]
                                                                                    [] in
                                                                                let~ _ :
                                                                                    Ty.tuple [] :=
                                                                                  M.match_operator (|
                                                                                    Ty.tuple [],
                                                                                    M.alloc (|
                                                                                      Ty.tuple [],
                                                                                      Value.Tuple []
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let γ :=
                                                                                            M.use
                                                                                              (M.alloc (|
                                                                                                Ty.path
                                                                                                  "bool",
                                                                                                M.call_closure (|
                                                                                                  Ty.path
                                                                                                    "bool",
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::option::Option")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge";
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenge";
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ],
                                                                                                    "is_some",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.read (|
                                                                                                          perm_trace
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)) in
                                                                                          let _ :=
                                                                                            is_constant_or_break_match (|
                                                                                              M.read (|
                                                                                                γ
                                                                                              |),
                                                                                              Value.Bool
                                                                                                true
                                                                                            |) in
                                                                                          M.read (|
                                                                                            let~ _ :
                                                                                                Ty.tuple
                                                                                                  [] :=
                                                                                              M.write (|
                                                                                                matrix_idx,
                                                                                                Value.StructTuple
                                                                                                  "core::option::Option::Some"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ]
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      perm_matrix_idx
                                                                                                    |)
                                                                                                  ]
                                                                                              |) in
                                                                                            let~ _ :
                                                                                                Ty.tuple
                                                                                                  [] :=
                                                                                              let
                                                                                                    β :=
                                                                                                perm_matrix_idx in
                                                                                              M.write (|
                                                                                                β,
                                                                                                M.call_closure (|
                                                                                                  Ty.path
                                                                                                    "usize",
                                                                                                  BinOp.Wrap.add,
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      β
                                                                                                    |);
                                                                                                    Value.Integer
                                                                                                      IntegerKind.Usize
                                                                                                      1
                                                                                                  ]
                                                                                                |)
                                                                                              |) in
                                                                                            M.alloc (|
                                                                                              Ty.tuple
                                                                                                [],
                                                                                              Value.Tuple
                                                                                                []
                                                                                            |)
                                                                                          |)));
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (Value.Tuple
                                                                                            []))
                                                                                    ]
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge"
                                                                                    ],
                                                                                  Value.mkStructRecord
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView"
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge"
                                                                                    ]
                                                                                    [
                                                                                      ("inner",
                                                                                        M.read (|
                                                                                          matrix_idx
                                                                                        |));
                                                                                      ("challenges",
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::clone::Clone",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            [],
                                                                                            "clone",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                phase_data,
                                                                                                "openvm_stark_backend::interaction::RapPhaseProverData",
                                                                                                "challenges"
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |));
                                                                                      ("exposed_values",
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ],
                                                                                            "unwrap_or_default",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.read (|
                                                                                              exposed_values
                                                                                            |)
                                                                                          ]
                                                                                        |))
                                                                                    ]
                                                                                |)
                                                                              |)))
                                                                        ]
                                                                      |)))
                                                                  | _ =>
                                                                    M.impossible
                                                                      "wrong number of arguments"
                                                                  end))
                                                          ]
                                                        |)
                                                      ]
                                                    |) in
                                                  let~ _ : Ty.tuple [] :=
                                                    M.write (|
                                                      rap_views_per_phase,
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.path "usize";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                    []
                                                                    [
                                                                      Ty.path "usize";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ],
                                                          "into_vec",
                                                          [],
                                                          [ Ty.path "alloc::alloc::Global" ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "alloc::boxed::Box")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                          []
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ],
                                                            M.pointer_coercion
                                                              M.PointerCoercion.Unsize
                                                              (Ty.apply
                                                                (Ty.path "alloc::boxed::Box")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "array")
                                                                    [
                                                                      Value.Integer
                                                                        IntegerKind.Usize
                                                                        1
                                                                    ]
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                            []
                                                                            [
                                                                              Ty.path "usize";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge"
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ])
                                                              (Ty.apply
                                                                (Ty.path "alloc::boxed::Box")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                            []
                                                                            [
                                                                              Ty.path "usize";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge"
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]),
                                                            [
                                                              M.read (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "alloc::boxed::Box")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "array")
                                                                        [
                                                                          Value.Integer
                                                                            IntegerKind.Usize
                                                                            1
                                                                        ]
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path "alloc::boxed::Box")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "array")
                                                                          [
                                                                            Value.Integer
                                                                              IntegerKind.Usize
                                                                              1
                                                                          ]
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    "new",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.alloc (|
                                                                      Ty.apply
                                                                        (Ty.path "array")
                                                                        [
                                                                          Value.Integer
                                                                            IntegerKind.Usize
                                                                            1
                                                                        ]
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ],
                                                                      Value.Array
                                                                        [ M.read (| perm_views |) ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    |) in
                                                  M.SubPointer.get_struct_record_field (|
                                                    phase_data,
                                                    "openvm_stark_backend::interaction::RapPhaseProverData",
                                                    "after_challenge_trace_per_air"
                                                  |)
                                                |)));
                                            fun γ =>
                                              ltac:(M.monadic
                                                (M.read (|
                                                  let~ _ : Ty.tuple [] :=
                                                    M.match_operator (|
                                                      Ty.tuple [],
                                                      M.alloc (|
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "usize" ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "usize" ]
                                                          ],
                                                        Value.Tuple
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.path "usize",
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::keygen::view::MultiStarkVerifyingKeyView")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val";
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment"
                                                                      ],
                                                                    "num_phases",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      mvk_view
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                Ty.path "usize",
                                                                Value.Integer IntegerKind.Usize 0
                                                              |)
                                                            |)
                                                          ]
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                0
                                                              |) in
                                                            let γ0_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                1
                                                              |) in
                                                            let left_val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "usize" ],
                                                                γ0_0
                                                              |) in
                                                            let right_val :=
                                                              M.copy (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "usize" ],
                                                                γ0_1
                                                              |) in
                                                            M.match_operator (|
                                                              Ty.tuple [],
                                                              M.alloc (|
                                                                Ty.tuple [],
                                                                Value.Tuple []
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ :=
                                                                      M.use
                                                                        (M.alloc (|
                                                                          Ty.path "bool",
                                                                          UnOp.not (|
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              BinOp.eq,
                                                                              [
                                                                                M.read (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      left_val
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.read (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      right_val
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)) in
                                                                    let _ :=
                                                                      is_constant_or_break_match (|
                                                                        M.read (| γ |),
                                                                        Value.Bool true
                                                                      |) in
                                                                    M.never_to_any (|
                                                                      M.read (|
                                                                        let~ kind :
                                                                            Ty.path
                                                                              "core::panicking::AssertKind" :=
                                                                          Value.StructTuple
                                                                            "core::panicking::AssertKind::Eq"
                                                                            []
                                                                            []
                                                                            [] in
                                                                        M.alloc (|
                                                                          Ty.path "never",
                                                                          M.call_closure (|
                                                                            Ty.path "never",
                                                                            M.get_function (|
                                                                              "core::panicking::assert_failed",
                                                                              [],
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.path "usize"
                                                                              ]
                                                                            |),
                                                                            [
                                                                              M.read (| kind |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        left_val
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        right_val
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              Value.StructTuple
                                                                                "core::option::Option::None"
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::fmt::Arguments"
                                                                                ]
                                                                                []
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |)));
                                                                fun γ =>
                                                                  ltac:(M.monadic (Value.Tuple []))
                                                              ]
                                                            |)))
                                                      ]
                                                    |) in
                                                  let~ _ : Ty.tuple [] :=
                                                    M.write (|
                                                      rap_views_per_phase,
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.path "usize";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                    []
                                                                    [
                                                                      Ty.path "usize";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          "new",
                                                          [],
                                                          []
                                                        |),
                                                        []
                                                      |)
                                                    |) in
                                                  M.alloc (|
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      M.get_function (|
                                                        "alloc::vec::from_elem",
                                                        [],
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                      |),
                                                      [
                                                        Value.StructTuple
                                                          "core::option::Option::None"
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                          [];
                                                        M.read (| num_airs |)
                                                      ]
                                                    |)
                                                  |)
                                                |)))
                                          ]
                                        |) in
                                      let~ committed_pcs_data_per_phase :
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Commitment";
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ] :=
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Commitment";
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          M.get_trait_method (|
                                            "core::iter::traits::iterator::Iterator",
                                            Ty.apply
                                              (Ty.path "core::option::IntoIter")
                                              []
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Commitment";
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ],
                                            [],
                                            [],
                                            "collect",
                                            [],
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Commitment";
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                          |),
                                          [
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "core::option::IntoIter")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Commitment";
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::iter::traits::collect::IntoIterator",
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Commitment";
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                          []
                                                          [ SC ]
                                                      ]
                                                  ],
                                                [],
                                                [],
                                                "into_iter",
                                                [],
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    []
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Commitment";
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                            []
                                                            [ SC ]
                                                        ]
                                                    ],
                                                  M.get_function (|
                                                    "openvm_stark_backend::utils::metrics_span",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Commitment";
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                []
                                                                [ SC ]
                                                            ]
                                                        ];
                                                      Ty.function
                                                        []
                                                        (Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Commitment";
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                  []
                                                                  [ SC ]
                                                              ]
                                                          ]);
                                                      Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                                                    ]
                                                  |),
                                                  [
                                                    mk_str (| "perm_trace_commit_time_ms" |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            ltac:(M.monadic
                                                              (M.match_operator (|
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ]
                                                                  ],
                                                                M.alloc (| Ty.tuple [], α0 |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (M.match_operator (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Commitment";
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                                  []
                                                                                  [ SC ]
                                                                              ]
                                                                          ],
                                                                        M.alloc (|
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.path "u8";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain";
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                            []
                                                                                            []
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain")
                                                                                            "Val";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ],
                                                                          M.call_closure (|
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.path "u8";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "Domain";
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::domain::PolynomialSpace"
                                                                                              []
                                                                                              []
                                                                                              (Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain")
                                                                                              "Val";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                  []
                                                                                                  []
                                                                                                  (Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Domain")
                                                                                                  "Val";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::iter::traits::iterator::Iterator",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::iter::adapters::map::Map")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::iter::adapters::flatten::Flatten")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::into_iter::IntoIter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "u8";
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                  []
                                                                                                  []
                                                                                                  (Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Domain")
                                                                                                  "Val";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                      []
                                                                                                      []
                                                                                                      (Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "Domain")
                                                                                                      "Val";
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ])
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "collect",
                                                                              [],
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "u8";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                  []
                                                                                                  []
                                                                                                  (Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Domain")
                                                                                                  "Val";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                      []
                                                                                                      []
                                                                                                      (Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "Domain")
                                                                                                      "Val";
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::iter::adapters::map::Map")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::iter::adapters::flatten::Flatten")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::into_iter::IntoIter")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                      (Ty.tuple
                                                                                        [
                                                                                          Ty.path
                                                                                            "u8";
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::domain::PolynomialSpace"
                                                                                                        []
                                                                                                        []
                                                                                                        (Ty.associated_in_trait
                                                                                                          "p3_commit::pcs::Pcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge";
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenger"
                                                                                                          ]
                                                                                                          (Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Pcs")
                                                                                                          "Domain")
                                                                                                        "Val";
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ])
                                                                                  ],
                                                                                M.get_trait_method (|
                                                                                  "core::iter::traits::iterator::Iterator",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::iter::adapters::flatten::Flatten")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::into_iter::IntoIter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ],
                                                                                  [],
                                                                                  [],
                                                                                  "map",
                                                                                  [],
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "u8";
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                  []
                                                                                                  []
                                                                                                  (Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Domain")
                                                                                                  "Val";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                      []
                                                                                                      []
                                                                                                      (Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "Domain")
                                                                                                      "Val";
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ];
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                      (Ty.tuple
                                                                                        [
                                                                                          Ty.path
                                                                                            "u8";
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::domain::PolynomialSpace"
                                                                                                        []
                                                                                                        []
                                                                                                        (Ty.associated_in_trait
                                                                                                          "p3_commit::pcs::Pcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge";
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenger"
                                                                                                          ]
                                                                                                          (Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Pcs")
                                                                                                          "Domain")
                                                                                                        "Val";
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ])
                                                                                  ]
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::iter::adapters::flatten::Flatten")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::into_iter::IntoIter")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ],
                                                                                    M.get_trait_method (|
                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::into_iter::IntoIter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ],
                                                                                      [],
                                                                                      [],
                                                                                      "flatten",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::into_iter::IntoIter")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ],
                                                                                        M.get_trait_method (|
                                                                                          "core::iter::traits::collect::IntoIterator",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          [],
                                                                                          [],
                                                                                          "into_iter",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            perm_trace_per_air
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |);
                                                                                  M.closure
                                                                                    (fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        match γ with
                                                                                        | [ α0 ] =>
                                                                                          ltac:(M.monadic
                                                                                            (M.match_operator (|
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "u8";
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "Domain";
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                                            []
                                                                                                            []
                                                                                                            (Ty.associated_in_trait
                                                                                                              "p3_commit::pcs::Pcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenge";
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenger"
                                                                                                              ]
                                                                                                              (Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Pcs")
                                                                                                              "Domain")
                                                                                                            "Val";
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                                []
                                                                                                                []
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain")
                                                                                                                "Val";
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ],
                                                                                              M.alloc (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ],
                                                                                                α0
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          perm_trace :=
                                                                                                      M.copy (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge";
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  SC
                                                                                                                  "Challenge";
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ],
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.read (|
                                                                                                      let~
                                                                                                            trace :
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                                []
                                                                                                                []
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain")
                                                                                                                "Val";
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Challenge";
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Challenger"
                                                                                                                      ]
                                                                                                                      (Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Pcs")
                                                                                                                      "Domain")
                                                                                                                    "Val";
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ] :=
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                                []
                                                                                                                []
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain")
                                                                                                                "Val";
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Challenge";
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Challenger"
                                                                                                                      ]
                                                                                                                      (Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Pcs")
                                                                                                                      "Domain")
                                                                                                                    "Val";
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ],
                                                                                                          M.get_function (|
                                                                                                            "openvm_stark_backend::prover::cpu::transmute_to_base",
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                                []
                                                                                                                []
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain")
                                                                                                                "Val";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenge"
                                                                                                            ]
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              perm_trace
                                                                                                            |)
                                                                                                          ]
                                                                                                        |) in
                                                                                                      let~
                                                                                                            height :
                                                                                                          Ty.path
                                                                                                            "usize" :=
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "usize",
                                                                                                          M.get_trait_method (|
                                                                                                            "p3_matrix::Matrix",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                                                  []
                                                                                                                  []
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Challenge";
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Challenger"
                                                                                                                    ]
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Pcs")
                                                                                                                    "Domain")
                                                                                                                  "Val";
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      (Ty.associated_in_trait
                                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            SC
                                                                                                                            "Challenge";
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            SC
                                                                                                                            "Challenger"
                                                                                                                        ]
                                                                                                                        (Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Pcs")
                                                                                                                        "Domain")
                                                                                                                      "Val";
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                                []
                                                                                                                []
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain")
                                                                                                                "Val"
                                                                                                            ],
                                                                                                            "height",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              trace
                                                                                                            |)
                                                                                                          ]
                                                                                                        |) in
                                                                                                      let~
                                                                                                            log_height :
                                                                                                          Ty.path
                                                                                                            "u8" :=
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "u8",
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "u8";
                                                                                                                Ty.path
                                                                                                                  "core::num::error::TryFromIntError"
                                                                                                              ],
                                                                                                            "unwrap",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "u8";
                                                                                                                  Ty.path
                                                                                                                    "core::num::error::TryFromIntError"
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::convert::TryInto",
                                                                                                                Ty.path
                                                                                                                  "usize",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "u8"
                                                                                                                ],
                                                                                                                "try_into",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  M.get_function (|
                                                                                                                    "p3_util::log2_strict_usize",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      height
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |) in
                                                                                                      let~
                                                                                                            domain :
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::pcs::Pcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenge";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenger"
                                                                                                            ]
                                                                                                            (Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Pcs")
                                                                                                            "Domain" :=
                                                                                                        M.call_closure (|
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::pcs::Pcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenge";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenger"
                                                                                                            ]
                                                                                                            (Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Pcs")
                                                                                                            "Domain",
                                                                                                          M.get_trait_method (|
                                                                                                            "p3_commit::pcs::Pcs",
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Pcs",
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenge";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenger"
                                                                                                            ],
                                                                                                            "natural_domain_for_degree",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Pcs"
                                                                                                                    ],
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "openvm_stark_backend::prover::cpu::CpuDevice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        SC
                                                                                                                      ],
                                                                                                                    "pcs",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      M.deref (|
                                                                                                                        M.read (|
                                                                                                                          self
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            |);
                                                                                                            M.read (|
                                                                                                              height
                                                                                                            |)
                                                                                                          ]
                                                                                                        |) in
                                                                                                      M.alloc (|
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "u8";
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain";
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      (Ty.associated_in_trait
                                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            SC
                                                                                                                            "Challenge";
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            SC
                                                                                                                            "Challenger"
                                                                                                                        ]
                                                                                                                        (Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Pcs")
                                                                                                                        "Domain")
                                                                                                                      "Val";
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          (Ty.associated_in_trait
                                                                                                                            "p3_commit::pcs::Pcs"
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                SC
                                                                                                                                "Challenge";
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                SC
                                                                                                                                "Challenger"
                                                                                                                            ]
                                                                                                                            (Ty.associated_in_trait
                                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                              []
                                                                                                                              []
                                                                                                                              SC
                                                                                                                              "Pcs")
                                                                                                                            "Domain")
                                                                                                                          "Val";
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                        Value.Tuple
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              log_height
                                                                                                            |);
                                                                                                            Value.Tuple
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  domain
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  trace
                                                                                                                |)
                                                                                                              ]
                                                                                                          ]
                                                                                                      |)
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                        | _ =>
                                                                                          M.impossible
                                                                                            "wrong number of arguments"
                                                                                        end))
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ0_0 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  0
                                                                                |) in
                                                                              let γ0_1 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  1
                                                                                |) in
                                                                              let
                                                                                    log_trace_heights :=
                                                                                M.copy (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.path "u8";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  γ0_0
                                                                                |) in
                                                                              let
                                                                                    flattened_traces :=
                                                                                M.copy (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                    []
                                                                                                    []
                                                                                                    (Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "Domain")
                                                                                                    "Val";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  γ0_1
                                                                                |) in
                                                                              M.match_operator (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "Commitment";
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                                          []
                                                                                          [ SC ]
                                                                                      ]
                                                                                  ],
                                                                                M.alloc (|
                                                                                  Ty.tuple [],
                                                                                  Value.Tuple []
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ :=
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            Ty.path
                                                                                              "bool",
                                                                                            UnOp.not (|
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "bool",
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::pcs::Pcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenge";
                                                                                                              Ty.associated_in_trait
                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                []
                                                                                                                []
                                                                                                                SC
                                                                                                                "Challenger"
                                                                                                            ]
                                                                                                            (Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Pcs")
                                                                                                            "Domain";
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                                []
                                                                                                                []
                                                                                                                (Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "Domain")
                                                                                                                "Val";
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::domain::PolynomialSpace"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Challenge";
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Challenger"
                                                                                                                      ]
                                                                                                                      (Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Pcs")
                                                                                                                      "Domain")
                                                                                                                    "Val";
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ],
                                                                                                  "is_empty",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    flattened_traces
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)) in
                                                                                      let _ :=
                                                                                        is_constant_or_break_match (|
                                                                                          M.read (|
                                                                                            γ
                                                                                          |),
                                                                                          Value.Bool
                                                                                            true
                                                                                        |) in
                                                                                      M.match_operator (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Commitment";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                                                  []
                                                                                                  [
                                                                                                    SC
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                        M.alloc (|
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Commitment";
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "ProverData"
                                                                                            ],
                                                                                          M.call_closure (|
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Commitment";
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "ProverData"
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "p3_commit::pcs::Pcs",
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs",
                                                                                              [],
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ],
                                                                                              "commit",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs"
                                                                                                      ],
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "openvm_stark_backend::prover::cpu::CpuDevice")
                                                                                                        []
                                                                                                        [
                                                                                                          SC
                                                                                                        ],
                                                                                                      "pcs",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.deref (|
                                                                                                          M.read (|
                                                                                                            self
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)
                                                                                              |);
                                                                                              M.read (|
                                                                                                flattened_traces
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                  γ,
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    γ0_1 :=
                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                  γ,
                                                                                                  1
                                                                                                |) in
                                                                                              let
                                                                                                    commit :=
                                                                                                M.copy (|
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "Commitment",
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              let
                                                                                                    data :=
                                                                                                M.copy (|
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenger"
                                                                                                    ]
                                                                                                    (Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Pcs")
                                                                                                    "ProverData",
                                                                                                  γ0_1
                                                                                                |) in
                                                                                              Value.StructTuple
                                                                                                "core::option::Option::Some"
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "Commitment";
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                                                                        []
                                                                                                        [
                                                                                                          SC
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                [
                                                                                                  Value.Tuple
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        commit
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                                                          []
                                                                                                          [
                                                                                                            SC
                                                                                                          ],
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                                                                            []
                                                                                                            [
                                                                                                              SC
                                                                                                            ],
                                                                                                          "new",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::sync::Arc")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenge";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Challenger"
                                                                                                                  ]
                                                                                                                  (Ty.associated_in_trait
                                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                    []
                                                                                                                    []
                                                                                                                    SC
                                                                                                                    "Pcs")
                                                                                                                  "ProverData";
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::sync::Arc")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::pcs::Pcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Challenge";
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                        []
                                                                                                                        []
                                                                                                                        SC
                                                                                                                        "Challenger"
                                                                                                                    ]
                                                                                                                    (Ty.associated_in_trait
                                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      SC
                                                                                                                      "Pcs")
                                                                                                                    "ProverData";
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              "new",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                data
                                                                                                              |)
                                                                                                            ]
                                                                                                          |);
                                                                                                          M.read (|
                                                                                                            log_trace_heights
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                ]))
                                                                                        ]
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (Value.StructTuple
                                                                                        "core::option::Option::None"
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Commitment";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                                                []
                                                                                                [ SC
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        []))
                                                                                ]
                                                                              |)))
                                                                        ]
                                                                      |)))
                                                                ]
                                                              |)))
                                                          | _ =>
                                                            M.impossible "wrong number of arguments"
                                                          end))
                                                  ]
                                                |)
                                              ]
                                            |)
                                          ]
                                        |) in
                                      let~ prover_view :
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ] :=
                                        Value.mkStructRecord
                                          "openvm_stark_backend::prover::types::ProverDataAfterRapPhases"
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::cpu::CpuBackend")
                                              []
                                              [ SC ]
                                          ]
                                          [
                                            ("committed_pcs_data_per_phase",
                                              M.read (| committed_pcs_data_per_phase |));
                                            ("rap_views_per_phase",
                                              M.read (| rap_views_per_phase |))
                                          ] in
                                      M.alloc (|
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "core::option::Option")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::interaction::RapPhaseSeq"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "RapPhaseSeq")
                                                  "PartialProof"
                                              ];
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ],
                                        Value.Tuple
                                          [
                                            M.read (| rap_phase_seq_proof |);
                                            M.read (| prover_view |)
                                          ]
                                      |)
                                    |)))
                              ]
                            |)
                          |)
                        |)))
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::RapPartialProver"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ]
          (Self SC)
          (* Instance *) [ ("partially_prove", InstanceField.Method (partially_prove SC)) ].
    End Impl_openvm_stark_backend_prover_hal_RapPartialProver_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_QuotientCommitter_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      (*
          fn eval_and_commit_quotient(
              &self,
              challenger: &mut SC::Challenger,
              pk_views: &[DeviceStarkProvingKey<CpuBackend<SC>>],
              public_values: &[Vec<Val<SC>>],
              cached_pcs_datas_per_air: &[Vec<PcsData<SC>>],
              common_main_pcs_data: &PcsData<SC>,
              prover_data_after: &ProverDataAfterRapPhases<CpuBackend<SC>>,
          ) -> (Com<SC>, PcsData<SC>) {
              let pcs = self.pcs();
              // Generate `alpha` challenge
              let alpha: SC::Challenge = challenger.sample_ext_element();
              tracing::debug!("alpha: {alpha:?}");
              // Prepare extended views:
              let mut common_main_idx = 0;
              let extended_views = izip!(pk_views, cached_pcs_datas_per_air, public_values)
                  .enumerate()
                  .map(|(i, (pk, cached_pcs_datas, pvs))| {
                      let quotient_degree = pk.vk.quotient_degree;
                      let log_trace_height = if pk.vk.has_common_main() {
                          common_main_pcs_data.log_trace_heights[common_main_idx]
                      } else {
                          cached_pcs_datas[0].log_trace_heights[0]
                      };
                      let trace_domain = pcs.natural_domain_for_degree(1usize << log_trace_height);
                      let quotient_domain = trace_domain
                          .create_disjoint_domain(trace_domain.size() * quotient_degree as usize);
                      // **IMPORTANT**: the return type of `get_evaluations_on_domain` is a matrix view. DO NOT call to_row_major_matrix as this will allocate new memory
                      let preprocessed = pk.preprocessed_data.as_ref().map(|cv| {
                          pcs.get_evaluations_on_domain(
                              &cv.data.data,
                              cv.matrix_idx as usize,
                              quotient_domain,
                          )
                      });
                      // Each cached pcs data is commitment of a single matrix, so matrix_idx=0
                      let mut partitioned_main: Vec<_> = cached_pcs_datas
                          .iter()
                          .map(|cv| pcs.get_evaluations_on_domain(&cv.data, 0, quotient_domain))
                          .collect();
                      if pk.vk.has_common_main() {
                          partitioned_main.push(pcs.get_evaluations_on_domain(
                              &common_main_pcs_data.data,
                              common_main_idx,
                              quotient_domain,
                          ));
                          common_main_idx += 1;
                      }
                      let mut per_phase = zip(
                          &prover_data_after.committed_pcs_data_per_phase,
                          &prover_data_after.rap_views_per_phase,
                      )
                      .map(|((_, pcs_data), rap_views)| -> Option<_> {
                          let rap_view = rap_views.get(i)?;
                          let matrix_idx = rap_view.inner?;
                          let extended_matrix =
                              pcs.get_evaluations_on_domain(&pcs_data.data, matrix_idx, quotient_domain);
                          Some(RapSinglePhaseView {
                              inner: Some(extended_matrix),
                              challenges: rap_view.challenges.clone(),
                              exposed_values: rap_view.exposed_values.clone(),
                          })
                      })
                      .collect_vec();
                      while let Some(last) = per_phase.last() {
                          if last.is_none() {
                              per_phase.pop();
                          } else {
                              break;
                          }
                      }
                      let per_phase = per_phase
                          .into_iter()
                          .map(|v| v.unwrap_or_default())
                          .collect();
      
                      RapView {
                          log_trace_height,
                          preprocessed,
                          partitioned_main,
                          public_values: pvs.to_vec(),
                          per_phase,
                      }
                  })
                  .collect_vec();
      
              let (constraints, quotient_degrees): (Vec<_>, Vec<_>) = pk_views
                  .iter()
                  .map(|pk| {
                      (
                          &pk.vk.symbolic_constraints.constraints,
                          pk.vk.quotient_degree,
                      )
                  })
                  .unzip();
              let qc = QuotientCommitter::new(self.pcs(), alpha, self.log_blowup_factor);
              let quotient_values = metrics_span("quotient_poly_compute_time_ms", || {
                  qc.quotient_values(&constraints, extended_views, &quotient_degrees)
              });
      
              // Commit to quotient polynomials. One shared commit for all quotient polynomials
              metrics_span("quotient_poly_commit_time_ms", || {
                  qc.commit(quotient_values)
              })
          }
      *)
      Definition eval_and_commit_quotient
          (SC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [],
            [],
            [
              self;
              challenger;
              pk_views;
              public_values;
              cached_pcs_datas_per_air;
              common_main_pcs_data;
              prover_data_after
            ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            let challenger :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&mut")
                  []
                  [
                    Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Challenger"
                  ],
                challenger
              |) in
            let pk_views :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "slice")
                      []
                      [
                        Ty.apply
                          (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                              []
                              [ SC ]
                          ]
                      ]
                  ],
                pk_views
              |) in
            let public_values :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "slice")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::domain::PolynomialSpace"
                              []
                              []
                              (Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain")
                              "Val";
                            Ty.path "alloc::alloc::Global"
                          ]
                      ]
                  ],
                public_values
              |) in
            let cached_pcs_datas_per_air :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "slice")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ]
                  ],
                cached_pcs_datas_per_air
              |) in
            let common_main_pcs_data :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ] ],
                common_main_pcs_data
              |) in
            let prover_data_after :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::types::ProverDataAfterRapPhases")
                      []
                      [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ]
                      ]
                  ],
                prover_data_after
              |) in
            M.read (|
              let~ pcs :
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ],
                  M.get_associated_function (|
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ],
                    "pcs",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                |) in
              let~ alpha :
                  Ty.associated_in_trait
                    "openvm_stark_backend::config::StarkGenericConfig"
                    []
                    []
                    SC
                    "Challenge" :=
                M.call_closure (|
                  Ty.associated_in_trait
                    "openvm_stark_backend::config::StarkGenericConfig"
                    []
                    []
                    SC
                    "Challenge",
                  M.get_trait_method (|
                    "p3_challenger::FieldChallenger",
                    Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Challenger",
                    [],
                    [
                      Ty.associated_in_trait
                        "p3_commit::domain::PolynomialSpace"
                        []
                        []
                        (Ty.associated_in_trait
                          "p3_commit::pcs::Pcs"
                          []
                          [
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenge";
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenger"
                          ]
                          (Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Pcs")
                          "Domain")
                        "Val"
                    ],
                    "sample_ext_element",
                    [],
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenge"
                    ]
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |) ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.read (|
                  let~ enabled : Ty.path "bool" :=
                    LogicalOp.and (|
                      LogicalOp.and (|
                        M.call_closure (|
                          Ty.path "bool",
                          M.get_trait_method (|
                            "core::cmp::PartialOrd",
                            Ty.path "tracing_core::metadata::Level",
                            [],
                            [ Ty.path "tracing_core::metadata::LevelFilter" ],
                            "le",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              get_associated_constant (|
                                Ty.path "tracing_core::metadata::Level",
                                "DEBUG",
                                Ty.path "tracing_core::metadata::Level"
                              |)
                            |);
                            M.borrow (|
                              Pointer.Kind.Ref,
                              get_constant (|
                                "tracing::level_filters::STATIC_MAX_LEVEL",
                                Ty.path "tracing_core::metadata::LevelFilter"
                              |)
                            |)
                          ]
                        |),
                        ltac:(M.monadic
                          (M.call_closure (|
                            Ty.path "bool",
                            M.get_trait_method (|
                              "core::cmp::PartialOrd",
                              Ty.path "tracing_core::metadata::Level",
                              [],
                              [ Ty.path "tracing_core::metadata::LevelFilter" ],
                              "le",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                get_associated_constant (|
                                  Ty.path "tracing_core::metadata::Level",
                                  "DEBUG",
                                  Ty.path "tracing_core::metadata::Level"
                                |)
                              |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.alloc (|
                                  Ty.path "tracing_core::metadata::LevelFilter",
                                  M.call_closure (|
                                    Ty.path "tracing_core::metadata::LevelFilter",
                                    M.get_associated_function (|
                                      Ty.path "tracing_core::metadata::LevelFilter",
                                      "current",
                                      [],
                                      []
                                    |),
                                    []
                                  |)
                                |)
                              |)
                            ]
                          |)))
                      |),
                      ltac:(M.monadic
                        (M.read (|
                          let~ interest : Ty.path "tracing_core::subscriber::Interest" :=
                            M.call_closure (|
                              Ty.path "tracing_core::subscriber::Interest",
                              M.get_associated_function (|
                                Ty.path "tracing_core::callsite::DefaultCallsite",
                                "interest",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.read (|
                                      get_constant (|
                                        "openvm_stark_backend::prover::cpu::eval_and_commit_quotient::__CALLSITE",
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::callsite::DefaultCallsite" ]
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |) in
                          M.alloc (|
                            Ty.path "bool",
                            LogicalOp.and (|
                              UnOp.not (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  M.get_associated_function (|
                                    Ty.path "tracing_core::subscriber::Interest",
                                    "is_never",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                |)
                              |),
                              ltac:(M.monadic
                                (M.call_closure (|
                                  Ty.path "bool",
                                  M.get_function (|
                                    "tracing::__macro_support::__is_enabled",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ],
                                          M.get_trait_method (|
                                            "tracing_core::callsite::Callsite",
                                            Ty.path "tracing_core::callsite::DefaultCallsite",
                                            [],
                                            [],
                                            "metadata",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (|
                                                M.read (|
                                                  get_constant (|
                                                    "openvm_stark_backend::prover::cpu::eval_and_commit_quotient::__CALLSITE",
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite"
                                                      ]
                                                  |)
                                                |)
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (| interest |)
                                  ]
                                |)))
                            |)
                          |)
                        |)))
                    |) in
                  M.alloc (|
                    Ty.tuple [],
                    M.match_operator (|
                      Ty.tuple [],
                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ := M.use enabled in
                            let _ :=
                              is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                            M.read (|
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "core::ops::function::Fn",
                                    Ty.function
                                      [ Ty.path "tracing_core::field::ValueSet" ]
                                      (Ty.tuple []),
                                    [],
                                    [ Ty.tuple [ Ty.path "tracing_core::field::ValueSet" ] ],
                                    "call",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.function
                                          [ Ty.path "tracing_core::field::ValueSet" ]
                                          (Ty.tuple []),
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                ltac:(M.monadic
                                                  (M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (|
                                                      Ty.path "tracing_core::field::ValueSet",
                                                      α0
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let value_set :=
                                                            M.copy (|
                                                              Ty.path
                                                                "tracing_core::field::ValueSet",
                                                              γ
                                                            |) in
                                                          M.read (|
                                                            let~ meta :
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata"
                                                                  ] :=
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata"
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "tracing_core::callsite::Callsite",
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  [],
                                                                  [],
                                                                  "metadata",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "openvm_stark_backend::prover::cpu::eval_and_commit_quotient::__CALLSITE",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |) in
                                                            let~ _ : Ty.tuple [] :=
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::event::Event",
                                                                  "dispatch",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (| M.read (| meta |) |)
                                                                  |);
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        value_set
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |) in
                                                            M.alloc (|
                                                              Ty.tuple [],
                                                              Value.Tuple []
                                                            |)
                                                          |)))
                                                    ]
                                                  |)))
                                              | _ => M.impossible "wrong number of arguments"
                                              end))
                                      |)
                                    |);
                                    Value.Tuple
                                      [
                                        M.read (|
                                          let~ iter : Ty.path "tracing_core::field::Iter" :=
                                            M.call_closure (|
                                              Ty.path "tracing_core::field::Iter",
                                              M.get_associated_function (|
                                                Ty.path "tracing_core::field::FieldSet",
                                                "iter",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::field::FieldSet" ],
                                                      M.get_associated_function (|
                                                        Ty.path "tracing_core::metadata::Metadata",
                                                        "fields",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "openvm_stark_backend::prover::cpu::eval_and_commit_quotient::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |) in
                                          M.alloc (|
                                            Ty.path "tracing_core::field::ValueSet",
                                            M.call_closure (|
                                              Ty.path "tracing_core::field::ValueSet",
                                              M.get_associated_function (|
                                                Ty.path "tracing_core::field::FieldSet",
                                                "value_set",
                                                [],
                                                [
                                                  Ty.apply
                                                    (Ty.path "array")
                                                    [ Value.Integer IntegerKind.Usize 1 ]
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.path "tracing_core::field::Field"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.dyn
                                                                    [
                                                                      ("tracing_core::field::Value::Trait",
                                                                        [])
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::field::FieldSet" ],
                                                      M.get_associated_function (|
                                                        Ty.path "tracing_core::metadata::Metadata",
                                                        "fields",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "openvm_stark_backend::prover::cpu::eval_and_commit_quotient::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 1 ]
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::field::Field"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.dyn
                                                                          [
                                                                            ("tracing_core::field::Value::Trait",
                                                                              [])
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ],
                                                        Value.Array
                                                          [
                                                            Value.Tuple
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Ty.path
                                                                      "tracing_core::field::Field",
                                                                    M.call_closure (|
                                                                      Ty.path
                                                                        "tracing_core::field::Field",
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::field::Field"
                                                                          ],
                                                                        "expect",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::field::Field"
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.path
                                                                              "tracing_core::field::Iter",
                                                                            [],
                                                                            [],
                                                                            "next",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.MutRef,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  iter
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            mk_str (|
                                                                              "FieldSet corrupted (this is a bug)"
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |);
                                                                Value.StructTuple
                                                                  "core::option::Option::Some"
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.dyn
                                                                          [
                                                                            ("tracing_core::field::Value::Trait",
                                                                              [])
                                                                          ]
                                                                      ]
                                                                  ]
                                                                  [
                                                                    M.read (|
                                                                      M.use
                                                                        (M.alloc (|
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ],
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.dyn
                                                                                  [
                                                                                    ("tracing_core::field::Value::Trait",
                                                                                      [])
                                                                                  ]
                                                                              ],
                                                                            M.pointer_coercion
                                                                              M.PointerCoercion.Unsize
                                                                              (Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::fmt::Arguments"
                                                                                ])
                                                                              (Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.dyn
                                                                                    [
                                                                                      ("tracing_core::field::Value::Trait",
                                                                                        [])
                                                                                    ]
                                                                                ]),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.alloc (|
                                                                                      Ty.path
                                                                                        "core::fmt::Arguments",
                                                                                      M.call_closure (|
                                                                                        Ty.path
                                                                                          "core::fmt::Arguments",
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1",
                                                                                          [
                                                                                            Value.Integer
                                                                                              IntegerKind.Usize
                                                                                              1;
                                                                                            Value.Integer
                                                                                              IntegerKind.Usize
                                                                                              1
                                                                                          ],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ]
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      mk_str (|
                                                                                                        "alpha: "
                                                                                                      |)
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |);
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument"
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_debug",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge"
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                alpha
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |))
                                                                    |)
                                                                  ]
                                                              ]
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |)
                                      ]
                                  ]
                                |) in
                              M.alloc (| Ty.tuple [], Value.Tuple [] |)
                            |)));
                        fun γ => ltac:(M.monadic (Value.Tuple []))
                      ]
                    |)
                  |)
                |) in
              let~ common_main_idx : Ty.path "usize" := Value.Integer IntegerKind.Usize 0 in
              let~ extended_views :
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_stark_backend::prover::types::RapView")
                        []
                        [
                          Ty.associated_in_trait
                            "p3_commit::pcs::Pcs"
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Pcs")
                            "EvaluationsOnDomain";
                          Ty.associated_in_trait
                            "p3_commit::domain::PolynomialSpace"
                            []
                            []
                            (Ty.associated_in_trait
                              "p3_commit::pcs::Pcs"
                              []
                              [
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenge";
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenger"
                              ]
                              (Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Pcs")
                              "Domain")
                            "Val";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge"
                        ];
                      Ty.path "alloc::alloc::Global"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_stark_backend::prover::types::RapView")
                        []
                        [
                          Ty.associated_in_trait
                            "p3_commit::pcs::Pcs"
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Pcs")
                            "EvaluationsOnDomain";
                          Ty.associated_in_trait
                            "p3_commit::domain::PolynomialSpace"
                            []
                            []
                            (Ty.associated_in_trait
                              "p3_commit::pcs::Pcs"
                              []
                              [
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenge";
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenger"
                              ]
                              (Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Pcs")
                              "Domain")
                            "Val";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge"
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "itertools::Itertools",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::iter::adapters::enumerate::Enumerate")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::iter::adapters::map::Map")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::zip::Zip")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ]
                                  (Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ])
                              ]
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.path "usize";
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::cpu::CpuBackend")
                                              []
                                              [ SC ]
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                              []
                                              [ SC ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "openvm_stark_backend::prover::types::RapView")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "EvaluationsOnDomain";
                              Ty.associated_in_trait
                                "p3_commit::domain::PolynomialSpace"
                                []
                                []
                                (Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain")
                                "Val";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge"
                            ])
                      ],
                    [],
                    [],
                    "collect_vec",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::enumerate::Enumerate")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ])
                                ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.path "usize";
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "openvm_stark_backend::prover::types::RapView")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "EvaluationsOnDomain";
                                Ty.associated_in_trait
                                  "p3_commit::domain::PolynomialSpace"
                                  []
                                  []
                                  (Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain")
                                  "Val";
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenge"
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::iter::adapters::enumerate::Enumerate")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::iter::adapters::map::Map")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::zip::Zip")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ]
                                  (Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ])
                              ]
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "openvm_stark_backend::prover::types::RapView")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "EvaluationsOnDomain";
                              Ty.associated_in_trait
                                "p3_commit::domain::PolynomialSpace"
                                []
                                []
                                (Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain")
                                "Val";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge"
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.path "usize";
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "openvm_stark_backend::prover::types::RapView")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "EvaluationsOnDomain";
                                Ty.associated_in_trait
                                  "p3_commit::domain::PolynomialSpace"
                                  []
                                  []
                                  (Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain")
                                  "Val";
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenge"
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::enumerate::Enumerate")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ])
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::iter::adapters::map::Map")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::zip::Zip")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ]
                                  (Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ])
                              ],
                            [],
                            [],
                            "enumerate",
                            [],
                            []
                          |),
                          [
                            M.read (|
                              let~ iter :
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                            []
                                            [ SC ]
                                        ]
                                    ] :=
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                            []
                                            [ SC ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::collect::IntoIterator",
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "into_iter",
                                    [],
                                    []
                                  |),
                                  [ M.read (| pk_views |) ]
                                |) in
                              let~ iter :
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ] :=
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::CpuBackend")
                                                []
                                                [ SC ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                []
                                                [ SC ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::cpu::CpuBackend")
                                              []
                                              [ SC ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "zip",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "slice")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ]
                                  |),
                                  [ M.read (| iter |); M.read (| cached_pcs_datas_per_air |) ]
                                |) in
                              let~ iter :
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ] :=
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::domain::PolynomialSpace"
                                                []
                                                []
                                                (Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain")
                                                "Val";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::CpuBackend")
                                                  []
                                                  [ SC ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "zip",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "slice")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ]
                                  |),
                                  [ M.read (| iter |); M.read (| public_values |) ]
                                |) in
                              M.alloc (|
                                Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::iter::adapters::zip::Zip")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "core::slice::iter::Iter")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "core::slice::iter::Iter")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::CpuBackend")
                                                          []
                                                          [ SC ]
                                                      ]
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                          []
                                                          [ SC ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ])
                                  ],
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::iter::adapters::zip::Zip")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::iter::adapters::zip::Zip")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::slice::iter::Iter")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "core::slice::iter::Iter")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                                            []
                                                            [ SC ]
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                            []
                                                            [ SC ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ])
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::iter::adapters::zip::Zip")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::iter::adapters::zip::Zip")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "core::slice::iter::Iter")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "core::slice::iter::Iter")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::domain::PolynomialSpace"
                                                  []
                                                  []
                                                  (Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain")
                                                  "Val";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "map",
                                    [],
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                                            []
                                                            [ SC ]
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                            []
                                                            [ SC ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::CpuBackend")
                                                      []
                                                      [ SC ]
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                      []
                                                      [ SC ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val";
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ])
                                    ]
                                  |),
                                  [
                                    M.read (| iter |);
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::cpu::CpuBackend")
                                                              []
                                                              [ SC ]
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                              []
                                                              [ SC ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ],
                                                M.alloc (|
                                                  Ty.tuple
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                                    []
                                                                    [ SC ]
                                                                ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                                    []
                                                                    [ SC ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ];
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::domain::PolynomialSpace"
                                                                []
                                                                []
                                                                (Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "Domain")
                                                                "Val";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                    ],
                                                  α0
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let γ1_0 :=
                                                        M.SubPointer.get_tuple_field (|
                                                          γ0_0,
                                                          0
                                                        |) in
                                                      let γ1_1 :=
                                                        M.SubPointer.get_tuple_field (|
                                                          γ0_0,
                                                          1
                                                        |) in
                                                      let a :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                                    []
                                                                    [ SC ]
                                                                ]
                                                            ],
                                                          γ1_0
                                                        |) in
                                                      let b :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                                    []
                                                                    [ SC ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ],
                                                          γ1_1
                                                        |) in
                                                      let b :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ],
                                                          γ0_1
                                                        |) in
                                                      Value.Tuple
                                                        [
                                                          M.read (| a |);
                                                          M.read (| b |);
                                                          M.read (| b |)
                                                        ]))
                                                ]
                                              |)))
                                          | _ => M.impossible "wrong number of arguments"
                                          end))
                                  ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::types::RapView")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "EvaluationsOnDomain";
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge"
                                      ],
                                    M.alloc (|
                                      Ty.tuple
                                        [
                                          Ty.path "usize";
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ],
                                      α0
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let i := M.copy (| Ty.path "usize", γ0_0 |) in
                                          let γ1_0 := M.SubPointer.get_tuple_field (| γ0_1, 0 |) in
                                          let γ1_1 := M.SubPointer.get_tuple_field (| γ0_1, 1 |) in
                                          let γ1_2 := M.SubPointer.get_tuple_field (| γ0_1, 2 |) in
                                          let pk :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::CpuBackend")
                                                        []
                                                        [ SC ]
                                                    ]
                                                ],
                                              γ1_0
                                            |) in
                                          let cached_pcs_datas :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                        []
                                                        [ SC ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              γ1_1
                                            |) in
                                          let pvs :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::domain::PolynomialSpace"
                                                        []
                                                        []
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                        "Val";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              γ1_2
                                            |) in
                                          M.read (|
                                            let~ quotient_degree : Ty.path "u8" :=
                                              M.read (|
                                                M.SubPointer.get_struct_record_field (|
                                                  M.deref (|
                                                    M.read (|
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.deref (| M.read (| pk |) |),
                                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                        "vk"
                                                      |)
                                                    |)
                                                  |),
                                                  "openvm_stark_backend::keygen::types::StarkVerifyingKey",
                                                  "quotient_degree"
                                                |)
                                              |) in
                                            let~ log_trace_height : Ty.path "u8" :=
                                              M.match_operator (|
                                                Ty.path "u8",
                                                M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use
                                                          (M.alloc (|
                                                            Ty.path "bool",
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::keygen::types::StarkVerifyingKey")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Commitment"
                                                                  ],
                                                                "has_common_main",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        M.deref (|
                                                                          M.read (| pk |)
                                                                        |),
                                                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                                        "vk"
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)) in
                                                      let _ :=
                                                        is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      M.read (|
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "u8" ],
                                                            M.get_trait_method (|
                                                              "core::ops::index::Index",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.path "u8";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [ Ty.path "usize" ],
                                                              "index",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.SubPointer.get_struct_record_field (|
                                                                  M.deref (|
                                                                    M.read (|
                                                                      common_main_pcs_data
                                                                    |)
                                                                  |),
                                                                  "openvm_stark_backend::prover::cpu::PcsData",
                                                                  "log_trace_heights"
                                                                |)
                                                              |);
                                                              M.read (| common_main_idx |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)));
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [ Ty.path "u8" ],
                                                            M.get_trait_method (|
                                                              "core::ops::index::Index",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.path "u8";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [ Ty.path "usize" ],
                                                              "index",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.SubPointer.get_struct_record_field (|
                                                                  M.deref (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                                            []
                                                                            [ SC ]
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::ops::index::Index",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                                              []
                                                                              [ SC ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        [ Ty.path "usize" ],
                                                                        "index",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.read (|
                                                                              cached_pcs_datas
                                                                            |)
                                                                          |)
                                                                        |);
                                                                        Value.Integer
                                                                          IntegerKind.Usize
                                                                          0
                                                                      ]
                                                                    |)
                                                                  |),
                                                                  "openvm_stark_backend::prover::cpu::PcsData",
                                                                  "log_trace_heights"
                                                                |)
                                                              |);
                                                              Value.Integer IntegerKind.Usize 0
                                                            ]
                                                          |)
                                                        |)
                                                      |)))
                                                ]
                                              |) in
                                            let~ trace_domain :
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain" :=
                                              M.call_closure (|
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain",
                                                M.get_trait_method (|
                                                  "p3_commit::pcs::Pcs",
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs",
                                                  [],
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ],
                                                  "natural_domain_for_degree",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (| M.read (| pcs |) |)
                                                  |);
                                                  M.call_closure (|
                                                    Ty.path "usize",
                                                    BinOp.Wrap.shl,
                                                    [
                                                      Value.Integer IntegerKind.Usize 1;
                                                      M.read (| log_trace_height |)
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            let~ quotient_domain :
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain" :=
                                              M.call_closure (|
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Domain",
                                                M.get_trait_method (|
                                                  "p3_commit::domain::PolynomialSpace",
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain",
                                                  [],
                                                  [],
                                                  "create_disjoint_domain",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (| Pointer.Kind.Ref, trace_domain |);
                                                  M.call_closure (|
                                                    Ty.path "usize",
                                                    BinOp.Wrap.mul,
                                                    [
                                                      M.call_closure (|
                                                        Ty.path "usize",
                                                        M.get_trait_method (|
                                                          "p3_commit::domain::PolynomialSpace",
                                                          Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain",
                                                          [],
                                                          [],
                                                          "size",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            trace_domain
                                                          |)
                                                        ]
                                                      |);
                                                      M.cast
                                                        (Ty.path "usize")
                                                        (M.read (| quotient_degree |))
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            let~ preprocessed :
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "EvaluationsOnDomain"
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "EvaluationsOnDomain"
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::sync::Arc")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val";
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                []
                                                                [ SC ]
                                                            ]
                                                        ]
                                                    ],
                                                  "map",
                                                  [],
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "EvaluationsOnDomain";
                                                    Ty.function
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::sync::Arc")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::domain::PolynomialSpace"
                                                                              []
                                                                              []
                                                                              (Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "Domain")
                                                                              "Val";
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                  []
                                                                  [ SC ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "EvaluationsOnDomain")
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::sync::Arc")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::domain::PolynomialSpace"
                                                                          []
                                                                          []
                                                                          (Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "Domain")
                                                                          "Val";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::domain::PolynomialSpace"
                                                                              []
                                                                              []
                                                                              (Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "Domain")
                                                                              "Val";
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                  []
                                                                  [ SC ]
                                                              ]
                                                          ]
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::sync::Arc")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val";
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                []
                                                                [ SC ]
                                                            ]
                                                        ],
                                                      "as_ref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| pk |) |),
                                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                          "preprocessed_data"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.closure
                                                    (fun γ =>
                                                      ltac:(M.monadic
                                                        match γ with
                                                        | [ α0 ] =>
                                                          ltac:(M.monadic
                                                            (M.match_operator (|
                                                              Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "EvaluationsOnDomain",
                                                              M.alloc (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::sync::Arc")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::domain::PolynomialSpace"
                                                                                  []
                                                                                  []
                                                                                  (Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "Domain")
                                                                                  "Val";
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ]
                                                                  ],
                                                                α0
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let cv :=
                                                                      M.copy (|
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::sync::Arc")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::domain::PolynomialSpace"
                                                                                              []
                                                                                              []
                                                                                              (Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain")
                                                                                              "Val";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                                  []
                                                                                  [ SC ]
                                                                              ]
                                                                          ],
                                                                        γ
                                                                      |) in
                                                                    M.call_closure (|
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "EvaluationsOnDomain",
                                                                      M.get_trait_method (|
                                                                        "p3_commit::pcs::Pcs",
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs",
                                                                        [],
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ],
                                                                        "get_evaluations_on_domain",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.read (| pcs |)
                                                                          |)
                                                                        |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "ProverData"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::ops::deref::Deref",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::sync::Arc")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "ProverData";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "deref",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              cv
                                                                                            |)
                                                                                          |),
                                                                                          "openvm_stark_backend::prover::types::SingleCommitPreimage",
                                                                                          "data"
                                                                                        |),
                                                                                        "openvm_stark_backend::prover::cpu::PcsData",
                                                                                        "data"
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |);
                                                                        M.cast
                                                                          (Ty.path "usize")
                                                                          (M.read (|
                                                                            M.SubPointer.get_struct_record_field (|
                                                                              M.deref (|
                                                                                M.read (| cv |)
                                                                              |),
                                                                              "openvm_stark_backend::prover::types::SingleCommitPreimage",
                                                                              "matrix_idx"
                                                                            |)
                                                                          |));
                                                                        M.read (| quotient_domain |)
                                                                      ]
                                                                    |)))
                                                              ]
                                                            |)))
                                                        | _ =>
                                                          M.impossible "wrong number of arguments"
                                                        end))
                                                ]
                                              |) in
                                            let~ partitioned_main :
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "EvaluationsOnDomain";
                                                    Ty.path "alloc::alloc::Global"
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "EvaluationsOnDomain";
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                            []
                                                            [ SC ]
                                                        ];
                                                      Ty.function
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                []
                                                                [ SC ]
                                                            ]
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "EvaluationsOnDomain")
                                                    ],
                                                  [],
                                                  [],
                                                  "collect",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "EvaluationsOnDomain";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                              []
                                                              [ SC ]
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                  []
                                                                  [ SC ]
                                                              ]
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "EvaluationsOnDomain")
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                            []
                                                            [ SC ]
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "EvaluationsOnDomain";
                                                        Ty.function
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                  []
                                                                  [ SC ]
                                                              ]
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "EvaluationsOnDomain")
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                              []
                                                              [ SC ]
                                                          ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::cpu::PcsData")
                                                                []
                                                                [ SC ]
                                                            ],
                                                          "iter",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::ops::deref::Deref",
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                                        []
                                                                        [ SC ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "deref",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (| cached_pcs_datas |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |);
                                                      M.closure
                                                        (fun γ =>
                                                          ltac:(M.monadic
                                                            match γ with
                                                            | [ α0 ] =>
                                                              ltac:(M.monadic
                                                                (M.match_operator (|
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain",
                                                                  M.alloc (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ],
                                                                    α0
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let cv :=
                                                                          M.copy (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                                  []
                                                                                  [ SC ]
                                                                              ],
                                                                            γ
                                                                          |) in
                                                                        M.call_closure (|
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "EvaluationsOnDomain",
                                                                          M.get_trait_method (|
                                                                            "p3_commit::pcs::Pcs",
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs",
                                                                            [],
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ],
                                                                            "get_evaluations_on_domain",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (| pcs |)
                                                                              |)
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "ProverData"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::deref::Deref",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::sync::Arc")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "ProverData";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    [],
                                                                                    [],
                                                                                    "deref",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                            M.deref (|
                                                                                              M.read (|
                                                                                                cv
                                                                                              |)
                                                                                            |),
                                                                                            "openvm_stark_backend::prover::cpu::PcsData",
                                                                                            "data"
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.Integer
                                                                              IntegerKind.Usize
                                                                              0;
                                                                            M.read (|
                                                                              quotient_domain
                                                                            |)
                                                                          ]
                                                                        |)))
                                                                  ]
                                                                |)))
                                                            | _ =>
                                                              M.impossible
                                                                "wrong number of arguments"
                                                            end))
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            let~ _ : Ty.tuple [] :=
                                              M.match_operator (|
                                                Ty.tuple [],
                                                M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use
                                                          (M.alloc (|
                                                            Ty.path "bool",
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::keygen::types::StarkVerifyingKey")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Commitment"
                                                                  ],
                                                                "has_common_main",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        M.deref (|
                                                                          M.read (| pk |)
                                                                        |),
                                                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                                        "vk"
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)) in
                                                      let _ :=
                                                        is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      M.read (|
                                                        let~ _ : Ty.tuple [] :=
                                                          M.call_closure (|
                                                            Ty.tuple [],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "push",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                partitioned_main
                                                              |);
                                                              M.call_closure (|
                                                                Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "EvaluationsOnDomain",
                                                                M.get_trait_method (|
                                                                  "p3_commit::pcs::Pcs",
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs",
                                                                  [],
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ],
                                                                  "get_evaluations_on_domain",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (| M.read (| pcs |) |)
                                                                  |);
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.call_closure (|
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "ProverData"
                                                                          ],
                                                                        M.get_trait_method (|
                                                                          "core::ops::deref::Deref",
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::sync::Arc")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "ProverData";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ],
                                                                          [],
                                                                          [],
                                                                          "deref",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      common_main_pcs_data
                                                                                    |)
                                                                                  |),
                                                                                  "openvm_stark_backend::prover::cpu::PcsData",
                                                                                  "data"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  |);
                                                                  M.read (| common_main_idx |);
                                                                  M.read (| quotient_domain |)
                                                                ]
                                                              |)
                                                            ]
                                                          |) in
                                                        let~ _ : Ty.tuple [] :=
                                                          let β := common_main_idx in
                                                          M.write (|
                                                            β,
                                                            M.call_closure (|
                                                              Ty.path "usize",
                                                              BinOp.Wrap.add,
                                                              [
                                                                M.read (| β |);
                                                                Value.Integer IntegerKind.Usize 1
                                                              ]
                                                            |)
                                                          |) in
                                                        M.alloc (| Ty.tuple [], Value.Tuple [] |)
                                                      |)));
                                                  fun γ => ltac:(M.monadic (Value.Tuple []))
                                                ]
                                              |) in
                                            let~ per_phase :
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "EvaluationsOnDomain";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "EvaluationsOnDomain";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "itertools::Itertools",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::zip::Zip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Commitment";
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                                    []
                                                                    [ SC ]
                                                                ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                    []
                                                                    [
                                                                      Ty.path "usize";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ];
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Commitment";
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "openvm_stark_backend::prover::cpu::PcsData")
                                                                        []
                                                                        [ SC ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                        []
                                                                        [
                                                                          Ty.path "usize";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "EvaluationsOnDomain";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge"
                                                              ]
                                                          ])
                                                    ],
                                                  [],
                                                  [],
                                                  "collect_vec",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Commitment";
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                                      []
                                                                      [ SC ]
                                                                  ]
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                      []
                                                                      [
                                                                        Ty.path "usize";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                          []
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ]
                                                            ])
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::zip::Zip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Commitment";
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                                    []
                                                                    [ SC ]
                                                                ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                    []
                                                                    [
                                                                      Ty.path "usize";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::pcs::Pcs"
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenger"
                                                                  ]
                                                                  (Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Pcs")
                                                                  "EvaluationsOnDomain";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge"
                                                              ]
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                          []
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ]
                                                            ])
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Commitment";
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::prover::cpu::PcsData")
                                                                      []
                                                                      [ SC ]
                                                                  ]
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                      []
                                                                      [
                                                                        Ty.path "usize";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_function (|
                                                          "core::iter::adapters::zip::zip",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Commitment";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                                          []
                                                                          [ SC ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                          []
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              M.deref (|
                                                                M.read (| prover_data_after |)
                                                              |),
                                                              "openvm_stark_backend::prover::types::ProverDataAfterRapPhases",
                                                              "committed_pcs_data_per_phase"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              M.deref (|
                                                                M.read (| prover_data_after |)
                                                              |),
                                                              "openvm_stark_backend::prover::types::ProverDataAfterRapPhases",
                                                              "rap_views_per_phase"
                                                            |)
                                                          |)
                                                        ]
                                                      |);
                                                      M.closure
                                                        (fun γ =>
                                                          ltac:(M.monadic
                                                            match γ with
                                                            | [ α0 ] =>
                                                              ltac:(M.monadic
                                                                (M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "core::option::Option")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::pcs::Pcs"
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenger"
                                                                            ]
                                                                            (Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Pcs")
                                                                            "EvaluationsOnDomain";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge"
                                                                        ]
                                                                    ],
                                                                  M.alloc (|
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Commitment";
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                                  []
                                                                                  [ SC ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ],
                                                                    α0
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ0_0 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ,
                                                                            0
                                                                          |) in
                                                                        let γ0_1 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ,
                                                                            1
                                                                          |) in
                                                                        let γ0_0 :=
                                                                          M.read (| γ0_0 |) in
                                                                        let γ2_0 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ0_0,
                                                                            0
                                                                          |) in
                                                                        let γ2_1 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ0_0,
                                                                            1
                                                                          |) in
                                                                        let pcs_data :=
                                                                          M.alloc (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                                                  []
                                                                                  [ SC ]
                                                                              ],
                                                                            γ2_1
                                                                          |) in
                                                                        let rap_views :=
                                                                          M.copy (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge"
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            γ0_1
                                                                          |) in
                                                                        M.read (|
                                                                          let~ rap_view :
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge"
                                                                                    ]
                                                                                ] :=
                                                                            M.match_operator (|
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge"
                                                                                    ]
                                                                                ],
                                                                              M.alloc (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::ops::control_flow::ControlFlow")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "core::convert::Infallible"
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "usize";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge"
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::ops::control_flow::ControlFlow")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "core::convert::Infallible"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge"
                                                                                            ]
                                                                                        ]
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::try_trait::Try",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge"
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    [],
                                                                                    "branch",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge"
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge"
                                                                                              ]
                                                                                          ],
                                                                                        "get",
                                                                                        [],
                                                                                        [
                                                                                          Ty.path
                                                                                            "usize"
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge"
                                                                                                        ]
                                                                                                    ]
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "usize";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge"
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ],
                                                                                                [],
                                                                                                [],
                                                                                                "deref",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      rap_views
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |);
                                                                                        M.read (|
                                                                                          i
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::ops::control_flow::ControlFlow::Break",
                                                                                        0
                                                                                      |) in
                                                                                    let residual :=
                                                                                      M.copy (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "core::convert::Infallible"
                                                                                          ],
                                                                                        γ0_0
                                                                                      |) in
                                                                                    M.never_to_any (|
                                                                                      M.read (|
                                                                                        M.return_ (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "EvaluationsOnDomain";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge"
                                                                                                  ]
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::try_trait::FromResidual",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "EvaluationsOnDomain";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge"
                                                                                                    ]
                                                                                                ],
                                                                                              [],
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "core::convert::Infallible"
                                                                                                  ]
                                                                                              ],
                                                                                              "from_residual",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                residual
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |)));
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::ops::control_flow::ControlFlow::Continue",
                                                                                        0
                                                                                      |) in
                                                                                    let val :=
                                                                                      M.copy (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge"
                                                                                              ]
                                                                                          ],
                                                                                        γ0_0
                                                                                      |) in
                                                                                    M.read (|
                                                                                      val
                                                                                    |)))
                                                                              ]
                                                                            |) in
                                                                          let~ matrix_idx :
                                                                              Ty.path "usize" :=
                                                                            M.match_operator (|
                                                                              Ty.path "usize",
                                                                              M.alloc (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::ops::control_flow::ControlFlow")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "core::convert::Infallible"
                                                                                      ];
                                                                                    Ty.path "usize"
                                                                                  ],
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::ops::control_flow::ControlFlow")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "core::convert::Infallible"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::try_trait::Try",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ],
                                                                                    [],
                                                                                    [],
                                                                                    "branch",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            rap_view
                                                                                          |)
                                                                                        |),
                                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView",
                                                                                        "inner"
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::ops::control_flow::ControlFlow::Break",
                                                                                        0
                                                                                      |) in
                                                                                    let residual :=
                                                                                      M.copy (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "core::convert::Infallible"
                                                                                          ],
                                                                                        γ0_0
                                                                                      |) in
                                                                                    M.never_to_any (|
                                                                                      M.read (|
                                                                                        M.return_ (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::pcs::Pcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenge";
                                                                                                        Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Challenger"
                                                                                                      ]
                                                                                                      (Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Pcs")
                                                                                                      "EvaluationsOnDomain";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge"
                                                                                                  ]
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::try_trait::FromResidual",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenge";
                                                                                                          Ty.associated_in_trait
                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                            []
                                                                                                            []
                                                                                                            SC
                                                                                                            "Challenger"
                                                                                                        ]
                                                                                                        (Ty.associated_in_trait
                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                          []
                                                                                                          []
                                                                                                          SC
                                                                                                          "Pcs")
                                                                                                        "EvaluationsOnDomain";
                                                                                                      Ty.associated_in_trait
                                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                        []
                                                                                                        []
                                                                                                        SC
                                                                                                        "Challenge"
                                                                                                    ]
                                                                                                ],
                                                                                              [],
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "core::convert::Infallible"
                                                                                                  ]
                                                                                              ],
                                                                                              "from_residual",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                residual
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |)));
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::ops::control_flow::ControlFlow::Continue",
                                                                                        0
                                                                                      |) in
                                                                                    let val :=
                                                                                      M.copy (|
                                                                                        Ty.path
                                                                                          "usize",
                                                                                        γ0_0
                                                                                      |) in
                                                                                    M.read (|
                                                                                      val
                                                                                    |)))
                                                                              ]
                                                                            |) in
                                                                          let~ extended_matrix :
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "EvaluationsOnDomain" :=
                                                                            M.call_closure (|
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "EvaluationsOnDomain",
                                                                              M.get_trait_method (|
                                                                                "p3_commit::pcs::Pcs",
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs",
                                                                                [],
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ],
                                                                                "get_evaluations_on_domain",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (| pcs |)
                                                                                  |)
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "ProverData"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::ops::deref::Deref",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::sync::Arc")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "ProverData";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ],
                                                                                        [],
                                                                                        [],
                                                                                        "deref",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.deref (|
                                                                                                  M.read (|
                                                                                                    pcs_data
                                                                                                  |)
                                                                                                |),
                                                                                                "openvm_stark_backend::prover::cpu::PcsData",
                                                                                                "data"
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.read (|
                                                                                  matrix_idx
                                                                                |);
                                                                                M.read (|
                                                                                  quotient_domain
                                                                                |)
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "EvaluationsOnDomain";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ]
                                                                              ],
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "EvaluationsOnDomain";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ]
                                                                              ]
                                                                              [
                                                                                Value.mkStructRecord
                                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "EvaluationsOnDomain";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ]
                                                                                  [
                                                                                    ("inner",
                                                                                      Value.StructTuple
                                                                                        "core::option::Option::Some"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "EvaluationsOnDomain"
                                                                                        ]
                                                                                        [
                                                                                          M.read (|
                                                                                            extended_matrix
                                                                                          |)
                                                                                        ]);
                                                                                    ("challenges",
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ],
                                                                                        M.get_trait_method (|
                                                                                          "core::clone::Clone",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          [],
                                                                                          [],
                                                                                          "clone",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.deref (|
                                                                                                M.read (|
                                                                                                  rap_view
                                                                                                |)
                                                                                              |),
                                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView",
                                                                                              "challenges"
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |));
                                                                                    ("exposed_values",
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ],
                                                                                        M.get_trait_method (|
                                                                                          "core::clone::Clone",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          [],
                                                                                          [],
                                                                                          "clone",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.deref (|
                                                                                                M.read (|
                                                                                                  rap_view
                                                                                                |)
                                                                                              |),
                                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView",
                                                                                              "exposed_values"
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |))
                                                                                  ]
                                                                              ]
                                                                          |)
                                                                        |)))
                                                                  ]
                                                                |)))
                                                            | _ =>
                                                              M.impossible
                                                                "wrong number of arguments"
                                                            end))
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            let~ _ : Ty.tuple [] :=
                                              M.read (|
                                                M.loop (|
                                                  Ty.tuple [],
                                                  ltac:(M.monadic
                                                    (M.alloc (|
                                                      Ty.tuple [],
                                                      M.match_operator (|
                                                        Ty.tuple [],
                                                        M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let γ :=
                                                                M.alloc (|
                                                                  Ty.apply
                                                                    (Ty.path "core::option::Option")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "EvaluationsOnDomain";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "EvaluationsOnDomain";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::pcs::Pcs"
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenge";
                                                                                      Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Challenger"
                                                                                    ]
                                                                                    (Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Pcs")
                                                                                    "EvaluationsOnDomain";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge"
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      "last",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "EvaluationsOnDomain";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge"
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "EvaluationsOnDomain";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                per_phase
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |) in
                                                              let γ0_0 :=
                                                                M.SubPointer.get_struct_tuple_field (|
                                                                  γ,
                                                                  "core::option::Option::Some",
                                                                  0
                                                                |) in
                                                              let last :=
                                                                M.copy (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "EvaluationsOnDomain";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge"
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  γ0_0
                                                                |) in
                                                              M.match_operator (|
                                                                Ty.tuple [],
                                                                M.alloc (|
                                                                  Ty.tuple [],
                                                                  Value.Tuple []
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ :=
                                                                        M.use
                                                                          (M.alloc (|
                                                                            Ty.path "bool",
                                                                            M.call_closure (|
                                                                              Ty.path "bool",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "EvaluationsOnDomain";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge"
                                                                                      ]
                                                                                  ],
                                                                                "is_none",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      last
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)) in
                                                                      let _ :=
                                                                        is_constant_or_break_match (|
                                                                          M.read (| γ |),
                                                                          Value.Bool true
                                                                        |) in
                                                                      M.read (|
                                                                        let~ _ :
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "EvaluationsOnDomain";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge"
                                                                                      ]
                                                                                  ]
                                                                              ] :=
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::pcs::Pcs"
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenge";
                                                                                            Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Challenger"
                                                                                          ]
                                                                                          (Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Pcs")
                                                                                          "EvaluationsOnDomain";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge"
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "EvaluationsOnDomain";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              "pop",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.MutRef,
                                                                                per_phase
                                                                              |)
                                                                            ]
                                                                          |) in
                                                                        M.alloc (|
                                                                          Ty.tuple [],
                                                                          Value.Tuple []
                                                                        |)
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (M.never_to_any (|
                                                                        M.read (| M.break (||) |)
                                                                      |)))
                                                                ]
                                                              |)));
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (M.never_to_any (|
                                                                M.read (|
                                                                  let~ _ : Ty.tuple [] :=
                                                                    M.never_to_any (|
                                                                      M.read (| M.break (||) |)
                                                                    |) in
                                                                  M.alloc (|
                                                                    Ty.tuple [],
                                                                    Value.Tuple []
                                                                  |)
                                                                |)
                                                              |)))
                                                        ]
                                                      |)
                                                    |)))
                                                |)
                                              |) in
                                            let~ per_phase :
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "EvaluationsOnDomain";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "EvaluationsOnDomain";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::into_iter::IntoIter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.function
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "EvaluationsOnDomain";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge"
                                                          ])
                                                    ],
                                                  [],
                                                  [],
                                                  "collect",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "EvaluationsOnDomain";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "alloc::vec::into_iter::IntoIter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "EvaluationsOnDomain";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "EvaluationsOnDomain";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "EvaluationsOnDomain";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge"
                                                            ])
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::into_iter::IntoIter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "EvaluationsOnDomain";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge"
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "EvaluationsOnDomain";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge"
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "EvaluationsOnDomain";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "EvaluationsOnDomain";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge"
                                                            ])
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "alloc::vec::into_iter::IntoIter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "EvaluationsOnDomain";
                                                                    Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Challenge"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::collect::IntoIterator",
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "EvaluationsOnDomain";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          [],
                                                          [],
                                                          "into_iter",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| per_phase |) ]
                                                      |);
                                                      M.closure
                                                        (fun γ =>
                                                          ltac:(M.monadic
                                                            match γ with
                                                            | [ α0 ] =>
                                                              ltac:(M.monadic
                                                                (M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "EvaluationsOnDomain";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge"
                                                                    ],
                                                                  M.alloc (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "EvaluationsOnDomain";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge"
                                                                          ]
                                                                      ],
                                                                    α0
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let v :=
                                                                          M.copy (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "EvaluationsOnDomain";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ]
                                                                              ],
                                                                            γ
                                                                          |) in
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "EvaluationsOnDomain";
                                                                              Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Challenge"
                                                                            ],
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "openvm_stark_backend::prover::types::RapSinglePhaseView")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "EvaluationsOnDomain";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge"
                                                                                  ]
                                                                              ],
                                                                            "unwrap_or_default",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [ M.read (| v |) ]
                                                                        |)))
                                                                  ]
                                                                |)))
                                                            | _ =>
                                                              M.impossible
                                                                "wrong number of arguments"
                                                            end))
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            M.alloc (|
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::RapView")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "EvaluationsOnDomain";
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge"
                                                ],
                                              Value.mkStructRecord
                                                "openvm_stark_backend::prover::types::RapView"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "EvaluationsOnDomain";
                                                  Ty.associated_in_trait
                                                    "p3_commit::domain::PolynomialSpace"
                                                    []
                                                    []
                                                    (Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain")
                                                    "Val";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge"
                                                ]
                                                [
                                                  ("log_trace_height",
                                                    M.read (| log_trace_height |));
                                                  ("preprocessed", M.read (| preprocessed |));
                                                  ("partitioned_main",
                                                    M.read (| partitioned_main |));
                                                  ("public_values",
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      M.get_associated_function (|
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val"
                                                          ],
                                                        "to_vec",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val"
                                                                    ]
                                                                ],
                                                              M.get_trait_method (|
                                                                "core::ops::deref::Deref",
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ],
                                                                [],
                                                                [],
                                                                "deref",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (| M.read (| pvs |) |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |));
                                                  ("per_phase", M.read (| per_phase |))
                                                ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |) in
              M.alloc (|
                Ty.tuple
                  [
                    Ty.associated_in_trait
                      "p3_commit::pcs::Pcs"
                      []
                      [
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenge";
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenger"
                      ]
                      (Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs")
                      "Commitment";
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ]
                  ],
                M.match_operator (|
                  Ty.tuple
                    [
                      Ty.associated_in_trait
                        "p3_commit::pcs::Pcs"
                        []
                        [
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenger"
                        ]
                        (Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Pcs")
                        "Commitment";
                      Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ]
                    ],
                  M.alloc (|
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::domain::PolynomialSpace"
                                      []
                                      []
                                      (Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Domain")
                                      "Val"
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ]
                      ],
                    M.call_closure (|
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val"
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::iter::adapters::map::Map")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                      []
                                      [ SC ]
                                  ]
                              ];
                            Ty.function
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                          []
                                          [ SC ]
                                      ]
                                  ]
                              ]
                              (Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val"
                                        ]
                                    ];
                                  Ty.path "u8"
                                ])
                          ],
                        [],
                        [],
                        "unzip",
                        [],
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::domain::PolynomialSpace"
                                    []
                                    []
                                    (Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain")
                                    "Val"
                                ]
                            ];
                          Ty.path "u8";
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::domain::PolynomialSpace"
                                        []
                                        []
                                        (Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain")
                                        "Val"
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ]
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::map::Map")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                        []
                                        [ SC ]
                                    ]
                                ];
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                            []
                                            [ SC ]
                                        ]
                                    ]
                                ]
                                (Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val"
                                          ]
                                      ];
                                    Ty.path "u8"
                                  ])
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                      []
                                      [ SC ]
                                  ]
                              ],
                            [],
                            [],
                            "map",
                            [],
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::domain::PolynomialSpace"
                                            []
                                            []
                                            (Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain")
                                            "Val"
                                        ]
                                    ];
                                  Ty.path "u8"
                                ];
                              Ty.function
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                            []
                                            [ SC ]
                                        ]
                                    ]
                                ]
                                (Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::domain::PolynomialSpace"
                                              []
                                              []
                                              (Ty.associated_in_trait
                                                "p3_commit::pcs::Pcs"
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenge";
                                                  Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Challenger"
                                                ]
                                                (Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Pcs")
                                                "Domain")
                                              "Val"
                                          ]
                                      ];
                                    Ty.path "u8"
                                  ])
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                        []
                                        [ SC ]
                                    ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                          []
                                          [ SC ]
                                      ]
                                  ],
                                "iter",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| pk_views |) |) |)
                              ]
                            |);
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::domain::PolynomialSpace"
                                                      []
                                                      []
                                                      (Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain")
                                                      "Val"
                                                  ]
                                              ];
                                            Ty.path "u8"
                                          ],
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                            ],
                                          α0
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let pk :=
                                                M.copy (|
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::CpuBackend")
                                                            []
                                                            [ SC ]
                                                        ]
                                                    ],
                                                  γ
                                                |) in
                                              Value.Tuple
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.SubPointer.get_struct_record_field (|
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.deref (|
                                                          M.read (|
                                                            M.SubPointer.get_struct_record_field (|
                                                              M.deref (| M.read (| pk |) |),
                                                              "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                              "vk"
                                                            |)
                                                          |)
                                                        |),
                                                        "openvm_stark_backend::keygen::types::StarkVerifyingKey",
                                                        "symbolic_constraints"
                                                      |),
                                                      "openvm_stark_backend::air_builders::symbolic::dag::SymbolicConstraintsDag",
                                                      "constraints"
                                                    |)
                                                  |);
                                                  M.read (|
                                                    M.SubPointer.get_struct_record_field (|
                                                      M.deref (|
                                                        M.read (|
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.deref (| M.read (| pk |) |),
                                                            "openvm_stark_backend::prover::types::DeviceStarkProvingKey",
                                                            "vk"
                                                          |)
                                                        |)
                                                      |),
                                                      "openvm_stark_backend::keygen::types::StarkVerifyingKey",
                                                      "quotient_degree"
                                                    |)
                                                  |)
                                                ]))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |)
                      ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let constraints :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::domain::PolynomialSpace"
                                          []
                                          []
                                          (Ty.associated_in_trait
                                            "p3_commit::pcs::Pcs"
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenge";
                                              Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Challenger"
                                            ]
                                            (Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Pcs")
                                            "Domain")
                                          "Val"
                                      ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            γ0_0
                          |) in
                        let quotient_degrees :=
                          M.copy (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Ty.path "u8"; Ty.path "alloc::alloc::Global" ],
                            γ0_1
                          |) in
                        M.read (|
                          let~ qc :
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::prover::cpu::quotient::QuotientCommitter")
                                []
                                [ SC ] :=
                            M.call_closure (|
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::prover::cpu::quotient::QuotientCommitter")
                                []
                                [ SC ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path
                                    "openvm_stark_backend::prover::cpu::quotient::QuotientCommitter")
                                  []
                                  [ SC ],
                                "new",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs"
                                        ],
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice")
                                          []
                                          [ SC ],
                                        "pcs",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| self |) |)
                                        |)
                                      ]
                                    |)
                                  |)
                                |);
                                M.read (| alpha |);
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "openvm_stark_backend::prover::cpu::CpuDevice",
                                    "log_blowup_factor"
                                  |)
                                |)
                              ]
                            |) in
                          let~ quotient_values :
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::prover::cpu::quotient::QuotientData")
                                []
                                [ SC ] :=
                            M.call_closure (|
                              Ty.apply
                                (Ty.path
                                  "openvm_stark_backend::prover::cpu::quotient::QuotientData")
                                []
                                [ SC ],
                              M.get_function (|
                                "openvm_stark_backend::utils::metrics_span",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path
                                      "openvm_stark_backend::prover::cpu::quotient::QuotientData")
                                    []
                                    [ SC ];
                                  Ty.function
                                    []
                                    (Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::prover::cpu::quotient::QuotientData")
                                      []
                                      [ SC ]);
                                  Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                                ]
                              |),
                              [
                                mk_str (| "quotient_poly_compute_time_ms" |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::prover::cpu::quotient::QuotientData")
                                              []
                                              [ SC ],
                                            M.alloc (| Ty.tuple [], α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::cpu::quotient::QuotientData")
                                                      []
                                                      [ SC ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::quotient::QuotientCommitter")
                                                        []
                                                        [ SC ],
                                                      "quotient_values",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "EvaluationsOnDomain"
                                                      ]
                                                    |),
                                                    [
                                                      M.borrow (| Pointer.Kind.Ref, qc |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::domain::PolynomialSpace"
                                                                              []
                                                                              []
                                                                              (Ty.associated_in_trait
                                                                                "p3_commit::pcs::Pcs"
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenge";
                                                                                  Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Challenger"
                                                                                ]
                                                                                (Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Pcs")
                                                                                "Domain")
                                                                              "Val"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "openvm_stark_backend::air_builders::symbolic::dag::SymbolicExpressionDag")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val"
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    constraints
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.read (| extended_views |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [ Ty.path "u8" ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.path "u8";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    quotient_degrees
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |) in
                          M.alloc (|
                            Ty.tuple
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Commitment";
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ],
                            M.call_closure (|
                              Ty.tuple
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Commitment";
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ],
                              M.get_function (|
                                "openvm_stark_backend::utils::metrics_span",
                                [],
                                [
                                  Ty.tuple
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::pcs::Pcs"
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenge";
                                          Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Challenger"
                                        ]
                                        (Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Pcs")
                                        "Commitment";
                                      Ty.apply
                                        (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                        []
                                        [ SC ]
                                    ];
                                  Ty.function
                                    []
                                    (Ty.tuple
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Commitment";
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                          []
                                          [ SC ]
                                      ]);
                                  Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                                ]
                              |),
                              [
                                mk_str (| "quotient_poly_commit_time_ms" |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.tuple
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::pcs::Pcs"
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenge";
                                                    Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Challenger"
                                                  ]
                                                  (Ty.associated_in_trait
                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                    []
                                                    []
                                                    SC
                                                    "Pcs")
                                                  "Commitment";
                                                Ty.apply
                                                  (Ty.path
                                                    "openvm_stark_backend::prover::cpu::PcsData")
                                                  []
                                                  [ SC ]
                                              ],
                                            M.alloc (| Ty.tuple [], α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.tuple
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Commitment";
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                          []
                                                          [ SC ]
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::cpu::quotient::QuotientCommitter")
                                                        []
                                                        [ SC ],
                                                      "commit",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (| Pointer.Kind.Ref, qc |);
                                                      M.read (| quotient_values |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          |)
                        |)))
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::QuotientCommitter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ]
          (Self SC)
          (* Instance *)
          [ ("eval_and_commit_quotient", InstanceField.Method (eval_and_commit_quotient SC)) ].
    End Impl_openvm_stark_backend_prover_hal_QuotientCommitter_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_OpeningProver_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ].
      
      (*
          fn open(
              &self,
              challenger: &mut SC::Challenger,
              // For each preprocessed trace commitment, the prover data and
              // the log height of the matrix, in order
              preprocessed: Vec<PcsData<SC>>,
              // For each main trace commitment, the prover data and
              // the log height of each matrix, in order
              // Note: this is all one challenge phase.
              main: Vec<PcsData<SC>>,
              // `after_phase[i]` has shared commitment prover data for all matrices in phase `i + 1`.
              after_phase: Vec<PcsData<SC>>,
              // Quotient poly commitment prover data
              quotient_data: PcsData<SC>,
              // Quotient degree for each RAP committed in quotient_data, in order
              quotient_degrees: &[u8],
          ) -> OpeningProof<PcsProof<SC>, SC::Challenge> {
              // Draw `zeta` challenge
              let zeta: SC::Challenge = challenger.sample_ext_element();
              tracing::debug!("zeta: {zeta:?}");
      
              let pcs = self.pcs();
              let domain = |log_height| pcs.natural_domain_for_degree(1usize << log_height);
              let opener = OpeningProver::<SC>::new(pcs, zeta);
              let preprocessed = preprocessed
                  .iter()
                  .map(|v| {
                      assert_eq!(v.log_trace_heights.len(), 1);
                      (v.data.as_ref(), domain(v.log_trace_heights[0]))
                  })
                  .collect();
              let main = main
                  .iter()
                  .map(|v| {
                      let domains = v.log_trace_heights.iter().copied().map(domain).collect();
                      (v.data.as_ref(), domains)
                  })
                  .collect();
              let after_phase: Vec<_> = after_phase
                  .iter()
                  .map(|v| {
                      let domains = v.log_trace_heights.iter().copied().map(domain).collect();
                      (v.data.as_ref(), domains)
                  })
                  .collect();
              opener.open(
                  challenger,
                  preprocessed,
                  main,
                  after_phase,
                  &quotient_data.data,
                  quotient_degrees,
              )
          }
      *)
      Definition open (SC : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [],
            [],
            [ self; challenger; preprocessed; main; after_phase; quotient_data; quotient_degrees
            ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ] ],
                self
              |) in
            let challenger :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&mut")
                  []
                  [
                    Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Challenger"
                  ],
                challenger
              |) in
            let preprocessed :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ];
                    Ty.path "alloc::alloc::Global"
                  ],
                preprocessed
              |) in
            let main :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ];
                    Ty.path "alloc::alloc::Global"
                  ],
                main
              |) in
            let after_phase :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ];
                    Ty.path "alloc::alloc::Global"
                  ],
                after_phase
              |) in
            let quotient_data :=
              M.alloc (|
                Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ],
                quotient_data
              |) in
            let quotient_degrees :=
              M.alloc (|
                Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Ty.path "u8" ] ],
                quotient_degrees
              |) in
            M.read (|
              let~ zeta :
                  Ty.associated_in_trait
                    "openvm_stark_backend::config::StarkGenericConfig"
                    []
                    []
                    SC
                    "Challenge" :=
                M.call_closure (|
                  Ty.associated_in_trait
                    "openvm_stark_backend::config::StarkGenericConfig"
                    []
                    []
                    SC
                    "Challenge",
                  M.get_trait_method (|
                    "p3_challenger::FieldChallenger",
                    Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Challenger",
                    [],
                    [
                      Ty.associated_in_trait
                        "p3_commit::domain::PolynomialSpace"
                        []
                        []
                        (Ty.associated_in_trait
                          "p3_commit::pcs::Pcs"
                          []
                          [
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenge";
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenger"
                          ]
                          (Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Pcs")
                          "Domain")
                        "Val"
                    ],
                    "sample_ext_element",
                    [],
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenge"
                    ]
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |) ]
                |) in
              let~ _ : Ty.tuple [] :=
                M.read (|
                  let~ enabled : Ty.path "bool" :=
                    LogicalOp.and (|
                      LogicalOp.and (|
                        M.call_closure (|
                          Ty.path "bool",
                          M.get_trait_method (|
                            "core::cmp::PartialOrd",
                            Ty.path "tracing_core::metadata::Level",
                            [],
                            [ Ty.path "tracing_core::metadata::LevelFilter" ],
                            "le",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              get_associated_constant (|
                                Ty.path "tracing_core::metadata::Level",
                                "DEBUG",
                                Ty.path "tracing_core::metadata::Level"
                              |)
                            |);
                            M.borrow (|
                              Pointer.Kind.Ref,
                              get_constant (|
                                "tracing::level_filters::STATIC_MAX_LEVEL",
                                Ty.path "tracing_core::metadata::LevelFilter"
                              |)
                            |)
                          ]
                        |),
                        ltac:(M.monadic
                          (M.call_closure (|
                            Ty.path "bool",
                            M.get_trait_method (|
                              "core::cmp::PartialOrd",
                              Ty.path "tracing_core::metadata::Level",
                              [],
                              [ Ty.path "tracing_core::metadata::LevelFilter" ],
                              "le",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                get_associated_constant (|
                                  Ty.path "tracing_core::metadata::Level",
                                  "DEBUG",
                                  Ty.path "tracing_core::metadata::Level"
                                |)
                              |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.alloc (|
                                  Ty.path "tracing_core::metadata::LevelFilter",
                                  M.call_closure (|
                                    Ty.path "tracing_core::metadata::LevelFilter",
                                    M.get_associated_function (|
                                      Ty.path "tracing_core::metadata::LevelFilter",
                                      "current",
                                      [],
                                      []
                                    |),
                                    []
                                  |)
                                |)
                              |)
                            ]
                          |)))
                      |),
                      ltac:(M.monadic
                        (M.read (|
                          let~ interest : Ty.path "tracing_core::subscriber::Interest" :=
                            M.call_closure (|
                              Ty.path "tracing_core::subscriber::Interest",
                              M.get_associated_function (|
                                Ty.path "tracing_core::callsite::DefaultCallsite",
                                "interest",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.read (|
                                      get_constant (|
                                        "openvm_stark_backend::prover::cpu::open::__CALLSITE",
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::callsite::DefaultCallsite" ]
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |) in
                          M.alloc (|
                            Ty.path "bool",
                            LogicalOp.and (|
                              UnOp.not (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  M.get_associated_function (|
                                    Ty.path "tracing_core::subscriber::Interest",
                                    "is_never",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                |)
                              |),
                              ltac:(M.monadic
                                (M.call_closure (|
                                  Ty.path "bool",
                                  M.get_function (|
                                    "tracing::__macro_support::__is_enabled",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ],
                                          M.get_trait_method (|
                                            "tracing_core::callsite::Callsite",
                                            Ty.path "tracing_core::callsite::DefaultCallsite",
                                            [],
                                            [],
                                            "metadata",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (|
                                                M.read (|
                                                  get_constant (|
                                                    "openvm_stark_backend::prover::cpu::open::__CALLSITE",
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite"
                                                      ]
                                                  |)
                                                |)
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |);
                                    M.read (| interest |)
                                  ]
                                |)))
                            |)
                          |)
                        |)))
                    |) in
                  M.alloc (|
                    Ty.tuple [],
                    M.match_operator (|
                      Ty.tuple [],
                      M.alloc (| Ty.tuple [], Value.Tuple [] |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ := M.use enabled in
                            let _ :=
                              is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                            M.read (|
                              let~ _ : Ty.tuple [] :=
                                M.call_closure (|
                                  Ty.tuple [],
                                  M.get_trait_method (|
                                    "core::ops::function::Fn",
                                    Ty.function
                                      [ Ty.path "tracing_core::field::ValueSet" ]
                                      (Ty.tuple []),
                                    [],
                                    [ Ty.tuple [ Ty.path "tracing_core::field::ValueSet" ] ],
                                    "call",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Ty.function
                                          [ Ty.path "tracing_core::field::ValueSet" ]
                                          (Ty.tuple []),
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                ltac:(M.monadic
                                                  (M.match_operator (|
                                                    Ty.tuple [],
                                                    M.alloc (|
                                                      Ty.path "tracing_core::field::ValueSet",
                                                      α0
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let value_set :=
                                                            M.copy (|
                                                              Ty.path
                                                                "tracing_core::field::ValueSet",
                                                              γ
                                                            |) in
                                                          M.read (|
                                                            let~ meta :
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata"
                                                                  ] :=
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata"
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "tracing_core::callsite::Callsite",
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  [],
                                                                  [],
                                                                  "metadata",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "openvm_stark_backend::prover::cpu::open::__CALLSITE",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |) in
                                                            let~ _ : Ty.tuple [] :=
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::event::Event",
                                                                  "dispatch",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (| M.read (| meta |) |)
                                                                  |);
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        value_set
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |) in
                                                            M.alloc (|
                                                              Ty.tuple [],
                                                              Value.Tuple []
                                                            |)
                                                          |)))
                                                    ]
                                                  |)))
                                              | _ => M.impossible "wrong number of arguments"
                                              end))
                                      |)
                                    |);
                                    Value.Tuple
                                      [
                                        M.read (|
                                          let~ iter : Ty.path "tracing_core::field::Iter" :=
                                            M.call_closure (|
                                              Ty.path "tracing_core::field::Iter",
                                              M.get_associated_function (|
                                                Ty.path "tracing_core::field::FieldSet",
                                                "iter",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::field::FieldSet" ],
                                                      M.get_associated_function (|
                                                        Ty.path "tracing_core::metadata::Metadata",
                                                        "fields",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "openvm_stark_backend::prover::cpu::open::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |) in
                                          M.alloc (|
                                            Ty.path "tracing_core::field::ValueSet",
                                            M.call_closure (|
                                              Ty.path "tracing_core::field::ValueSet",
                                              M.get_associated_function (|
                                                Ty.path "tracing_core::field::FieldSet",
                                                "value_set",
                                                [],
                                                [
                                                  Ty.apply
                                                    (Ty.path "array")
                                                    [ Value.Integer IntegerKind.Usize 1 ]
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.path "tracing_core::field::Field"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::option::Option")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.dyn
                                                                    [
                                                                      ("tracing_core::field::Value::Trait",
                                                                        [])
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::field::FieldSet" ],
                                                      M.get_associated_function (|
                                                        Ty.path "tracing_core::metadata::Metadata",
                                                        "fields",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "openvm_stark_backend::prover::cpu::open::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        Ty.apply
                                                          (Ty.path "array")
                                                          [ Value.Integer IntegerKind.Usize 1 ]
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::field::Field"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.dyn
                                                                          [
                                                                            ("tracing_core::field::Value::Trait",
                                                                              [])
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ],
                                                        Value.Array
                                                          [
                                                            Value.Tuple
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Ty.path
                                                                      "tracing_core::field::Field",
                                                                    M.call_closure (|
                                                                      Ty.path
                                                                        "tracing_core::field::Field",
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::field::Field"
                                                                          ],
                                                                        "expect",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::field::Field"
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.path
                                                                              "tracing_core::field::Iter",
                                                                            [],
                                                                            [],
                                                                            "next",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.MutRef,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  iter
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            mk_str (|
                                                                              "FieldSet corrupted (this is a bug)"
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |);
                                                                Value.StructTuple
                                                                  "core::option::Option::Some"
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.dyn
                                                                          [
                                                                            ("tracing_core::field::Value::Trait",
                                                                              [])
                                                                          ]
                                                                      ]
                                                                  ]
                                                                  [
                                                                    M.read (|
                                                                      M.use
                                                                        (M.alloc (|
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ],
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.dyn
                                                                                  [
                                                                                    ("tracing_core::field::Value::Trait",
                                                                                      [])
                                                                                  ]
                                                                              ],
                                                                            M.pointer_coercion
                                                                              M.PointerCoercion.Unsize
                                                                              (Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::fmt::Arguments"
                                                                                ])
                                                                              (Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.dyn
                                                                                    [
                                                                                      ("tracing_core::field::Value::Trait",
                                                                                        [])
                                                                                    ]
                                                                                ]),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.alloc (|
                                                                                      Ty.path
                                                                                        "core::fmt::Arguments",
                                                                                      M.call_closure (|
                                                                                        Ty.path
                                                                                          "core::fmt::Arguments",
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1",
                                                                                          [
                                                                                            Value.Integer
                                                                                              IntegerKind.Usize
                                                                                              1;
                                                                                            Value.Integer
                                                                                              IntegerKind.Usize
                                                                                              1
                                                                                          ],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ]
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      mk_str (|
                                                                                                        "zeta: "
                                                                                                      |)
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |);
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.alloc (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "array")
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument"
                                                                                                    ],
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_debug",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                              []
                                                                                                              []
                                                                                                              SC
                                                                                                              "Challenge"
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                zeta
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |))
                                                                    |)
                                                                  ]
                                                              ]
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)
                                        |)
                                      ]
                                  ]
                                |) in
                              M.alloc (| Ty.tuple [], Value.Tuple [] |)
                            |)));
                        fun γ => ltac:(M.monadic (Value.Tuple []))
                      ]
                    |)
                  |)
                |) in
              let~ pcs :
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs"
                    ],
                  M.get_associated_function (|
                    Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuDevice") [] [ SC ],
                    "pcs",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                |) in
              let~ domain :
                  Ty.function
                    [ Ty.path "u8" ]
                    (Ty.associated_in_trait
                      "p3_commit::pcs::Pcs"
                      []
                      [
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenge";
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenger"
                      ]
                      (Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs")
                      "Domain") :=
                M.closure
                  (fun γ =>
                    ltac:(M.monadic
                      match γ with
                      | [ α0 ] =>
                        ltac:(M.monadic
                          (M.match_operator (|
                            Ty.associated_in_trait
                              "p3_commit::pcs::Pcs"
                              []
                              [
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenge";
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenger"
                              ]
                              (Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Pcs")
                              "Domain",
                            M.alloc (| Ty.path "u8", α0 |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let log_height := M.copy (| Ty.path "u8", γ |) in
                                  M.call_closure (|
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain",
                                    M.get_trait_method (|
                                      "p3_commit::pcs::Pcs",
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs",
                                      [],
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ],
                                      "natural_domain_for_degree",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| pcs |) |)
                                      |);
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.shl,
                                        [ Value.Integer IntegerKind.Usize 1; M.read (| log_height |)
                                        ]
                                      |)
                                    ]
                                  |)))
                            ]
                          |)))
                      | _ => M.impossible "wrong number of arguments"
                      end)) in
              let~ opener :
                  Ty.apply
                    (Ty.path "openvm_stark_backend::prover::cpu::opener::OpeningProver")
                    []
                    [ SC ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "openvm_stark_backend::prover::cpu::opener::OpeningProver")
                    []
                    [ SC ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::cpu::opener::OpeningProver")
                      []
                      [ SC ],
                    "new",
                    [],
                    []
                  |),
                  [
                    M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| pcs |) |) |);
                    M.read (| zeta |)
                  ]
                |) in
              let~ preprocessed :
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ];
                          Ty.associated_in_trait
                            "p3_commit::pcs::Pcs"
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Pcs")
                            "Domain"
                        ];
                      Ty.path "alloc::alloc::Global"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ];
                          Ty.associated_in_trait
                            "p3_commit::pcs::Pcs"
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Pcs")
                            "Domain"
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ]
                          ];
                        Ty.function
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ]
                          ]
                          (Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain"
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ];
                          Ty.function
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData"
                                  ];
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain"
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ]
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain"
                            ];
                          Ty.function
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData"
                                  ];
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "Domain"
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                            []
                                            [ SC ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                          []
                                          [ SC ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, preprocessed |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "ProverData"
                                          ];
                                        Ty.associated_in_trait
                                          "p3_commit::pcs::Pcs"
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenge";
                                            Ty.associated_in_trait
                                              "openvm_stark_backend::config::StarkGenericConfig"
                                              []
                                              []
                                              SC
                                              "Challenger"
                                          ]
                                          (Ty.associated_in_trait
                                            "openvm_stark_backend::config::StarkGenericConfig"
                                            []
                                            []
                                            SC
                                            "Pcs")
                                          "Domain"
                                      ],
                                    M.alloc (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                            []
                                            [ SC ]
                                        ],
                                      α0
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let v :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ]
                                                ],
                                              γ
                                            |) in
                                          M.read (|
                                            let~ _ : Ty.tuple [] :=
                                              M.match_operator (|
                                                Ty.tuple [],
                                                M.alloc (|
                                                  Ty.tuple
                                                    [
                                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                                    ],
                                                  Value.Tuple
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.alloc (|
                                                          Ty.path "usize",
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.path "u8";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              "len",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.SubPointer.get_struct_record_field (|
                                                                  M.deref (| M.read (| v |) |),
                                                                  "openvm_stark_backend::prover::cpu::PcsData",
                                                                  "log_trace_heights"
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.alloc (|
                                                          Ty.path "usize",
                                                          Value.Integer IntegerKind.Usize 1
                                                        |)
                                                      |)
                                                    ]
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let left_val :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.path "usize" ],
                                                          γ0_0
                                                        |) in
                                                      let right_val :=
                                                        M.copy (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.path "usize" ],
                                                          γ0_1
                                                        |) in
                                                      M.match_operator (|
                                                        Ty.tuple [],
                                                        M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let γ :=
                                                                M.use
                                                                  (M.alloc (|
                                                                    Ty.path "bool",
                                                                    UnOp.not (|
                                                                      M.call_closure (|
                                                                        Ty.path "bool",
                                                                        BinOp.eq,
                                                                        [
                                                                          M.read (|
                                                                            M.deref (|
                                                                              M.read (| left_val |)
                                                                            |)
                                                                          |);
                                                                          M.read (|
                                                                            M.deref (|
                                                                              M.read (| right_val |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  |)) in
                                                              let _ :=
                                                                is_constant_or_break_match (|
                                                                  M.read (| γ |),
                                                                  Value.Bool true
                                                                |) in
                                                              M.never_to_any (|
                                                                M.read (|
                                                                  let~ kind :
                                                                      Ty.path
                                                                        "core::panicking::AssertKind" :=
                                                                    Value.StructTuple
                                                                      "core::panicking::AssertKind::Eq"
                                                                      []
                                                                      []
                                                                      [] in
                                                                  M.alloc (|
                                                                    Ty.path "never",
                                                                    M.call_closure (|
                                                                      Ty.path "never",
                                                                      M.get_function (|
                                                                        "core::panicking::assert_failed",
                                                                        [],
                                                                        [
                                                                          Ty.path "usize";
                                                                          Ty.path "usize"
                                                                        ]
                                                                      |),
                                                                      [
                                                                        M.read (| kind |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (|
                                                                                  left_val
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (|
                                                                                  right_val
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |);
                                                                        Value.StructTuple
                                                                          "core::option::Option::None"
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "core::fmt::Arguments"
                                                                          ]
                                                                          []
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)));
                                                          fun γ => ltac:(M.monadic (Value.Tuple []))
                                                        ]
                                                      |)))
                                                ]
                                              |) in
                                            M.alloc (|
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "ProverData"
                                                    ];
                                                  Ty.associated_in_trait
                                                    "p3_commit::pcs::Pcs"
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenge";
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Challenger"
                                                    ]
                                                    (Ty.associated_in_trait
                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                      []
                                                      []
                                                      SC
                                                      "Pcs")
                                                    "Domain"
                                                ],
                                              Value.Tuple
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "ProverData"
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::convert::AsRef",
                                                      Ty.apply
                                                        (Ty.path "alloc::sync::Arc")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "ProverData";
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "ProverData"
                                                      ],
                                                      "as_ref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| v |) |),
                                                          "openvm_stark_backend::prover::cpu::PcsData",
                                                          "data"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.call_closure (|
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain",
                                                    M.get_trait_method (|
                                                      "core::ops::function::Fn",
                                                      Ty.function
                                                        [ Ty.path "u8" ]
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain"),
                                                      [],
                                                      [ Ty.tuple [ Ty.path "u8" ] ],
                                                      "call",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (| Pointer.Kind.Ref, domain |);
                                                      Value.Tuple
                                                        [
                                                          M.read (|
                                                            M.deref (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [ Ty.path "u8" ],
                                                                M.get_trait_method (|
                                                                  "core::ops::index::Index",
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.path "u8";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  [],
                                                                  [ Ty.path "usize" ],
                                                                  "index",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.SubPointer.get_struct_record_field (|
                                                                      M.deref (| M.read (| v |) |),
                                                                      "openvm_stark_backend::prover::cpu::PcsData",
                                                                      "log_trace_heights"
                                                                    |)
                                                                  |);
                                                                  Value.Integer IntegerKind.Usize 0
                                                                ]
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                    ]
                                                  |)
                                                ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |) in
              let~ main :
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain";
                              Ty.path "alloc::alloc::Global"
                            ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain";
                              Ty.path "alloc::alloc::Global"
                            ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ]
                          ];
                        Ty.function
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ]
                          ]
                          (Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ];
                          Ty.function
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ]
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ];
                          Ty.function
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                            []
                                            [ SC ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                          []
                                          [ SC ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, main |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "ProverData"
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    M.alloc (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                            []
                                            [ SC ]
                                        ],
                                      α0
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let v :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ]
                                                ],
                                              γ
                                            |) in
                                          M.read (|
                                            let~ domains :
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain";
                                                    Ty.path "alloc::alloc::Global"
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain";
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "core::iter::adapters::copied::Copied")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ Ty.path "u8" ]
                                                        ];
                                                      Ty.function
                                                        [ Ty.path "u8" ]
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                    ],
                                                  [],
                                                  [],
                                                  "collect",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::copied::Copied")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [ Ty.path "u8" ]
                                                          ];
                                                        Ty.function
                                                          [ Ty.path "u8" ]
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path
                                                          "core::iter::adapters::copied::Copied")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ Ty.path "u8" ]
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain";
                                                        Ty.function
                                                          [ Ty.path "u8" ]
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::copied::Copied")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [ Ty.path "u8" ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ Ty.path "u8" ],
                                                          [],
                                                          [],
                                                          "copied",
                                                          [],
                                                          [ Ty.path "u8" ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [ Ty.path "u8" ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "slice")
                                                                []
                                                                [ Ty.path "u8" ],
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          []
                                                                          [ Ty.path "u8" ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::ops::deref::Deref",
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.path "u8";
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "deref",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.SubPointer.get_struct_record_field (|
                                                                          M.deref (|
                                                                            M.read (| v |)
                                                                          |),
                                                                          "openvm_stark_backend::prover::cpu::PcsData",
                                                                          "log_trace_heights"
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |);
                                                      M.read (| domain |)
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            M.alloc (|
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "ProverData"
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              Value.Tuple
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "ProverData"
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::convert::AsRef",
                                                      Ty.apply
                                                        (Ty.path "alloc::sync::Arc")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "ProverData";
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "ProverData"
                                                      ],
                                                      "as_ref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| v |) |),
                                                          "openvm_stark_backend::prover::cpu::PcsData",
                                                          "data"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.read (| domains |)
                                                ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |) in
              let~ after_phase :
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain";
                              Ty.path "alloc::alloc::Global"
                            ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain";
                              Ty.path "alloc::alloc::Global"
                            ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ]
                          ];
                        Ty.function
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ]
                          ]
                          (Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ];
                          Ty.function
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                              []
                              [ SC ]
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "ProverData"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ];
                          Ty.function
                            [
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                    []
                                    [ SC ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::pcs::Pcs"
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenge";
                                        Ty.associated_in_trait
                                          "openvm_stark_backend::config::StarkGenericConfig"
                                          []
                                          []
                                          SC
                                          "Challenger"
                                      ]
                                      (Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Pcs")
                                      "Domain";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                []
                                [ SC ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                  []
                                  [ SC ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                            []
                                            [ SC ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                          []
                                          [ SC ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, after_phase |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "ProverData"
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::pcs::Pcs"
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenge";
                                                Ty.associated_in_trait
                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                  []
                                                  []
                                                  SC
                                                  "Challenger"
                                              ]
                                              (Ty.associated_in_trait
                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                []
                                                []
                                                SC
                                                "Pcs")
                                              "Domain";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    M.alloc (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "openvm_stark_backend::prover::cpu::PcsData")
                                            []
                                            [ SC ]
                                        ],
                                      α0
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let v :=
                                            M.copy (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                    []
                                                    [ SC ]
                                                ],
                                              γ
                                            |) in
                                          M.read (|
                                            let~ domains :
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain";
                                                    Ty.path "alloc::alloc::Global"
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::pcs::Pcs"
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenge";
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Challenger"
                                                      ]
                                                      (Ty.associated_in_trait
                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                        []
                                                        []
                                                        SC
                                                        "Pcs")
                                                      "Domain";
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "core::iter::adapters::copied::Copied")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ Ty.path "u8" ]
                                                        ];
                                                      Ty.function
                                                        [ Ty.path "u8" ]
                                                        (Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain")
                                                    ],
                                                  [],
                                                  [],
                                                  "collect",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::copied::Copied")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [ Ty.path "u8" ]
                                                          ];
                                                        Ty.function
                                                          [ Ty.path "u8" ]
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path
                                                          "core::iter::adapters::copied::Copied")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ Ty.path "u8" ]
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "Domain";
                                                        Ty.function
                                                          [ Ty.path "u8" ]
                                                          (Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "Domain")
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "core::iter::adapters::copied::Copied")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [ Ty.path "u8" ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ Ty.path "u8" ],
                                                          [],
                                                          [],
                                                          "copied",
                                                          [],
                                                          [ Ty.path "u8" ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [ Ty.path "u8" ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "slice")
                                                                []
                                                                [ Ty.path "u8" ],
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          []
                                                                          [ Ty.path "u8" ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::ops::deref::Deref",
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.path "u8";
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "deref",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.SubPointer.get_struct_record_field (|
                                                                          M.deref (|
                                                                            M.read (| v |)
                                                                          |),
                                                                          "openvm_stark_backend::prover::cpu::PcsData",
                                                                          "log_trace_heights"
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |);
                                                      M.read (| domain |)
                                                    ]
                                                  |)
                                                ]
                                              |) in
                                            M.alloc (|
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "ProverData"
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_commit::pcs::Pcs"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "Pcs")
                                                        "Domain";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              Value.Tuple
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "ProverData"
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::convert::AsRef",
                                                      Ty.apply
                                                        (Ty.path "alloc::sync::Arc")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::pcs::Pcs"
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenge";
                                                              Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Challenger"
                                                            ]
                                                            (Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Pcs")
                                                            "ProverData";
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::pcs::Pcs"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Pcs")
                                                          "ProverData"
                                                      ],
                                                      "as_ref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| v |) |),
                                                          "openvm_stark_backend::prover::cpu::PcsData",
                                                          "data"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.read (| domains |)
                                                ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |) in
              M.alloc (|
                Ty.apply
                  (Ty.path "openvm_stark_backend::proof::OpeningProof")
                  []
                  [
                    Ty.associated_in_trait
                      "p3_commit::pcs::Pcs"
                      []
                      [
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenge";
                        Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Challenger"
                      ]
                      (Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Pcs")
                      "Proof";
                    Ty.associated_in_trait
                      "openvm_stark_backend::config::StarkGenericConfig"
                      []
                      []
                      SC
                      "Challenge"
                  ],
                M.call_closure (|
                  Ty.apply
                    (Ty.path "openvm_stark_backend::proof::OpeningProof")
                    []
                    [
                      Ty.associated_in_trait
                        "p3_commit::pcs::Pcs"
                        []
                        [
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenger"
                        ]
                        (Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Pcs")
                        "Proof";
                      Ty.associated_in_trait
                        "openvm_stark_backend::config::StarkGenericConfig"
                        []
                        []
                        SC
                        "Challenge"
                    ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::cpu::opener::OpeningProver")
                      []
                      [ SC ],
                    "open",
                    [],
                    []
                  |),
                  [
                    M.borrow (| Pointer.Kind.Ref, opener |);
                    M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |);
                    M.read (| preprocessed |);
                    M.read (| main |);
                    M.read (| after_phase |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "ProverData"
                            ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::pcs::Pcs"
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenge";
                                    Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Challenger"
                                  ]
                                  (Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Pcs")
                                  "ProverData";
                                Ty.path "alloc::alloc::Global"
                              ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    quotient_data,
                                    "openvm_stark_backend::prover::cpu::PcsData",
                                    "data"
                                  |)
                                |)
                              |)
                            |)
                          ]
                        |)
                      |)
                    |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| quotient_degrees |) |) |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::OpeningProver"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ]
          (Self SC)
          (* Instance *) [ ("open", InstanceField.Method (open SC)) ].
    End Impl_openvm_stark_backend_prover_hal_OpeningProver_where_openvm_stark_backend_config_StarkGenericConfig_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuDevice_SC.
    
    Module Impl_openvm_stark_backend_prover_hal_DeviceDataTransporter_where_openvm_stark_backend_config_StarkGenericConfig_SC_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
      Definition Self (SC : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ].
      
      (*
          fn transport_pk_to_device<'a>(
              &self,
              mpk: &'a MultiStarkProvingKey<SC>,
              air_ids: Vec<usize>,
          ) -> DeviceMultiStarkProvingKey<'a, CpuBackend<SC>>
          where
              SC: 'a,
          {
              assert!(
                  air_ids.len() <= mpk.per_air.len(),
                  "filtering more AIRs than available"
              );
              let per_air = air_ids
                  .iter()
                  .map(|&air_idx| {
                      let pk = &mpk.per_air[air_idx];
                      let preprocessed_data = pk.preprocessed_data.as_ref().map(|pd| {
                          let pcs_data_view = PcsData {
                              data: pd.data.clone(),
                              log_trace_heights: vec![log2_strict_usize(pd.trace.height()) as u8],
                          };
                          SingleCommitPreimage {
                              trace: pd.trace.clone(),
                              data: pcs_data_view,
                              matrix_idx: 0,
                          }
                      });
                      DeviceStarkProvingKey {
                          air_name: &pk.air_name,
                          vk: &pk.vk,
                          preprocessed_data,
                          rap_partial_pk: pk.rap_partial_pk.clone(),
                      }
                  })
                  .collect();
              DeviceMultiStarkProvingKey::new(
                  air_ids,
                  per_air,
                  mpk.trace_height_constraints.clone(),
                  mpk.vk_pre_hash.clone(),
              )
          }
      *)
      Definition transport_pk_to_device
          (SC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self; mpk; air_ids ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ],
                self
              |) in
            let mpk :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "openvm_stark_backend::keygen::types::MultiStarkProvingKey")
                      []
                      [ SC ]
                  ],
                mpk
              |) in
            let air_ids :=
              M.alloc (|
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                air_ids
              |) in
            M.read (|
              let~ _ : Ty.tuple [] :=
                M.match_operator (|
                  Ty.tuple [],
                  M.alloc (| Ty.tuple [], Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              Ty.path "bool",
                              UnOp.not (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  BinOp.le,
                                  [
                                    M.call_closure (|
                                      Ty.path "usize",
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                        "len",
                                        [],
                                        []
                                      |),
                                      [ M.borrow (| Pointer.Kind.Ref, air_ids |) ]
                                    |);
                                    M.call_closure (|
                                      Ty.path "usize",
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path
                                                "openvm_stark_backend::keygen::types::StarkProvingKey")
                                              []
                                              [ SC ];
                                            Ty.path "alloc::alloc::Global"
                                          ],
                                        "len",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| mpk |) |),
                                            "openvm_stark_backend::keygen::types::MultiStarkProvingKey",
                                            "per_air"
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |)
                              |)
                            |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        M.never_to_any (|
                          M.call_closure (|
                            Ty.path "never",
                            M.get_function (| "core::panicking::panic_fmt", [], [] |),
                            [
                              M.call_closure (|
                                Ty.path "core::fmt::Arguments",
                                M.get_associated_function (|
                                  Ty.path "core::fmt::Arguments",
                                  "new_const",
                                  [ Value.Integer IntegerKind.Usize 1 ],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.alloc (|
                                          Ty.apply
                                            (Ty.path "array")
                                            [ Value.Integer IntegerKind.Usize 1 ]
                                            [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ],
                                          Value.Array
                                            [ mk_str (| "filtering more AIRs than available" |) ]
                                        |)
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |)));
                    fun γ => ltac:(M.monadic (Value.Tuple []))
                  ]
                |) in
              let~ per_air :
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                            []
                            [ SC ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ] :=
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                            []
                            [ SC ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply (Ty.path "core::slice::iter::Iter") [] [ Ty.path "usize" ];
                        Ty.function
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ]
                          (Ty.apply
                            (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                []
                                [ SC ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                []
                                [ SC ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply (Ty.path "core::slice::iter::Iter") [] [ Ty.path "usize" ];
                          Ty.function
                            [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ]
                            (Ty.apply
                              (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                  []
                                  [ SC ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply (Ty.path "core::slice::iter::Iter") [] [ Ty.path "usize" ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                            []
                            [
                              Ty.apply
                                (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                []
                                [ SC ]
                            ];
                          Ty.function
                            [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ]
                            (Ty.apply
                              (Ty.path "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                              []
                              [
                                Ty.apply
                                  (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                  []
                                  [ SC ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply (Ty.path "core::slice::iter::Iter") [] [ Ty.path "usize" ],
                          M.get_associated_function (|
                            Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ] ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, air_ids |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path
                                        "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend")
                                          []
                                          [ SC ]
                                      ],
                                    M.alloc (| Ty.apply (Ty.path "&") [] [ Ty.path "usize" ], α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ := M.read (| γ |) in
                                          let air_idx := M.copy (| Ty.path "usize", γ |) in
                                          M.read (|
                                            let~ pk :
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::keygen::types::StarkProvingKey")
                                                      []
                                                      [ SC ]
                                                  ] :=
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::keygen::types::StarkProvingKey")
                                                          []
                                                          [ SC ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::index::Index",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::keygen::types::StarkProvingKey")
                                                            []
                                                            [ SC ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [ Ty.path "usize" ],
                                                      "index",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| mpk |) |),
                                                          "openvm_stark_backend::keygen::types::MultiStarkProvingKey",
                                                          "per_air"
                                                        |)
                                                      |);
                                                      M.read (| air_idx |)
                                                    ]
                                                  |)
                                                |)
                                              |) in
                                            let~ preprocessed_data :
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::sync::Arc")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val";
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                          []
                                                          [ SC ]
                                                      ]
                                                  ] :=
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::option::Option")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::sync::Arc")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val";
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                          []
                                                          [ SC ]
                                                      ]
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData")
                                                            []
                                                            [ SC ]
                                                        ]
                                                    ],
                                                  "map",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::sync::Arc")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::domain::PolynomialSpace"
                                                                  []
                                                                  []
                                                                  (Ty.associated_in_trait
                                                                    "p3_commit::pcs::Pcs"
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenge";
                                                                      Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Challenger"
                                                                    ]
                                                                    (Ty.associated_in_trait
                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                      []
                                                                      []
                                                                      SC
                                                                      "Pcs")
                                                                    "Domain")
                                                                  "Val";
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::domain::PolynomialSpace"
                                                                      []
                                                                      []
                                                                      (Ty.associated_in_trait
                                                                        "p3_commit::pcs::Pcs"
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenge";
                                                                          Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Challenger"
                                                                        ]
                                                                        (Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Pcs")
                                                                        "Domain")
                                                                      "Val";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path
                                                            "openvm_stark_backend::prover::cpu::PcsData")
                                                          []
                                                          [ SC ]
                                                      ];
                                                    Ty.function
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData")
                                                              []
                                                              [ SC ]
                                                          ]
                                                      ]
                                                      (Ty.apply
                                                        (Ty.path
                                                          "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::sync::Arc")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::domain::PolynomialSpace"
                                                                    []
                                                                    []
                                                                    (Ty.associated_in_trait
                                                                      "p3_commit::pcs::Pcs"
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenge";
                                                                        Ty.associated_in_trait
                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                          []
                                                                          []
                                                                          SC
                                                                          "Challenger"
                                                                      ]
                                                                      (Ty.associated_in_trait
                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                        []
                                                                        []
                                                                        SC
                                                                        "Pcs")
                                                                      "Domain")
                                                                    "Val";
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::domain::PolynomialSpace"
                                                                        []
                                                                        []
                                                                        (Ty.associated_in_trait
                                                                          "p3_commit::pcs::Pcs"
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenge";
                                                                            Ty.associated_in_trait
                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                              []
                                                                              []
                                                                              SC
                                                                              "Challenger"
                                                                          ]
                                                                          (Ty.associated_in_trait
                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                            []
                                                                            []
                                                                            SC
                                                                            "Pcs")
                                                                          "Domain")
                                                                        "Val";
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                            []
                                                            [ SC ]
                                                        ])
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData")
                                                              []
                                                              [ SC ]
                                                          ]
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData")
                                                            []
                                                            [ SC ]
                                                        ],
                                                      "as_ref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| pk |) |),
                                                          "openvm_stark_backend::keygen::types::StarkProvingKey",
                                                          "preprocessed_data"
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.closure
                                                    (fun γ =>
                                                      ltac:(M.monadic
                                                        match γ with
                                                        | [ α0 ] =>
                                                          ltac:(M.monadic
                                                            (M.match_operator (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::sync::Arc")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::domain::PolynomialSpace"
                                                                            []
                                                                            []
                                                                            (Ty.associated_in_trait
                                                                              "p3_commit::pcs::Pcs"
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenge";
                                                                                Ty.associated_in_trait
                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                  []
                                                                                  []
                                                                                  SC
                                                                                  "Challenger"
                                                                              ]
                                                                              (Ty.associated_in_trait
                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                []
                                                                                []
                                                                                SC
                                                                                "Pcs")
                                                                              "Domain")
                                                                            "Val";
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                []
                                                                                []
                                                                                (Ty.associated_in_trait
                                                                                  "p3_commit::pcs::Pcs"
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenge";
                                                                                    Ty.associated_in_trait
                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                      []
                                                                                      []
                                                                                      SC
                                                                                      "Challenger"
                                                                                  ]
                                                                                  (Ty.associated_in_trait
                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                    []
                                                                                    []
                                                                                    SC
                                                                                    "Pcs")
                                                                                  "Domain")
                                                                                "Val";
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "openvm_stark_backend::prover::cpu::PcsData")
                                                                    []
                                                                    [ SC ]
                                                                ],
                                                              M.alloc (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData")
                                                                      []
                                                                      [ SC ]
                                                                  ],
                                                                α0
                                                              |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let pd :=
                                                                      M.copy (|
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData")
                                                                              []
                                                                              [ SC ]
                                                                          ],
                                                                        γ
                                                                      |) in
                                                                    M.read (|
                                                                      let~ pcs_data_view :
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "openvm_stark_backend::prover::cpu::PcsData")
                                                                            []
                                                                            [ SC ] :=
                                                                        Value.mkStructRecord
                                                                          "openvm_stark_backend::prover::cpu::PcsData"
                                                                          []
                                                                          [ SC ]
                                                                          [
                                                                            ("data",
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::sync::Arc")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::pcs::Pcs"
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenge";
                                                                                        Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Challenger"
                                                                                      ]
                                                                                      (Ty.associated_in_trait
                                                                                        "openvm_stark_backend::config::StarkGenericConfig"
                                                                                        []
                                                                                        []
                                                                                        SC
                                                                                        "Pcs")
                                                                                      "ProverData";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                M.get_trait_method (|
                                                                                  "core::clone::Clone",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::sync::Arc")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "ProverData";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  [],
                                                                                  [],
                                                                                  "clone",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          pd
                                                                                        |)
                                                                                      |),
                                                                                      "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData",
                                                                                      "data"
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |));
                                                                            ("log_trace_heights",
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.path "u8";
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                M.get_associated_function (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Ty.path "u8"
                                                                                    ],
                                                                                  "into_vec",
                                                                                  [],
                                                                                  [
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::boxed::Box")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "u8"
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    M.pointer_coercion
                                                                                      M.PointerCoercion.Unsize
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::boxed::Box")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "array")
                                                                                            [
                                                                                              Value.Integer
                                                                                                IntegerKind.Usize
                                                                                                1
                                                                                            ]
                                                                                            [
                                                                                              Ty.path
                                                                                                "u8"
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ])
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::boxed::Box")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "u8"
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::boxed::Box")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "array")
                                                                                                [
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    1
                                                                                                ]
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "u8"
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::boxed::Box")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "array")
                                                                                                  [
                                                                                                    Value.Integer
                                                                                                      IntegerKind.Usize
                                                                                                      1
                                                                                                  ]
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "u8"
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            "new",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.alloc (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "array")
                                                                                                [
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    1
                                                                                                ]
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "u8"
                                                                                                ],
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.cast
                                                                                                    (Ty.path
                                                                                                      "u8")
                                                                                                    (M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "usize",
                                                                                                      M.get_function (|
                                                                                                        "p3_util::log2_strict_usize",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "usize",
                                                                                                          M.get_trait_method (|
                                                                                                            "openvm_stark_backend::prover::hal::MatrixDimensions",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::sync::Arc")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                                                      []
                                                                                                                      []
                                                                                                                      (Ty.associated_in_trait
                                                                                                                        "p3_commit::pcs::Pcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            SC
                                                                                                                            "Challenge";
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                            []
                                                                                                                            []
                                                                                                                            SC
                                                                                                                            "Challenger"
                                                                                                                        ]
                                                                                                                        (Ty.associated_in_trait
                                                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          SC
                                                                                                                          "Pcs")
                                                                                                                        "Domain")
                                                                                                                      "Val";
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                                                          []
                                                                                                                          []
                                                                                                                          (Ty.associated_in_trait
                                                                                                                            "p3_commit::pcs::Pcs"
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                SC
                                                                                                                                "Challenge";
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                                []
                                                                                                                                []
                                                                                                                                SC
                                                                                                                                "Challenger"
                                                                                                                            ]
                                                                                                                            (Ty.associated_in_trait
                                                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                                              []
                                                                                                                              []
                                                                                                                              SC
                                                                                                                              "Pcs")
                                                                                                                            "Domain")
                                                                                                                          "Val";
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            [],
                                                                                                            [],
                                                                                                            "height",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    pd
                                                                                                                  |)
                                                                                                                |),
                                                                                                                "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData",
                                                                                                                "trace"
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |))
                                                                                                ]
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |))
                                                                          ] in
                                                                      M.alloc (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "openvm_stark_backend::prover::types::SingleCommitPreimage")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::sync::Arc")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                                              []
                                                                              [ SC ]
                                                                          ],
                                                                        Value.mkStructRecord
                                                                          "openvm_stark_backend::prover::types::SingleCommitPreimage"
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::sync::Arc")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::domain::PolynomialSpace"
                                                                                      []
                                                                                      []
                                                                                      (Ty.associated_in_trait
                                                                                        "p3_commit::pcs::Pcs"
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenge";
                                                                                          Ty.associated_in_trait
                                                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                                                            []
                                                                                            []
                                                                                            SC
                                                                                            "Challenger"
                                                                                        ]
                                                                                        (Ty.associated_in_trait
                                                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                                                          []
                                                                                          []
                                                                                          SC
                                                                                          "Pcs")
                                                                                        "Domain")
                                                                                      "Val";
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "openvm_stark_backend::prover::cpu::PcsData")
                                                                              []
                                                                              [ SC ]
                                                                          ]
                                                                          [
                                                                            ("trace",
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::sync::Arc")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::domain::PolynomialSpace"
                                                                                          []
                                                                                          []
                                                                                          (Ty.associated_in_trait
                                                                                            "p3_commit::pcs::Pcs"
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenge";
                                                                                              Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Challenger"
                                                                                            ]
                                                                                            (Ty.associated_in_trait
                                                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                                                              []
                                                                                              []
                                                                                              SC
                                                                                              "Pcs")
                                                                                            "Domain")
                                                                                          "Val";
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::domain::PolynomialSpace"
                                                                                              []
                                                                                              []
                                                                                              (Ty.associated_in_trait
                                                                                                "p3_commit::pcs::Pcs"
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenge";
                                                                                                  Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Challenger"
                                                                                                ]
                                                                                                (Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Pcs")
                                                                                                "Domain")
                                                                                              "Val";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                M.get_trait_method (|
                                                                                  "core::clone::Clone",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::sync::Arc")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::domain::PolynomialSpace"
                                                                                            []
                                                                                            []
                                                                                            (Ty.associated_in_trait
                                                                                              "p3_commit::pcs::Pcs"
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenge";
                                                                                                Ty.associated_in_trait
                                                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                  []
                                                                                                  []
                                                                                                  SC
                                                                                                  "Challenger"
                                                                                              ]
                                                                                              (Ty.associated_in_trait
                                                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                []
                                                                                                []
                                                                                                SC
                                                                                                "Pcs")
                                                                                              "Domain")
                                                                                            "Val";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::domain::PolynomialSpace"
                                                                                                []
                                                                                                []
                                                                                                (Ty.associated_in_trait
                                                                                                  "p3_commit::pcs::Pcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenge";
                                                                                                    Ty.associated_in_trait
                                                                                                      "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                      []
                                                                                                      []
                                                                                                      SC
                                                                                                      "Challenger"
                                                                                                  ]
                                                                                                  (Ty.associated_in_trait
                                                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                                                    []
                                                                                                    []
                                                                                                    SC
                                                                                                    "Pcs")
                                                                                                  "Domain")
                                                                                                "Val";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  [],
                                                                                  [],
                                                                                  "clone",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          pd
                                                                                        |)
                                                                                      |),
                                                                                      "openvm_stark_backend::keygen::types::ProverOnlySinglePreprocessedData",
                                                                                      "trace"
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |));
                                                                            ("data",
                                                                              M.read (|
                                                                                pcs_data_view
                                                                              |));
                                                                            ("matrix_idx",
                                                                              Value.Integer
                                                                                IntegerKind.U32
                                                                                0)
                                                                          ]
                                                                      |)
                                                                    |)))
                                                              ]
                                                            |)))
                                                        | _ =>
                                                          M.impossible "wrong number of arguments"
                                                        end))
                                                ]
                                              |) in
                                            M.alloc (|
                                              Ty.apply
                                                (Ty.path
                                                  "openvm_stark_backend::prover::types::DeviceStarkProvingKey")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ],
                                              Value.mkStructRecord
                                                "openvm_stark_backend::prover::types::DeviceStarkProvingKey"
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "openvm_stark_backend::prover::cpu::CpuBackend")
                                                    []
                                                    [ SC ]
                                                ]
                                                [
                                                  ("air_name",
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.path "str" ],
                                                          M.get_trait_method (|
                                                            "core::ops::deref::Deref",
                                                            Ty.path "alloc::string::String",
                                                            [],
                                                            [],
                                                            "deref",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    M.deref (| M.read (| pk |) |),
                                                                    "openvm_stark_backend::keygen::types::StarkProvingKey",
                                                                    "air_name"
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |));
                                                  ("vk",
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.deref (| M.read (| pk |) |),
                                                            "openvm_stark_backend::keygen::types::StarkProvingKey",
                                                            "vk"
                                                          |)
                                                        |)
                                                      |)
                                                    |));
                                                  ("preprocessed_data",
                                                    M.read (| preprocessed_data |));
                                                  ("rap_partial_pk",
                                                    M.call_closure (|
                                                      Ty.associated_in_trait
                                                        "openvm_stark_backend::interaction::RapPhaseSeq"
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_commit::domain::PolynomialSpace"
                                                            []
                                                            []
                                                            (Ty.associated_in_trait
                                                              "p3_commit::pcs::Pcs"
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenge";
                                                                Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Challenger"
                                                              ]
                                                              (Ty.associated_in_trait
                                                                "openvm_stark_backend::config::StarkGenericConfig"
                                                                []
                                                                []
                                                                SC
                                                                "Pcs")
                                                              "Domain")
                                                            "Val";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenge";
                                                          Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "Challenger"
                                                        ]
                                                        (Ty.associated_in_trait
                                                          "openvm_stark_backend::config::StarkGenericConfig"
                                                          []
                                                          []
                                                          SC
                                                          "RapPhaseSeq")
                                                        "PartialProvingKey",
                                                      M.get_trait_method (|
                                                        "core::clone::Clone",
                                                        Ty.associated_in_trait
                                                          "openvm_stark_backend::interaction::RapPhaseSeq"
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::domain::PolynomialSpace"
                                                              []
                                                              []
                                                              (Ty.associated_in_trait
                                                                "p3_commit::pcs::Pcs"
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenge";
                                                                  Ty.associated_in_trait
                                                                    "openvm_stark_backend::config::StarkGenericConfig"
                                                                    []
                                                                    []
                                                                    SC
                                                                    "Challenger"
                                                                ]
                                                                (Ty.associated_in_trait
                                                                  "openvm_stark_backend::config::StarkGenericConfig"
                                                                  []
                                                                  []
                                                                  SC
                                                                  "Pcs")
                                                                "Domain")
                                                              "Val";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenge";
                                                            Ty.associated_in_trait
                                                              "openvm_stark_backend::config::StarkGenericConfig"
                                                              []
                                                              []
                                                              SC
                                                              "Challenger"
                                                          ]
                                                          (Ty.associated_in_trait
                                                            "openvm_stark_backend::config::StarkGenericConfig"
                                                            []
                                                            []
                                                            SC
                                                            "RapPhaseSeq")
                                                          "PartialProvingKey",
                                                        [],
                                                        [],
                                                        "clone",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.deref (| M.read (| pk |) |),
                                                            "openvm_stark_backend::keygen::types::StarkProvingKey",
                                                            "rap_partial_pk"
                                                          |)
                                                        |)
                                                      ]
                                                    |))
                                                ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |) in
              M.alloc (|
                Ty.apply
                  (Ty.path "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ],
                M.call_closure (|
                  Ty.apply
                    (Ty.path "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey")
                    []
                    [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ]
                    ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "openvm_stark_backend::prover::types::DeviceMultiStarkProvingKey")
                      []
                      [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ]
                      ],
                    "new",
                    [],
                    []
                  |),
                  [
                    M.read (| air_ids |);
                    M.read (| per_air |);
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.path "openvm_stark_backend::keygen::types::LinearConstraint";
                          Ty.path "alloc::alloc::Global"
                        ],
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.path "openvm_stark_backend::keygen::types::LinearConstraint";
                            Ty.path "alloc::alloc::Global"
                          ],
                        [],
                        [],
                        "clone",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| mpk |) |),
                            "openvm_stark_backend::keygen::types::MultiStarkProvingKey",
                            "trace_height_constraints"
                          |)
                        |)
                      ]
                    |);
                    M.call_closure (|
                      Ty.associated_in_trait
                        "p3_commit::pcs::Pcs"
                        []
                        [
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenge";
                          Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Challenger"
                        ]
                        (Ty.associated_in_trait
                          "openvm_stark_backend::config::StarkGenericConfig"
                          []
                          []
                          SC
                          "Pcs")
                        "Commitment",
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.associated_in_trait
                          "p3_commit::pcs::Pcs"
                          []
                          [
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenge";
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenger"
                          ]
                          (Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Pcs")
                          "Commitment",
                        [],
                        [],
                        "clone",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| mpk |) |),
                            "openvm_stark_backend::keygen::types::MultiStarkProvingKey",
                            "vk_pre_hash"
                          |)
                        |)
                      ]
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn transport_matrix_to_device(
              &self,
              matrix: &Arc<RowMajorMatrix<Val<SC>>>,
          ) -> Arc<RowMajorMatrix<Val<SC>>> {
              matrix.clone()
          }
      *)
      Definition transport_matrix_to_device
          (SC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self; matrix ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ],
                self
              |) in
            let matrix :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::sync::Arc")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::domain::PolynomialSpace"
                              []
                              []
                              (Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain")
                              "Val";
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::domain::PolynomialSpace"
                                  []
                                  []
                                  (Ty.associated_in_trait
                                    "p3_commit::pcs::Pcs"
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenge";
                                      Ty.associated_in_trait
                                        "openvm_stark_backend::config::StarkGenericConfig"
                                        []
                                        []
                                        SC
                                        "Challenger"
                                    ]
                                    (Ty.associated_in_trait
                                      "openvm_stark_backend::config::StarkGenericConfig"
                                      []
                                      []
                                      SC
                                      "Pcs")
                                    "Domain")
                                  "Val";
                                Ty.path "alloc::alloc::Global"
                              ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ],
                matrix
              |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                []
                [
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [
                      Ty.associated_in_trait
                        "p3_commit::domain::PolynomialSpace"
                        []
                        []
                        (Ty.associated_in_trait
                          "p3_commit::pcs::Pcs"
                          []
                          [
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenge";
                            Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Challenger"
                          ]
                          (Ty.associated_in_trait
                            "openvm_stark_backend::config::StarkGenericConfig"
                            []
                            []
                            SC
                            "Pcs")
                          "Domain")
                        "Val";
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.associated_in_trait
                            "p3_commit::domain::PolynomialSpace"
                            []
                            []
                            (Ty.associated_in_trait
                              "p3_commit::pcs::Pcs"
                              []
                              [
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenge";
                                Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Challenger"
                              ]
                              (Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Pcs")
                              "Domain")
                            "Val";
                          Ty.path "alloc::alloc::Global"
                        ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ],
              M.get_trait_method (|
                "core::clone::Clone",
                Ty.apply
                  (Ty.path "alloc::sync::Arc")
                  []
                  [
                    Ty.apply
                      (Ty.path "p3_matrix::dense::DenseMatrix")
                      []
                      [
                        Ty.associated_in_trait
                          "p3_commit::domain::PolynomialSpace"
                          []
                          []
                          (Ty.associated_in_trait
                            "p3_commit::pcs::Pcs"
                            []
                            [
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenge";
                              Ty.associated_in_trait
                                "openvm_stark_backend::config::StarkGenericConfig"
                                []
                                []
                                SC
                                "Challenger"
                            ]
                            (Ty.associated_in_trait
                              "openvm_stark_backend::config::StarkGenericConfig"
                              []
                              []
                              SC
                              "Pcs")
                            "Domain")
                          "Val";
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::domain::PolynomialSpace"
                              []
                              []
                              (Ty.associated_in_trait
                                "p3_commit::pcs::Pcs"
                                []
                                [
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenge";
                                  Ty.associated_in_trait
                                    "openvm_stark_backend::config::StarkGenericConfig"
                                    []
                                    []
                                    SC
                                    "Challenger"
                                ]
                                (Ty.associated_in_trait
                                  "openvm_stark_backend::config::StarkGenericConfig"
                                  []
                                  []
                                  SC
                                  "Pcs")
                                "Domain")
                              "Val";
                            Ty.path "alloc::alloc::Global"
                          ]
                      ];
                    Ty.path "alloc::alloc::Global"
                  ],
                [],
                [],
                "clone",
                [],
                []
              |),
              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| matrix |) |) |) ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (*
          fn transport_pcs_data_to_device(&self, data: &PcsData<SC>) -> PcsData<SC> {
              data.clone()
          }
      *)
      Definition transport_pcs_data_to_device
          (SC : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self SC in
        match ε, τ, α with
        | [], [], [ self; data ] =>
          ltac:(M.monadic
            (let self :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ],
                self
              |) in
            let data :=
              M.alloc (|
                Ty.apply
                  (Ty.path "&")
                  []
                  [ Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ] ],
                data
              |) in
            M.call_closure (|
              Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ],
              M.get_trait_method (|
                "core::clone::Clone",
                Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::PcsData") [] [ SC ],
                [],
                [],
                "clone",
                [],
                []
              |),
              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| data |) |) |) ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (SC : Ty.t),
        M.IsTraitInstance
          "openvm_stark_backend::prover::hal::DeviceDataTransporter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ SC; Ty.apply (Ty.path "openvm_stark_backend::prover::cpu::CpuBackend") [] [ SC ] ]
          (Self SC)
          (* Instance *)
          [
            ("transport_pk_to_device", InstanceField.Method (transport_pk_to_device SC));
            ("transport_matrix_to_device", InstanceField.Method (transport_matrix_to_device SC));
            ("transport_pcs_data_to_device", InstanceField.Method (transport_pcs_data_to_device SC))
          ].
    End Impl_openvm_stark_backend_prover_hal_DeviceDataTransporter_where_openvm_stark_backend_config_StarkGenericConfig_SC_SC_openvm_stark_backend_prover_cpu_CpuBackend_SC_for_openvm_stark_backend_prover_cpu_CpuBackend_SC.
    
    (*
    unsafe fn transmute_to_base<F: Field, EF: ExtensionField<F>>(
        ext_matrix: RowMajorMatrix<EF>,
    ) -> RowMajorMatrix<F> {
        debug_assert_eq!(align_of::<EF>(), align_of::<F>());
        debug_assert_eq!(size_of::<EF>(), size_of::<F>() * EF::D);
        let width = ext_matrix.width * EF::D;
        // Prevent ptr from deallocating
        let mut values = ManuallyDrop::new(ext_matrix.values);
        let mut len = values.len();
        let mut cap = values.capacity();
        let ptr = values.as_mut_ptr();
        len *= EF::D;
        cap *= EF::D;
        // SAFETY:
        // - We know that `ptr` is from `Vec` so it is allocated by global allocator,
        // - Based on assumptions, `EF` and `F` have the same alignment
        // - Based on memory layout assumptions, length and capacity is correct
        let base_values = Vec::from_raw_parts(ptr as *mut F, len, cap);
        RowMajorMatrix::new(base_values, width)
    }
    *)
    Definition transmute_to_base (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [ F; EF ], [ ext_matrix ] =>
        ltac:(M.monadic
          (let ext_matrix :=
            M.alloc (|
              Ty.apply
                (Ty.path "p3_matrix::dense::DenseMatrix")
                []
                [ EF; Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ]
                ],
              ext_matrix
            |) in
          M.read (|
            let~ _ : Ty.tuple [] :=
              M.match_operator (|
                Ty.tuple [],
                M.alloc (| Ty.tuple [], Value.Tuple [] |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                      let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                      M.read (|
                        let~ _ : Ty.tuple [] :=
                          M.match_operator (|
                            Ty.tuple [],
                            M.alloc (|
                              Ty.tuple
                                [
                                  Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                  Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                ],
                              Value.Tuple
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.alloc (|
                                      Ty.path "usize",
                                      M.call_closure (|
                                        Ty.path "usize",
                                        M.get_function (| "core::mem::align_of", [], [ EF ] |),
                                        []
                                      |)
                                    |)
                                  |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.alloc (|
                                      Ty.path "usize",
                                      M.call_closure (|
                                        Ty.path "usize",
                                        M.get_function (| "core::mem::align_of", [], [ F ] |),
                                        []
                                      |)
                                    |)
                                  |)
                                ]
                            |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                  let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                  let left_val :=
                                    M.copy (|
                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                      γ0_0
                                    |) in
                                  let right_val :=
                                    M.copy (|
                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                      γ0_1
                                    |) in
                                  M.match_operator (|
                                    Ty.tuple [],
                                    M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                Ty.path "bool",
                                                UnOp.not (|
                                                  M.call_closure (|
                                                    Ty.path "bool",
                                                    BinOp.eq,
                                                    [
                                                      M.read (|
                                                        M.deref (| M.read (| left_val |) |)
                                                      |);
                                                      M.read (|
                                                        M.deref (| M.read (| right_val |) |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          M.never_to_any (|
                                            M.read (|
                                              let~ kind : Ty.path "core::panicking::AssertKind" :=
                                                Value.StructTuple
                                                  "core::panicking::AssertKind::Eq"
                                                  []
                                                  []
                                                  [] in
                                              M.alloc (|
                                                Ty.path "never",
                                                M.call_closure (|
                                                  Ty.path "never",
                                                  M.get_function (|
                                                    "core::panicking::assert_failed",
                                                    [],
                                                    [ Ty.path "usize"; Ty.path "usize" ]
                                                  |),
                                                  [
                                                    M.read (| kind |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (| M.read (| left_val |) |)
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (| M.read (| right_val |) |)
                                                        |)
                                                      |)
                                                    |);
                                                    Value.StructTuple
                                                      "core::option::Option::None"
                                                      []
                                                      [ Ty.path "core::fmt::Arguments" ]
                                                      []
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)));
                                      fun γ => ltac:(M.monadic (Value.Tuple []))
                                    ]
                                  |)))
                            ]
                          |) in
                        M.alloc (| Ty.tuple [], Value.Tuple [] |)
                      |)));
                  fun γ => ltac:(M.monadic (Value.Tuple []))
                ]
              |) in
            let~ _ : Ty.tuple [] :=
              M.match_operator (|
                Ty.tuple [],
                M.alloc (| Ty.tuple [], Value.Tuple [] |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.use (M.alloc (| Ty.path "bool", Value.Bool true |)) in
                      let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                      M.read (|
                        let~ _ : Ty.tuple [] :=
                          M.match_operator (|
                            Ty.tuple [],
                            M.alloc (|
                              Ty.tuple
                                [
                                  Ty.apply (Ty.path "&") [] [ Ty.path "usize" ];
                                  Ty.apply (Ty.path "&") [] [ Ty.path "usize" ]
                                ],
                              Value.Tuple
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.alloc (|
                                      Ty.path "usize",
                                      M.call_closure (|
                                        Ty.path "usize",
                                        M.get_function (| "core::mem::size_of", [], [ EF ] |),
                                        []
                                      |)
                                    |)
                                  |);
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.alloc (|
                                      Ty.path "usize",
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.mul,
                                        [
                                          M.call_closure (|
                                            Ty.path "usize",
                                            M.get_function (| "core::mem::size_of", [], [ F ] |),
                                            []
                                          |);
                                          M.read (|
                                            get_constant (|
                                              "p3_field::field::FieldExtensionAlgebra::D",
                                              Ty.path "usize"
                                            |)
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)
                                ]
                            |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                  let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                  let left_val :=
                                    M.copy (|
                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                      γ0_0
                                    |) in
                                  let right_val :=
                                    M.copy (|
                                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                                      γ0_1
                                    |) in
                                  M.match_operator (|
                                    Ty.tuple [],
                                    M.alloc (| Ty.tuple [], Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                Ty.path "bool",
                                                UnOp.not (|
                                                  M.call_closure (|
                                                    Ty.path "bool",
                                                    BinOp.eq,
                                                    [
                                                      M.read (|
                                                        M.deref (| M.read (| left_val |) |)
                                                      |);
                                                      M.read (|
                                                        M.deref (| M.read (| right_val |) |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          M.never_to_any (|
                                            M.read (|
                                              let~ kind : Ty.path "core::panicking::AssertKind" :=
                                                Value.StructTuple
                                                  "core::panicking::AssertKind::Eq"
                                                  []
                                                  []
                                                  [] in
                                              M.alloc (|
                                                Ty.path "never",
                                                M.call_closure (|
                                                  Ty.path "never",
                                                  M.get_function (|
                                                    "core::panicking::assert_failed",
                                                    [],
                                                    [ Ty.path "usize"; Ty.path "usize" ]
                                                  |),
                                                  [
                                                    M.read (| kind |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (| M.read (| left_val |) |)
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (| M.read (| right_val |) |)
                                                        |)
                                                      |)
                                                    |);
                                                    Value.StructTuple
                                                      "core::option::Option::None"
                                                      []
                                                      [ Ty.path "core::fmt::Arguments" ]
                                                      []
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)));
                                      fun γ => ltac:(M.monadic (Value.Tuple []))
                                    ]
                                  |)))
                            ]
                          |) in
                        M.alloc (| Ty.tuple [], Value.Tuple [] |)
                      |)));
                  fun γ => ltac:(M.monadic (Value.Tuple []))
                ]
              |) in
            let~ width : Ty.path "usize" :=
              M.call_closure (|
                Ty.path "usize",
                BinOp.Wrap.mul,
                [
                  M.read (|
                    M.SubPointer.get_struct_record_field (|
                      ext_matrix,
                      "p3_matrix::dense::DenseMatrix",
                      "width"
                    |)
                  |);
                  M.read (|
                    get_constant (| "p3_field::field::FieldExtensionAlgebra::D", Ty.path "usize" |)
                  |)
                ]
              |) in
            let~ values :
                Ty.apply
                  (Ty.path "core::mem::manually_drop::ManuallyDrop")
                  []
                  [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ]
                  ] :=
              M.call_closure (|
                Ty.apply
                  (Ty.path "core::mem::manually_drop::ManuallyDrop")
                  []
                  [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ]
                  ],
                M.get_associated_function (|
                  Ty.apply
                    (Ty.path "core::mem::manually_drop::ManuallyDrop")
                    []
                    [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ]
                    ],
                  "new",
                  [],
                  []
                |),
                [
                  M.read (|
                    M.SubPointer.get_struct_record_field (|
                      ext_matrix,
                      "p3_matrix::dense::DenseMatrix",
                      "values"
                    |)
                  |)
                ]
              |) in
            let~ len : Ty.path "usize" :=
              M.call_closure (|
                Ty.path "usize",
                M.get_associated_function (|
                  Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ],
                  "len",
                  [],
                  []
                |),
                [
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ EF; Ty.path "alloc::alloc::Global" ]
                          ],
                        M.get_trait_method (|
                          "core::ops::deref::Deref",
                          Ty.apply
                            (Ty.path "core::mem::manually_drop::ManuallyDrop")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ EF; Ty.path "alloc::alloc::Global" ]
                            ],
                          [],
                          [],
                          "deref",
                          [],
                          []
                        |),
                        [ M.borrow (| Pointer.Kind.Ref, values |) ]
                      |)
                    |)
                  |)
                ]
              |) in
            let~ cap : Ty.path "usize" :=
              M.call_closure (|
                Ty.path "usize",
                M.get_associated_function (|
                  Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ],
                  "capacity",
                  [],
                  []
                |),
                [
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ EF; Ty.path "alloc::alloc::Global" ]
                          ],
                        M.get_trait_method (|
                          "core::ops::deref::Deref",
                          Ty.apply
                            (Ty.path "core::mem::manually_drop::ManuallyDrop")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ EF; Ty.path "alloc::alloc::Global" ]
                            ],
                          [],
                          [],
                          "deref",
                          [],
                          []
                        |),
                        [ M.borrow (| Pointer.Kind.Ref, values |) ]
                      |)
                    |)
                  |)
                ]
              |) in
            let~ ptr : Ty.apply (Ty.path "*mut") [] [ EF ] :=
              M.call_closure (|
                Ty.apply (Ty.path "*mut") [] [ EF ],
                M.get_associated_function (|
                  Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ],
                  "as_mut_ptr",
                  [],
                  []
                |),
                [
                  M.borrow (|
                    Pointer.Kind.MutRef,
                    M.deref (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ EF; Ty.path "alloc::alloc::Global" ]
                          ],
                        M.get_trait_method (|
                          "core::ops::deref::DerefMut",
                          Ty.apply
                            (Ty.path "core::mem::manually_drop::ManuallyDrop")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ EF; Ty.path "alloc::alloc::Global" ]
                            ],
                          [],
                          [],
                          "deref_mut",
                          [],
                          []
                        |),
                        [ M.borrow (| Pointer.Kind.MutRef, values |) ]
                      |)
                    |)
                  |)
                ]
              |) in
            let~ _ : Ty.tuple [] :=
              let β := len in
              M.write (|
                β,
                M.call_closure (|
                  Ty.path "usize",
                  BinOp.Wrap.mul,
                  [
                    M.read (| β |);
                    M.read (|
                      get_constant (|
                        "p3_field::field::FieldExtensionAlgebra::D",
                        Ty.path "usize"
                      |)
                    |)
                  ]
                |)
              |) in
            let~ _ : Ty.tuple [] :=
              let β := cap in
              M.write (|
                β,
                M.call_closure (|
                  Ty.path "usize",
                  BinOp.Wrap.mul,
                  [
                    M.read (| β |);
                    M.read (|
                      get_constant (|
                        "p3_field::field::FieldExtensionAlgebra::D",
                        Ty.path "usize"
                      |)
                    |)
                  ]
                |)
              |) in
            let~ base_values :
                Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ] :=
              M.call_closure (|
                Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ],
                M.get_associated_function (|
                  Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ],
                  "from_raw_parts",
                  [],
                  []
                |),
                [
                  M.cast (Ty.apply (Ty.path "*mut") [] [ F ]) (M.read (| ptr |));
                  M.read (| len |);
                  M.read (| cap |)
                ]
              |) in
            M.alloc (|
              Ty.apply
                (Ty.path "p3_matrix::dense::DenseMatrix")
                []
                [ F; Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ]
                ],
              M.call_closure (|
                Ty.apply
                  (Ty.path "p3_matrix::dense::DenseMatrix")
                  []
                  [ F; Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ]
                  ],
                M.get_associated_function (|
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [
                      F;
                      Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ]
                    ],
                  "new",
                  [],
                  []
                |),
                [ M.read (| base_values |); M.read (| width |) ]
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance Instance_IsFunction_transmute_to_base :
      M.IsFunction.C "openvm_stark_backend::prover::cpu::transmute_to_base" transmute_to_base.
    Admitted.
    Global Typeclasses Opaque transmute_to_base.
  End cpu.
End prover.
